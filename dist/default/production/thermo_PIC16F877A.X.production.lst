

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Jan 14 16:06:52 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	text28,local,class=CODE,merge=1,delta=2
    38                           	psect	text29,local,class=CODE,merge=1,delta=2
    39                           	psect	text30,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     	;# 
    42  0001                     	;# 
    43  0002                     	;# 
    44  0003                     	;# 
    45  0004                     	;# 
    46  0005                     	;# 
    47  0006                     	;# 
    48  0007                     	;# 
    49  0008                     	;# 
    50  0009                     	;# 
    51  000A                     	;# 
    52  000B                     	;# 
    53  000C                     	;# 
    54  000D                     	;# 
    55  000E                     	;# 
    56  000E                     	;# 
    57  000F                     	;# 
    58  0010                     	;# 
    59  0011                     	;# 
    60  0012                     	;# 
    61  0013                     	;# 
    62  0014                     	;# 
    63  0015                     	;# 
    64  0015                     	;# 
    65  0016                     	;# 
    66  0017                     	;# 
    67  0018                     	;# 
    68  0019                     	;# 
    69  001A                     	;# 
    70  001B                     	;# 
    71  001B                     	;# 
    72  001C                     	;# 
    73  001D                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  0081                     	;# 
    77  0085                     	;# 
    78  0086                     	;# 
    79  0087                     	;# 
    80  0088                     	;# 
    81  0089                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  0091                     	;# 
    86  0092                     	;# 
    87  0093                     	;# 
    88  0094                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  009F                     	;# 
    95  010C                     	;# 
    96  010D                     	;# 
    97  010E                     	;# 
    98  010F                     	;# 
    99  018C                     	;# 
   100  018D                     	;# 
   101  0000                     	;# 
   102  0001                     	;# 
   103  0002                     	;# 
   104  0003                     	;# 
   105  0004                     	;# 
   106  0005                     	;# 
   107  0006                     	;# 
   108  0007                     	;# 
   109  0008                     	;# 
   110  0009                     	;# 
   111  000A                     	;# 
   112  000B                     	;# 
   113  000C                     	;# 
   114  000D                     	;# 
   115  000E                     	;# 
   116  000E                     	;# 
   117  000F                     	;# 
   118  0010                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0013                     	;# 
   122  0014                     	;# 
   123  0015                     	;# 
   124  0015                     	;# 
   125  0016                     	;# 
   126  0017                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001B                     	;# 
   131  001B                     	;# 
   132  001C                     	;# 
   133  001D                     	;# 
   134  001E                     	;# 
   135  001F                     	;# 
   136  0081                     	;# 
   137  0085                     	;# 
   138  0086                     	;# 
   139  0087                     	;# 
   140  0088                     	;# 
   141  0089                     	;# 
   142  008C                     	;# 
   143  008D                     	;# 
   144  008E                     	;# 
   145  0091                     	;# 
   146  0092                     	;# 
   147  0093                     	;# 
   148  0094                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  0000                     	;# 
   162  0001                     	;# 
   163  0002                     	;# 
   164  0003                     	;# 
   165  0004                     	;# 
   166  0005                     	;# 
   167  0006                     	;# 
   168  0007                     	;# 
   169  0008                     	;# 
   170  0009                     	;# 
   171  000A                     	;# 
   172  000B                     	;# 
   173  000C                     	;# 
   174  000D                     	;# 
   175  000E                     	;# 
   176  000E                     	;# 
   177  000F                     	;# 
   178  0010                     	;# 
   179  0011                     	;# 
   180  0012                     	;# 
   181  0013                     	;# 
   182  0014                     	;# 
   183  0015                     	;# 
   184  0015                     	;# 
   185  0016                     	;# 
   186  0017                     	;# 
   187  0018                     	;# 
   188  0019                     	;# 
   189  001A                     	;# 
   190  001B                     	;# 
   191  001B                     	;# 
   192  001C                     	;# 
   193  001D                     	;# 
   194  001E                     	;# 
   195  001F                     	;# 
   196  0081                     	;# 
   197  0085                     	;# 
   198  0086                     	;# 
   199  0087                     	;# 
   200  0088                     	;# 
   201  0089                     	;# 
   202  008C                     	;# 
   203  008D                     	;# 
   204  008E                     	;# 
   205  0091                     	;# 
   206  0092                     	;# 
   207  0093                     	;# 
   208  0094                     	;# 
   209  0098                     	;# 
   210  0099                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  018C                     	;# 
   280  018D                     	;# 
   281                           
   282                           	psect	strings
   283  1000                     __pstrings:	
   284  1000                     stringtab:	
   285  1000                     __stringtab:	
   286  1000                     stringcode:	
   287                           ;	String table - string pointers are 1 byte each
   288                           
   289  1000                     stringdir:	
   290  1000  3010               	movlw	high stringdir
   291  1001  008A               	movwf	10
   292  1002  0804               	movf	4,w
   293  1003  0A84               	incf	4,f
   294  1004  0782               	addwf	2,f
   295  1005                     __stringbase:	
   296  1005  3400               	retlw	0
   297  1006                     __end_of__stringtab:	
   298  1006                     _dpowers:	
   299  1006  3401               	retlw	1
   300  1007  3400               	retlw	0
   301  1008  3400               	retlw	0
   302  1009  3400               	retlw	0
   303  100A  340A               	retlw	10
   304  100B  3400               	retlw	0
   305  100C  3400               	retlw	0
   306  100D  3400               	retlw	0
   307  100E  3464               	retlw	100
   308  100F  3400               	retlw	0
   309  1010  3400               	retlw	0
   310  1011  3400               	retlw	0
   311  1012  34E8               	retlw	232
   312  1013  3403               	retlw	3
   313  1014  3400               	retlw	0
   314  1015  3400               	retlw	0
   315  1016  3410               	retlw	16
   316  1017  3427               	retlw	39
   317  1018  3400               	retlw	0
   318  1019  3400               	retlw	0
   319  101A  34A0               	retlw	160
   320  101B  3486               	retlw	134
   321  101C  3401               	retlw	1
   322  101D  3400               	retlw	0
   323  101E  3440               	retlw	64
   324  101F  3442               	retlw	66
   325  1020  340F               	retlw	15
   326  1021  3400               	retlw	0
   327  1022  3480               	retlw	128
   328  1023  3496               	retlw	150
   329  1024  3498               	retlw	152
   330  1025  3400               	retlw	0
   331  1026  3400               	retlw	0
   332  1027  34E1               	retlw	225
   333  1028  34F5               	retlw	245
   334  1029  3405               	retlw	5
   335  102A  3400               	retlw	0
   336  102B  34CA               	retlw	202
   337  102C  349A               	retlw	154
   338  102D  343B               	retlw	59
   339  102E                     __end_of_dpowers:	
   340  102E                     __npowers_:	
   341  102E  3400               	retlw	0
   342  102F  3480               	retlw	128
   343  1030  343F               	retlw	63
   344  1031  34CD               	retlw	205
   345  1032  34CC               	retlw	204
   346  1033  343D               	retlw	61
   347  1034  34D7               	retlw	215
   348  1035  3423               	retlw	35
   349  1036  343C               	retlw	60
   350  1037  3412               	retlw	18
   351  1038  3483               	retlw	131
   352  1039  343A               	retlw	58
   353  103A  34B7               	retlw	183
   354  103B  34D1               	retlw	209
   355  103C  3438               	retlw	56
   356  103D  34C6               	retlw	198
   357  103E  3427               	retlw	39
   358  103F  3437               	retlw	55
   359  1040  3438               	retlw	56
   360  1041  3486               	retlw	134
   361  1042  3435               	retlw	53
   362  1043  34C0               	retlw	192
   363  1044  34D6               	retlw	214
   364  1045  3433               	retlw	51
   365  1046  34CC               	retlw	204
   366  1047  342B               	retlw	43
   367  1048  3432               	retlw	50
   368  1049  3470               	retlw	112
   369  104A  3489               	retlw	137
   370  104B  3430               	retlw	48
   371  104C  34E7               	retlw	231
   372  104D  34DB               	retlw	219
   373  104E  342E               	retlw	46
   374  104F  34E5               	retlw	229
   375  1050  343C               	retlw	60
   376  1051  341E               	retlw	30
   377  1052  3442               	retlw	66
   378  1053  34A2               	retlw	162
   379  1054  340D               	retlw	13
   380  1055                     __end_of__npowers_:	
   381  1055                     __powers_:	
   382  1055  3400               	retlw	0
   383  1056  3480               	retlw	128
   384  1057  343F               	retlw	63
   385  1058  3400               	retlw	0
   386  1059  3420               	retlw	32
   387  105A  3441               	retlw	65
   388  105B  3400               	retlw	0
   389  105C  34C8               	retlw	200
   390  105D  3442               	retlw	66
   391  105E  3400               	retlw	0
   392  105F  347A               	retlw	122
   393  1060  3444               	retlw	68
   394  1061  3440               	retlw	64
   395  1062  341C               	retlw	28
   396  1063  3446               	retlw	70
   397  1064  3450               	retlw	80
   398  1065  34C3               	retlw	195
   399  1066  3447               	retlw	71
   400  1067  3424               	retlw	36
   401  1068  3474               	retlw	116
   402  1069  3449               	retlw	73
   403  106A  3497               	retlw	151
   404  106B  3418               	retlw	24
   405  106C  344B               	retlw	75
   406  106D  34BC               	retlw	188
   407  106E  34BE               	retlw	190
   408  106F  344C               	retlw	76
   409  1070  346B               	retlw	107
   410  1071  346E               	retlw	110
   411  1072  344E               	retlw	78
   412  1073  3403               	retlw	3
   413  1074  3415               	retlw	21
   414  1075  3450               	retlw	80
   415  1076  3479               	retlw	121
   416  1077  34AD               	retlw	173
   417  1078  3460               	retlw	96
   418  1079  34F3               	retlw	243
   419  107A  3449               	retlw	73
   420  107B  3471               	retlw	113
   421  107C                     __end_of__powers_:	
   422  107C                     get_adcon@range:	
   423  107C  34FF               	retlw	255
   424  107D  3403               	retlw	3
   425  107E                     __end_ofget_adcon@range:	
   426  001F                     _ADCON0	set	31
   427  001F                     _ADCON0bits	set	31
   428  001E                     _ADRESH	set	30
   429  0005                     _PORTAbits	set	5
   430  0008                     _PORTDbits	set	8
   431  001A                     _RCREG	set	26
   432  0018                     _RCSTA	set	24
   433  0019                     _TXREG	set	25
   434  0065                     _RCIF	set	101
   435  0044                     _RD4	set	68
   436  0064                     _TXIF	set	100
   437  009F                     _ADCON1	set	159
   438  009E                     _ADRESL	set	158
   439  0099                     _SPBRG	set	153
   440  0085                     _TRISAbits	set	133
   441  0088                     _TRISDbits	set	136
   442  0098                     _TXSTA	set	152
   443  043F                     _TRISC7	set	1087
   444  107E                     STR_2:	
   445  107E  3454               	retlw	84	;'T'
   446  107F  3420               	retlw	32	;' '
   447  1080  343D               	retlw	61	;'='
   448  1081  3420               	retlw	32	;' '
   449  1082  3425               	retlw	37	;'%'
   450  1083  342E               	retlw	46	;'.'
   451  1084  3432               	retlw	50	;'2'
   452  1085  3466               	retlw	102	;'f'
   453  1086  345B               	retlw	91	;'['
   454  1087  34E2               	retlw	-30
   455  1088  3484               	retlw	-124
   456  1089  3483               	retlw	-125
   457  108A  345D               	retlw	93	;']'
   458  108B  340D               	retlw	13
   459  108C  340A               	retlw	10
   460  108D  3400               	retlw	0
   461  108E                     STR_1:	
   462  108E  3453               	retlw	83	;'S'
   463  108F  3474               	retlw	116	;'t'
   464  1090  3461               	retlw	97	;'a'
   465  1091  3472               	retlw	114	;'r'
   466  1092  3474               	retlw	116	;'t'
   467  1093  345F               	retlw	95	;'_'
   468  1094  3454               	retlw	84	;'T'
   469  1095  3465               	retlw	101	;'e'
   470  1096  346D               	retlw	109	;'m'
   471  1097  3470               	retlw	112	;'p'
   472  1098  3421               	retlw	33	;'!'
   473  1099  340D               	retlw	13
   474  109A  340A               	retlw	10
   475  109B  3400               	retlw	0
   476                           
   477                           ; #config settings
   478  0000                     
   479                           	psect	cinit
   480  07FC                     start_initialization:	
   481  07FC                     __initialization:	
   482  07FC                     end_of_initialization:	
   483                           ;End of C runtime variable initialization code
   484                           
   485  07FC                     __end_of__initialization:	
   486  07FC  0183               	clrf	3
   487  07FD  160A  118A  2A24   	ljmp	_main	;jump to C main() function
   488                           
   489                           	psect	cstackBANK1
   490  00A0                     __pcstackBANK1:	
   491  00A0                     get_pt@R2:	
   492                           
   493                           ; 3 bytes @ 0x0
   494  00A0                     	ds	3
   495  00A3                     get_pt@T2:	
   496                           
   497                           ; 3 bytes @ 0x3
   498  00A3                     	ds	3
   499  00A6                     get_pt@b:	
   500                           
   501                           ; 3 bytes @ 0x6
   502  00A6                     	ds	3
   503  00A9                     _get_pt$711:	
   504                           
   505                           ; 3 bytes @ 0x9
   506  00A9                     	ds	3
   507  00AC                     _get_pt$712:	
   508                           
   509                           ; 3 bytes @ 0xC
   510  00AC                     	ds	3
   511  00AF                     _get_pt$714:	
   512                           
   513                           ; 3 bytes @ 0xF
   514  00AF                     	ds	3
   515  00B2                     _get_pt$715:	
   516                           
   517                           ; 3 bytes @ 0x12
   518  00B2                     	ds	3
   519  00B5                     get_pt@R1:	
   520                           
   521                           ; 3 bytes @ 0x15
   522  00B5                     	ds	3
   523  00B8                     _get_pt$713:	
   524                           
   525                           ; 3 bytes @ 0x18
   526  00B8                     	ds	3
   527  00BB                     get_pt@T1:	
   528                           
   529                           ; 3 bytes @ 0x1B
   530  00BB                     	ds	3
   531  00BE                     get_pt@a:	
   532                           
   533                           ; 3 bytes @ 0x1E
   534  00BE                     	ds	3
   535  00C1                     _get_temp$716:	
   536                           
   537                           ; 3 bytes @ 0x21
   538  00C1                     	ds	3
   539  00C4                     get_temp@T:	
   540                           
   541                           ; 3 bytes @ 0x24
   542  00C4                     	ds	3
   543  00C7                     get_temp@t:	
   544                           
   545                           ; 3 bytes @ 0x27
   546  00C7                     	ds	3
   547  00CA                     get_temp@i:	
   548                           
   549                           ; 2 bytes @ 0x2A
   550  00CA                     	ds	2
   551  00CC                     ??_printf:	
   552                           
   553                           ; 0 bytes @ 0x2C
   554  00CC                     	ds	6
   555  00D2                     _printf$720:	
   556                           
   557                           ; 3 bytes @ 0x32
   558  00D2                     	ds	3
   559  00D5                     printf@ap:	
   560                           
   561                           ; 1 bytes @ 0x35
   562  00D5                     	ds	1
   563  00D6                     printf@flag:	
   564                           
   565                           ; 2 bytes @ 0x36
   566  00D6                     	ds	2
   567  00D8                     printf@f:	
   568                           
   569                           ; 1 bytes @ 0x38
   570  00D8                     	ds	1
   571  00D9                     printf@val:	
   572                           
   573                           ; 4 bytes @ 0x39
   574  00D9                     	ds	4
   575  00DD                     printf@exp:	
   576                           
   577                           ; 2 bytes @ 0x3D
   578  00DD                     	ds	2
   579  00DF                     printf@tmpval:	
   580                           
   581                           ; 4 bytes @ 0x3F
   582  00DF                     	ds	4
   583  00E3                     printf@prec:	
   584                           
   585                           ; 2 bytes @ 0x43
   586  00E3                     	ds	2
   587  00E5                     printf@fval:	
   588                           
   589                           ; 3 bytes @ 0x45
   590  00E5                     	ds	3
   591  00E8                     printf@c:	
   592                           
   593                           ; 1 bytes @ 0x48
   594  00E8                     	ds	1
   595                           
   596                           	psect	cstackCOMMON
   597  0070                     __pcstackCOMMON:	
   598  0070                     ?_uart_init:	
   599  0070                     ??_uart_init:	
   600                           ; 0 bytes @ 0x0
   601                           
   602  0070                     ?_ad_con_init:	
   603                           ; 0 bytes @ 0x0
   604                           
   605  0070                     ??_ad_con_init:	
   606                           ; 0 bytes @ 0x0
   607                           
   608  0070                     ?_isdigit:	
   609                           ; 0 bytes @ 0x0
   610                           
   611  0070                     ??_isdigit:	
   612                           ; 1 bit 
   613                           
   614  0070                     ?_putch:	
   615                           ; 0 bytes @ 0x0
   616                           
   617  0070                     ??_putch:	
   618                           ; 0 bytes @ 0x0
   619                           
   620  0070                     ?___ftge:	
   621                           ; 0 bytes @ 0x0
   622                           
   623  0070                     ?_main:	
   624                           ; 1 bit 
   625                           
   626  0070                     ?_bit_shift:	
   627                           ; 2 bytes @ 0x0
   628                           
   629  0070                     ?___wmul:	
   630                           ; 2 bytes @ 0x0
   631                           
   632  0070                     ?___awmod:	
   633                           ; 2 bytes @ 0x0
   634                           
   635  0070                     ?___ftpack:	
   636                           ; 2 bytes @ 0x0
   637                           
   638  0070                     ?__tdiv_to_l_:	
   639                           ; 3 bytes @ 0x0
   640                           
   641  0070                     ?__div_to_l_:	
   642                           ; 4 bytes @ 0x0
   643                           
   644  0070                     ?___lldiv:	
   645                           ; 4 bytes @ 0x0
   646                           
   647  0070                     ?___llmod:	
   648                           ; 4 bytes @ 0x0
   649                           
   650  0070                     putch@byte:	
   651                           ; 4 bytes @ 0x0
   652                           
   653  0070                     bit_shift@my_adres_l:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     _isdigit$494:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ___wmul@multiplier:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ___awmod@divisor:	
   663                           ; 2 bytes @ 0x0
   664                           
   665  0070                     __div_to_l_@f1:	
   666                           ; 2 bytes @ 0x0
   667                           
   668  0070                     ___ftpack@arg:	
   669                           ; 3 bytes @ 0x0
   670                           
   671  0070                     __tdiv_to_l_@f1:	
   672                           ; 3 bytes @ 0x0
   673                           
   674  0070                     ___ftge@ff1:	
   675                           ; 3 bytes @ 0x0
   676                           
   677  0070                     ___lldiv@divisor:	
   678                           ; 3 bytes @ 0x0
   679                           
   680  0070                     ___llmod@divisor:	
   681                           ; 4 bytes @ 0x0
   682                           
   683                           
   684                           ; 4 bytes @ 0x0
   685  0070                     	ds	1
   686  0071                     isdigit@c:	
   687                           
   688                           ; 1 bytes @ 0x1
   689  0071                     	ds	1
   690  0072                     ??_bit_shift:	
   691  0072                     ___wmul@multiplicand:	
   692                           ; 0 bytes @ 0x2
   693                           
   694  0072                     ___awmod@dividend:	
   695                           ; 2 bytes @ 0x2
   696                           
   697                           
   698                           ; 2 bytes @ 0x2
   699  0072                     	ds	1
   700  0073                     ___ftpack@exp:	
   701  0073                     __div_to_l_@f2:	
   702                           ; 1 bytes @ 0x3
   703                           
   704  0073                     __tdiv_to_l_@f2:	
   705                           ; 3 bytes @ 0x3
   706                           
   707  0073                     ___ftge@ff2:	
   708                           ; 3 bytes @ 0x3
   709                           
   710                           
   711                           ; 3 bytes @ 0x3
   712  0073                     	ds	1
   713  0074                     ??___wmul:	
   714  0074                     ??___awmod:	
   715                           ; 0 bytes @ 0x4
   716                           
   717  0074                     bit_shift@my_adres_h:	
   718                           ; 0 bytes @ 0x4
   719                           
   720  0074                     ___ftpack@sign:	
   721                           ; 1 bytes @ 0x4
   722                           
   723  0074                     ___wmul@product:	
   724                           ; 1 bytes @ 0x4
   725                           
   726  0074                     ___lldiv@dividend:	
   727                           ; 2 bytes @ 0x4
   728                           
   729  0074                     ___llmod@dividend:	
   730                           ; 4 bytes @ 0x4
   731                           
   732                           
   733                           ; 4 bytes @ 0x4
   734  0074                     	ds	1
   735  0075                     ??___ftpack:	
   736  0075                     ___awmod@counter:	
   737                           ; 0 bytes @ 0x5
   738                           
   739  0075                     bit_shift@ad_value:	
   740                           ; 1 bytes @ 0x5
   741                           
   742                           
   743                           ; 2 bytes @ 0x5
   744  0075                     	ds	1
   745  0076                     ??__tdiv_to_l_:	
   746  0076                     ??__div_to_l_:	
   747                           ; 0 bytes @ 0x6
   748                           
   749  0076                     ??___ftge:	
   750                           ; 0 bytes @ 0x6
   751                           
   752  0076                     ___awmod@sign:	
   753                           ; 0 bytes @ 0x6
   754                           
   755                           
   756                           ; 1 bytes @ 0x6
   757  0076                     	ds	1
   758  0077                     ?___awdiv:	
   759  0077                     bit_shift@i:	
   760                           ; 2 bytes @ 0x7
   761                           
   762  0077                     ___awdiv@divisor:	
   763                           ; 2 bytes @ 0x7
   764                           
   765                           
   766                           ; 2 bytes @ 0x7
   767  0077                     	ds	1
   768  0078                     ??___lldiv:	
   769  0078                     ??___llmod:	
   770                           ; 0 bytes @ 0x8
   771                           
   772  0078                     ?___awtoft:	
   773                           ; 0 bytes @ 0x8
   774                           
   775  0078                     ?___lltoft:	
   776                           ; 3 bytes @ 0x8
   777                           
   778  0078                     ?___lwtoft:	
   779                           ; 3 bytes @ 0x8
   780                           
   781  0078                     ___awtoft@c:	
   782                           ; 3 bytes @ 0x8
   783                           
   784  0078                     ___lwtoft@c:	
   785                           ; 2 bytes @ 0x8
   786                           
   787  0078                     ___lltoft@c:	
   788                           ; 2 bytes @ 0x8
   789                           
   790                           
   791                           ; 4 bytes @ 0x8
   792  0078                     	ds	1
   793  0079                     bit_shift@bit_mask:	
   794  0079                     ___llmod@counter:	
   795                           ; 1 bytes @ 0x9
   796                           
   797  0079                     ___awdiv@dividend:	
   798                           ; 1 bytes @ 0x9
   799                           
   800  0079                     ___lldiv@quotient:	
   801                           ; 2 bytes @ 0x9
   802                           
   803                           
   804                           ; 4 bytes @ 0x9
   805  0079                     	ds	1
   806  007A                     bit_shift@j:	
   807                           
   808                           ; 2 bytes @ 0xA
   809  007A                     	ds	1
   810  007B                     ??___awdiv:	
   811  007B                     ??___awtoft:	
   812                           ; 0 bytes @ 0xB
   813                           
   814  007B                     ??___lwtoft:	
   815                           ; 0 bytes @ 0xB
   816                           
   817                           
   818                           ; 0 bytes @ 0xB
   819  007B                     	ds	1
   820  007C                     ??___bmul:	
   821  007C                     ??___lltoft:	
   822                           ; 0 bytes @ 0xC
   823                           
   824  007C                     bit_shift@buf:	
   825                           ; 0 bytes @ 0xC
   826                           
   827                           
   828                           ; 1 bytes @ 0xC
   829  007C                     	ds	1
   830  007D                     ___awtoft@sign:	
   831  007D                     ___lldiv@counter:	
   832                           ; 1 bytes @ 0xD
   833                           
   834  007D                     ___lltoft@exp:	
   835                           ; 1 bytes @ 0xD
   836                           
   837                           
   838                           ; 1 bytes @ 0xD
   839  007D                     	ds	1
   840  007E                     ??_get_temp:	
   841  007E                     ??_main:	
   842                           ; 0 bytes @ 0xE
   843                           
   844  007E                     ??_get_pt:	
   845                           ; 0 bytes @ 0xE
   846                           
   847  007E                     ??___ftneg:	
   848                           ; 0 bytes @ 0xE
   849                           
   850  007E                     ??___ftsub:	
   851                           ; 0 bytes @ 0xE
   852                           
   853                           
   854                           	psect	cstackBANK0
   855  0020                     __pcstackBANK0:	
   856                           ; 0 bytes @ 0xE
   857                           
   858  0020                     ?___ftdiv:	
   859  0020                     ___awdiv@counter:	
   860                           ; 3 bytes @ 0x0
   861                           
   862  0020                     ___ftdiv@f2:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0020                     __div_to_l_@quot:	
   866                           ; 3 bytes @ 0x0
   867                           
   868  0020                     __tdiv_to_l_@quot:	
   869                           ; 4 bytes @ 0x0
   870                           
   871                           
   872                           ; 4 bytes @ 0x0
   873  0020                     	ds	1
   874  0021                     ___awdiv@sign:	
   875                           
   876                           ; 1 bytes @ 0x1
   877  0021                     	ds	1
   878  0022                     ___awdiv@quotient:	
   879                           
   880                           ; 2 bytes @ 0x2
   881  0022                     	ds	1
   882  0023                     ___ftdiv@f1:	
   883                           
   884                           ; 3 bytes @ 0x3
   885  0023                     	ds	1
   886  0024                     ?___bmul:	
   887  0024                     ___bmul@multiplicand:	
   888                           ; 1 bytes @ 0x4
   889                           
   890  0024                     __div_to_l_@cntr:	
   891                           ; 1 bytes @ 0x4
   892                           
   893  0024                     __tdiv_to_l_@cntr:	
   894                           ; 1 bytes @ 0x4
   895                           
   896                           
   897                           ; 1 bytes @ 0x4
   898  0024                     	ds	1
   899  0025                     ___bmul@product:	
   900  0025                     __div_to_l_@exp1:	
   901                           ; 1 bytes @ 0x5
   902                           
   903  0025                     __tdiv_to_l_@exp1:	
   904                           ; 1 bytes @ 0x5
   905                           
   906                           
   907                           ; 1 bytes @ 0x5
   908  0025                     	ds	1
   909  0026                     ??___ftdiv:	
   910  0026                     ___bmul@multiplier:	
   911                           ; 0 bytes @ 0x6
   912                           
   913                           
   914                           ; 1 bytes @ 0x6
   915  0026                     	ds	4
   916  002A                     ___ftdiv@cntr:	
   917                           
   918                           ; 1 bytes @ 0xA
   919  002A                     	ds	1
   920  002B                     ___ftdiv@f3:	
   921                           
   922                           ; 3 bytes @ 0xB
   923  002B                     	ds	3
   924  002E                     ___ftdiv@exp:	
   925                           
   926                           ; 1 bytes @ 0xE
   927  002E                     	ds	1
   928  002F                     ___ftdiv@sign:	
   929                           
   930                           ; 1 bytes @ 0xF
   931  002F                     	ds	1
   932  0030                     ?___ftmul:	
   933  0030                     ___ftmul@f1:	
   934                           ; 3 bytes @ 0x10
   935                           
   936                           
   937                           ; 3 bytes @ 0x10
   938  0030                     	ds	3
   939  0033                     ___ftmul@f2:	
   940                           
   941                           ; 3 bytes @ 0x13
   942  0033                     	ds	3
   943  0036                     ??___ftmul:	
   944                           
   945                           ; 0 bytes @ 0x16
   946  0036                     	ds	4
   947  003A                     ___ftmul@exp:	
   948                           
   949                           ; 1 bytes @ 0x1A
   950  003A                     	ds	1
   951  003B                     ___ftmul@f3_as_product:	
   952                           
   953                           ; 3 bytes @ 0x1B
   954  003B                     	ds	3
   955  003E                     ___ftmul@cntr:	
   956                           
   957                           ; 1 bytes @ 0x1E
   958  003E                     	ds	1
   959  003F                     ___ftmul@sign:	
   960                           
   961                           ; 1 bytes @ 0x1F
   962  003F                     	ds	1
   963  0040                     ?_get_adcon:	
   964  0040                     ?_fround:	
   965                           ; 3 bytes @ 0x20
   966                           
   967  0040                     ?_scale:	
   968                           ; 3 bytes @ 0x20
   969                           
   970                           
   971                           ; 3 bytes @ 0x20
   972  0040                     	ds	3
   973  0043                     ??_get_adcon:	
   974  0043                     ??_fround:	
   975                           ; 0 bytes @ 0x23
   976                           
   977  0043                     ??_scale:	
   978                           ; 0 bytes @ 0x23
   979                           
   980                           
   981                           ; 0 bytes @ 0x23
   982  0043                     	ds	2
   983  0045                     _scale$719:	
   984                           
   985                           ; 3 bytes @ 0x25
   986  0045                     	ds	2
   987  0047                     get_adcon@my_adres_h:	
   988                           
   989                           ; 4 bytes @ 0x27
   990  0047                     	ds	1
   991  0048                     scale@scl:	
   992                           
   993                           ; 1 bytes @ 0x28
   994  0048                     	ds	1
   995  0049                     ?___fttol:	
   996  0049                     ___fttol@f1:	
   997                           ; 4 bytes @ 0x29
   998                           
   999  0049                     _fround$718:	
  1000                           ; 3 bytes @ 0x29
  1001                           
  1002                           
  1003                           ; 3 bytes @ 0x29
  1004  0049                     	ds	2
  1005  004B                     get_adcon@my_adres_l:	
  1006                           
  1007                           ; 4 bytes @ 0x2B
  1008  004B                     	ds	1
  1009  004C                     _fround$717:	
  1010                           
  1011                           ; 3 bytes @ 0x2C
  1012  004C                     	ds	1
  1013  004D                     ??___fttol:	
  1014                           
  1015                           ; 0 bytes @ 0x2D
  1016  004D                     	ds	2
  1017  004F                     fround@prec:	
  1018  004F                     get_adcon@voltage_value:	
  1019                           ; 1 bytes @ 0x2F
  1020                           
  1021                           
  1022                           ; 3 bytes @ 0x2F
  1023  004F                     	ds	2
  1024  0051                     ___fttol@sign1:	
  1025                           
  1026                           ; 1 bytes @ 0x31
  1027  0051                     	ds	1
  1028  0052                     get_adcon@ad_value:	
  1029  0052                     ___fttol@lval:	
  1030                           ; 2 bytes @ 0x32
  1031                           
  1032                           
  1033                           ; 4 bytes @ 0x32
  1034  0052                     	ds	2
  1035  0054                     ?___ftneg:	
  1036  0054                     ___ftneg@f1:	
  1037                           ; 3 bytes @ 0x34
  1038                           
  1039                           
  1040                           ; 3 bytes @ 0x34
  1041  0054                     	ds	2
  1042  0056                     ___fttol@exp1:	
  1043                           
  1044                           ; 1 bytes @ 0x36
  1045  0056                     	ds	1
  1046  0057                     ?___ftadd:	
  1047  0057                     ___ftadd@f1:	
  1048                           ; 3 bytes @ 0x37
  1049                           
  1050                           
  1051                           ; 3 bytes @ 0x37
  1052  0057                     	ds	3
  1053  005A                     ___ftadd@f2:	
  1054                           
  1055                           ; 3 bytes @ 0x3A
  1056  005A                     	ds	3
  1057  005D                     ??___ftadd:	
  1058                           
  1059                           ; 0 bytes @ 0x3D
  1060  005D                     	ds	4
  1061  0061                     ___ftadd@sign:	
  1062                           
  1063                           ; 1 bytes @ 0x41
  1064  0061                     	ds	1
  1065  0062                     ___ftadd@exp2:	
  1066                           
  1067                           ; 1 bytes @ 0x42
  1068  0062                     	ds	1
  1069  0063                     ___ftadd@exp1:	
  1070                           
  1071                           ; 1 bytes @ 0x43
  1072  0063                     	ds	1
  1073  0064                     ?_get_pt:	
  1074  0064                     ?___ftsub:	
  1075                           ; 3 bytes @ 0x44
  1076                           
  1077  0064                     ___ftsub@f2:	
  1078                           ; 3 bytes @ 0x44
  1079                           
  1080                           
  1081                           ; 3 bytes @ 0x44
  1082  0064                     	ds	3
  1083  0067                     ?_get_temp:	
  1084  0067                     ___ftsub@f1:	
  1085                           ; 3 bytes @ 0x47
  1086                           
  1087                           
  1088                           ; 3 bytes @ 0x47
  1089  0067                     	ds	3
  1090  006A                     ?_printf:	
  1091                           
  1092                           ; 2 bytes @ 0x4A
  1093  006A                     	ds	3
  1094                           
  1095                           	psect	maintext
  1096  1224                     __pmaintext:	
  1097 ;;
  1098 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1099 ;;
  1100 ;; *************** function _main *****************
  1101 ;; Defined at:
  1102 ;;		line 30 in file "newmain.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;		None
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  2   16[None  ] int 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : B00/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1116 ;;      Params:         0       0       0       0       0
  1117 ;;      Locals:         0       0       0       0       0
  1118 ;;      Temps:          0       0       0       0       0
  1119 ;;      Totals:         0       0       0       0       0
  1120 ;;Total ram usage:        0 bytes
  1121 ;; Hardware stack levels required when called:    5
  1122 ;; This function calls:
  1123 ;;		_ad_con_init
  1124 ;;		_get_temp
  1125 ;;		_printf
  1126 ;;		_uart_init
  1127 ;; This function is called by:
  1128 ;;		Startup code after reset
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           
  1133                           ;psect for function _main
  1134  1224                     _main:	
  1135                           
  1136                           ;newmain.c: 32: TRISDbits.TRISD4 = 0;
  1137                           
  1138                           ;incstack = 0
  1139                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1140  1224  1683               	bsf	3,5	;RP0=1, select bank1
  1141  1225  1303               	bcf	3,6	;RP1=0, select bank1
  1142  1226  1208               	bcf	8,4	;volatile
  1143                           
  1144                           ;newmain.c: 33: PORTDbits.RD4 =0;
  1145  1227  1283               	bcf	3,5	;RP0=0, select bank0
  1146  1228  1303               	bcf	3,6	;RP1=0, select bank0
  1147  1229  1208               	bcf	8,4	;volatile
  1148                           
  1149                           ;newmain.c: 34: uart_init();
  1150  122A  160A  118A  2155  160A  118A  	fcall	_uart_init
  1151                           
  1152                           ;newmain.c: 35: ad_con_init();
  1153  122F  160A  118A  214A  160A  118A  	fcall	_ad_con_init
  1154                           
  1155                           ;newmain.c: 36: printf("Start_Temp!\r\n");
  1156  1234  3089               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1157  1235  120A  118A  2264  160A  118A  	fcall	_printf
  1158  123A                     l2589:	
  1159                           ;newmain.c: 39: while(1){
  1160                           
  1161                           
  1162                           ;newmain.c: 40: RD4 = 1;
  1163  123A  1283               	bcf	3,5	;RP0=0, select bank0
  1164  123B  1303               	bcf	3,6	;RP1=0, select bank0
  1165  123C  1608               	bsf	8,4	;volatile
  1166                           
  1167                           ;newmain.c: 41: printf("T = %.2f[℃]\r\n", get_temp());
  1168  123D  160A  118A  2671  160A  118A  	fcall	_get_temp
  1169  1242  1283               	bcf	3,5	;RP0=0, select bank0
  1170  1243  1303               	bcf	3,6	;RP1=0, select bank0
  1171  1244  0867               	movf	?_get_temp,w
  1172  1245  00EA               	movwf	?_printf
  1173  1246  0868               	movf	?_get_temp+1,w
  1174  1247  00EB               	movwf	?_printf+1
  1175  1248  0869               	movf	?_get_temp+2,w
  1176  1249  00EC               	movwf	?_printf+2
  1177  124A  3079               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1178  124B  120A  118A  2264  160A  118A  	fcall	_printf
  1179                           
  1180                           ;newmain.c: 42: RD4 = 0;
  1181  1250  1283               	bcf	3,5	;RP0=0, select bank0
  1182  1251  1303               	bcf	3,6	;RP1=0, select bank0
  1183  1252  1208               	bcf	8,4	;volatile
  1184  1253  2A3A               	goto	l2589
  1185  1254                     __end_of_main:	
  1186                           
  1187                           	psect	text1
  1188  1155                     __ptext1:	
  1189 ;; *************** function _uart_init *****************
  1190 ;; Defined at:
  1191 ;;		line 29 in file "uart_serial.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;		None
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;		None
  1196 ;; Return value:  Size  Location     Type
  1197 ;;		None               void
  1198 ;; Registers used:
  1199 ;;		wreg
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1205 ;;      Params:         0       0       0       0       0
  1206 ;;      Locals:         0       0       0       0       0
  1207 ;;      Temps:          0       0       0       0       0
  1208 ;;      Totals:         0       0       0       0       0
  1209 ;;Total ram usage:        0 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; This function calls:
  1212 ;;		Nothing
  1213 ;; This function is called by:
  1214 ;;		_main
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           
  1219                           ;psect for function _uart_init
  1220  1155                     _uart_init:	
  1221                           
  1222                           ;uart_serial.c: 31: TRISC7 = 1;
  1223                           
  1224                           ;incstack = 0
  1225                           ; Regs used in _uart_init: [wreg]
  1226  1155  1683               	bsf	3,5	;RP0=1, select bank1
  1227  1156  1303               	bcf	3,6	;RP1=0, select bank1
  1228  1157  1787               	bsf	7,7	;volatile
  1229                           
  1230                           ;uart_serial.c: 32: SPBRG = ((unsigned char)(((20000000 / 16) / 9600) - 1));
  1231  1158  3081               	movlw	129
  1232  1159  0099               	movwf	25	;volatile
  1233                           
  1234                           ;uart_serial.c: 33: TXSTA = (0x00 | 0x04 | 0x20);
  1235  115A  3024               	movlw	36
  1236  115B  0098               	movwf	24	;volatile
  1237                           
  1238                           ;uart_serial.c: 34: RCSTA = (0x00 | 0x90);
  1239  115C  3090               	movlw	144
  1240  115D  1283               	bcf	3,5	;RP0=0, select bank0
  1241  115E  1303               	bcf	3,6	;RP1=0, select bank0
  1242  115F  0098               	movwf	24	;volatile
  1243  1160  0008               	return
  1244  1161                     __end_of_uart_init:	
  1245                           
  1246                           	psect	text2
  1247  0264                     __ptext2:	
  1248 ;; *************** function _printf *****************
  1249 ;; Defined at:
  1250 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  f               1    wreg     PTR const unsigned char 
  1253 ;;		 -> STR_2(16), STR_1(14), 
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;  f               1   56[BANK1 ] PTR const unsigned char 
  1256 ;;		 -> STR_2(16), STR_1(14), 
  1257 ;;  tmpval          4   63[BANK1 ] struct .
  1258 ;;  val             4   57[BANK1 ] unsigned long 
  1259 ;;  fval            3   69[BANK1 ] unsigned long 
  1260 ;;  prec            2   67[BANK1 ] int 
  1261 ;;  exp             2   61[BANK1 ] int 
  1262 ;;  flag            2   54[BANK1 ] unsigned short 
  1263 ;;  cp              2    0        PTR const unsigned char 
  1264 ;;  len             2    0        unsigned int 
  1265 ;;  width           2    0        int 
  1266 ;;  c               1   72[BANK1 ] char 
  1267 ;;  ap              1   53[BANK1 ] PTR void [1]
  1268 ;;		 -> ?_printf(2), 
  1269 ;;  d               1    0        unsigned char 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  2   74[BANK0 ] int 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1279 ;;      Params:         0       3       0       0       0
  1280 ;;      Locals:         0       0      23       0       0
  1281 ;;      Temps:          0       0       6       0       0
  1282 ;;      Totals:         0       3      29       0       0
  1283 ;;Total ram usage:       32 bytes
  1284 ;; Hardware stack levels used:    1
  1285 ;; Hardware stack levels required when called:    3
  1286 ;; This function calls:
  1287 ;;		___awdiv
  1288 ;;		___ftadd
  1289 ;;		___ftge
  1290 ;;		___ftmul
  1291 ;;		___ftneg
  1292 ;;		___ftsub
  1293 ;;		___fttol
  1294 ;;		___lldiv
  1295 ;;		___llmod
  1296 ;;		___lltoft
  1297 ;;		___wmul
  1298 ;;		__div_to_l_
  1299 ;;		__tdiv_to_l_
  1300 ;;		_fround
  1301 ;;		_isdigit
  1302 ;;		_putch
  1303 ;;		_scale
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           
  1310                           ;psect for function _printf
  1311  0264                     _printf:	
  1312                           
  1313                           ;incstack = 0
  1314                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1315                           ;printf@f stored from wreg
  1316  0264  1683               	bsf	3,5	;RP0=1, select bank1
  1317  0265  1303               	bcf	3,6	;RP1=0, select bank1
  1318  0266  00D8               	movwf	printf@f^(0+128)
  1319                           
  1320                           ;doprnt.c: 466: va_list ap;
  1321                           ;doprnt.c: 499: signed char c;
  1322                           ;doprnt.c: 501: int width;
  1323                           ;doprnt.c: 504: int prec;
  1324                           ;doprnt.c: 508: unsigned short flag;
  1325                           ;doprnt.c: 515: char d;
  1326                           ;doprnt.c: 516: double fval;
  1327                           ;doprnt.c: 517: int exp;
  1328                           ;doprnt.c: 523: union {
  1329                           ;doprnt.c: 524: unsigned long vd;
  1330                           ;doprnt.c: 525: double integ;
  1331                           ;doprnt.c: 526: } tmpval;
  1332                           ;doprnt.c: 528: unsigned long val;
  1333                           ;doprnt.c: 529: unsigned len;
  1334                           ;doprnt.c: 530: const char * cp;
  1335                           ;doprnt.c: 533: *ap = __va_start();
  1336  0267  306A               	movlw	(low (?_printf| 0))& (0+255)
  1337  0268  00CC               	movwf	??_printf^(0+128)
  1338  0269  084C               	movf	??_printf^(0+128),w
  1339  026A  00D5               	movwf	printf@ap^(0+128)
  1340  026B                     l2559:	
  1341                           ;doprnt.c: 536: while(c = *f++) {
  1342                           
  1343  026B  3001               	movlw	1
  1344  026C  1683               	bsf	3,5	;RP0=1, select bank1
  1345  026D  1303               	bcf	3,6	;RP1=0, select bank1
  1346  026E  07D8               	addwf	printf@f^(0+128),f
  1347  026F  30FF               	movlw	-1
  1348  0270  0758               	addwf	printf@f^(0+128),w
  1349  0271  0084               	movwf	4
  1350  0272  160A  118A  2000  120A  118A  	fcall	stringdir
  1351  0277  00CC               	movwf	??_printf^(0+128)
  1352  0278  084C               	movf	??_printf^(0+128),w
  1353  0279  00E8               	movwf	printf@c^(0+128)
  1354  027A  0868               	movf	printf@c^(0+128),w
  1355  027B  1903               	btfsc	3,2
  1356  027C  0008               	return
  1357                           
  1358                           ;doprnt.c: 538: if(c != '%')
  1359  027D  3025               	movlw	37
  1360  027E  0668               	xorwf	printf@c^(0+128),w
  1361  027F  1903               	btfsc	3,2
  1362  0280  2A88               	goto	l2389
  1363                           
  1364                           ;doprnt.c: 540: {
  1365                           ;doprnt.c: 541: (putch(c) );
  1366  0281  0868               	movf	printf@c^(0+128),w
  1367  0282  160A  118A  2138  120A  118A  	fcall	_putch
  1368                           
  1369                           ;doprnt.c: 542: continue;
  1370  0287  2A6B               	goto	l2559
  1371  0288                     l2389:	
  1372                           
  1373                           ;doprnt.c: 543: }
  1374                           ;doprnt.c: 548: flag = 0;
  1375  0288  1683               	bsf	3,5	;RP0=1, select bank1
  1376  0289  1303               	bcf	3,6	;RP1=0, select bank1
  1377  028A  01D6               	clrf	printf@flag^(0+128)
  1378  028B  01D7               	clrf	(printf@flag+1)^(0+128)
  1379                           
  1380                           ;doprnt.c: 611: if(*f == '.') {
  1381  028C  0858               	movf	printf@f^(0+128),w
  1382  028D  0084               	movwf	4
  1383  028E  160A  118A  2000  120A  118A  	fcall	stringdir
  1384  0293  3A2E               	xorlw	46
  1385  0294  1D03               	skipz
  1386  0295  2AD7               	goto	l2405
  1387                           
  1388                           ;doprnt.c: 612: flag |= 0x4000;
  1389  0296  1757               	bsf	(printf@flag^(0+128)+1),6
  1390                           
  1391                           ;doprnt.c: 613: f++;
  1392  0297  3001               	movlw	1
  1393  0298  00CC               	movwf	??_printf^(0+128)
  1394  0299  084C               	movf	??_printf^(0+128),w
  1395  029A  07D8               	addwf	printf@f^(0+128),f
  1396                           
  1397                           ;doprnt.c: 620: {
  1398                           ;doprnt.c: 621: prec = 0;
  1399  029B  01E3               	clrf	printf@prec^(0+128)
  1400  029C  01E4               	clrf	(printf@prec+1)^(0+128)
  1401  029D                     l2403:	
  1402                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  1403                           
  1404  029D  0858               	movf	printf@f^(0+128),w
  1405  029E  0084               	movwf	4
  1406  029F  160A  118A  2000  120A  118A  	fcall	stringdir
  1407  02A4  160A  118A  2161  120A  118A  	fcall	_isdigit
  1408  02A9  1C03               	btfss	3,0
  1409  02AA  2ADF               	goto	l2411
  1410                           
  1411                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  1412  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  1413  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  1414  02AD  0864               	movf	(printf@prec+1)^(0+128),w
  1415  02AE  00F1               	movwf	___wmul@multiplier+1
  1416  02AF  0863               	movf	printf@prec^(0+128),w
  1417  02B0  00F0               	movwf	___wmul@multiplier
  1418  02B1  300A               	movlw	10
  1419  02B2  00F2               	movwf	___wmul@multiplicand
  1420  02B3  3000               	movlw	0
  1421  02B4  00F3               	movwf	___wmul@multiplicand+1
  1422  02B5  160A  118A  21D8  120A  118A  	fcall	___wmul
  1423  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  1424  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  1425  02BC  0858               	movf	printf@f^(0+128),w
  1426  02BD  0084               	movwf	4
  1427  02BE  160A  118A  2000  120A  118A  	fcall	stringdir
  1428  02C3  0770               	addwf	?___wmul,w
  1429  02C4  00CC               	movwf	??_printf^(0+128)
  1430  02C5  3000               	movlw	0
  1431  02C6  1803               	skipnc
  1432  02C7  3001               	movlw	1
  1433  02C8  0771               	addwf	?___wmul+1,w
  1434  02C9  00CD               	movwf	(??_printf+1)^(0+128)
  1435  02CA  084C               	movf	??_printf^(0+128),w
  1436  02CB  3ED0               	addlw	208
  1437  02CC  00E3               	movwf	printf@prec^(0+128)
  1438  02CD  084D               	movf	(??_printf+1)^(0+128),w
  1439  02CE  1803               	skipnc
  1440  02CF  3E01               	addlw	1
  1441  02D0  3EFF               	addlw	255
  1442  02D1  00E4               	movwf	(printf@prec+1)^(0+128)
  1443  02D2  3001               	movlw	1
  1444  02D3  00CC               	movwf	??_printf^(0+128)
  1445  02D4  084C               	movf	??_printf^(0+128),w
  1446  02D5  07D8               	addwf	printf@f^(0+128),f
  1447  02D6  2A9D               	goto	l2403
  1448  02D7                     l2405:	
  1449                           ;doprnt.c: 624: }
  1450                           ;doprnt.c: 625: } else {
  1451                           
  1452                           
  1453                           ;doprnt.c: 626: prec = 0;
  1454  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  1455  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  1456  02D9  01E3               	clrf	printf@prec^(0+128)
  1457  02DA  01E4               	clrf	(printf@prec+1)^(0+128)
  1458                           
  1459                           ;doprnt.c: 628: flag |= 0x1000;
  1460  02DB  1657               	bsf	(printf@flag^(0+128)+1),4
  1461                           
  1462                           ;doprnt.c: 630: }
  1463                           ;doprnt.c: 635: switch(c = *f++) {
  1464  02DC  2ADF               	goto	l2411
  1465  02DD                     l145:	
  1466                           ;doprnt.c: 662: case 'f':
  1467                           
  1468                           ;doprnt.c: 638: goto alldone;
  1469                           
  1470                           ;doprnt.c: 637: case 0:
  1471                           
  1472                           
  1473                           ;doprnt.c: 663: flag |= 0x400;
  1474  02DD  1557               	bsf	(printf@flag^(0+128)+1),2
  1475                           
  1476                           ;doprnt.c: 664: break;
  1477  02DE  2AF3               	goto	l2413
  1478  02DF                     l2411:	
  1479                           ;doprnt.c: 822: }
  1480                           
  1481                           ;doprnt.c: 813: continue;
  1482                           
  1483                           ;doprnt.c: 802: default:
  1484                           
  1485  02DF  3001               	movlw	1
  1486  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  1487  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  1488  02E2  07D8               	addwf	printf@f^(0+128),f
  1489  02E3  30FF               	movlw	-1
  1490  02E4  0758               	addwf	printf@f^(0+128),w
  1491  02E5  0084               	movwf	4
  1492  02E6  160A  118A  2000  120A  118A  	fcall	stringdir
  1493  02EB  00E8               	movwf	printf@c^(0+128)
  1494                           
  1495                           ; Switch size 1, requested type "space"
  1496                           ; Number of cases is 2, Range of values is 0 to 102
  1497                           ; switch strategies available:
  1498                           ; Name         Instructions Cycles
  1499                           ; simple_byte            7     4 (average)
  1500                           ; jumptable            260     6 (fixed)
  1501                           ;	Chosen strategy is simple_byte
  1502  02EC  3A00               	xorlw	0	; case 0
  1503  02ED  1903               	skipnz
  1504  02EE  2FFB               	goto	l192
  1505  02EF  3A66               	xorlw	102	; case 102
  1506  02F0  1903               	skipnz
  1507  02F1  2ADD               	goto	l145
  1508  02F2  2A6B               	goto	l2559
  1509  02F3                     l2413:	
  1510                           
  1511                           ;doprnt.c: 825: if(flag & (0x700)) {
  1512  02F3  3000               	movlw	0
  1513  02F4  0556               	andwf	printf@flag^(0+128),w
  1514  02F5  00CC               	movwf	??_printf^(0+128)
  1515  02F6  3007               	movlw	7
  1516  02F7  0557               	andwf	(printf@flag+1)^(0+128),w
  1517  02F8  00CD               	movwf	(??_printf+1)^(0+128)
  1518  02F9  084C               	movf	??_printf^(0+128),w
  1519  02FA  044D               	iorwf	(??_printf^(0+128)+1),w
  1520  02FB  1903               	btfsc	3,2
  1521  02FC  2FA6               	goto	l2545
  1522                           
  1523                           ;doprnt.c: 827: if(flag & 0x1000)
  1524  02FD  1E57               	btfss	(printf@flag+1)^(0+128),4
  1525  02FE  2B03               	goto	l2419
  1526                           
  1527                           ;doprnt.c: 829: prec = 6;
  1528  02FF  3006               	movlw	6
  1529  0300  00E3               	movwf	printf@prec^(0+128)
  1530  0301  3000               	movlw	0
  1531  0302  00E4               	movwf	(printf@prec^(0+128)+1)
  1532  0303                     l2419:	
  1533                           
  1534                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1535  0303  0855               	movf	printf@ap^(0+128),w
  1536  0304  0084               	movwf	4
  1537  0305  1383               	bcf	3,7	;select IRP bank0
  1538  0306  0800               	movf	0,w
  1539  0307  00E5               	movwf	printf@fval^(0+128)
  1540  0308  0A84               	incf	4,f
  1541  0309  0800               	movf	0,w
  1542  030A  00E6               	movwf	(printf@fval+1)^(0+128)
  1543  030B  0A84               	incf	4,f
  1544  030C  0800               	movf	0,w
  1545  030D  00E7               	movwf	(printf@fval+2)^(0+128)
  1546  030E  3003               	movlw	3
  1547  030F  00CC               	movwf	??_printf^(0+128)
  1548  0310  084C               	movf	??_printf^(0+128),w
  1549  0311  07D5               	addwf	printf@ap^(0+128),f
  1550                           
  1551                           ;doprnt.c: 831: if(fval < 0.0) {
  1552  0312  0865               	movf	printf@fval^(0+128),w
  1553  0313  00F0               	movwf	___ftge@ff1
  1554  0314  0866               	movf	(printf@fval+1)^(0+128),w
  1555  0315  00F1               	movwf	___ftge@ff1+1
  1556  0316  0867               	movf	(printf@fval+2)^(0+128),w
  1557  0317  00F2               	movwf	___ftge@ff1+2
  1558  0318  3000               	movlw	0
  1559  0319  00F3               	movwf	___ftge@ff2
  1560  031A  3000               	movlw	0
  1561  031B  00F4               	movwf	___ftge@ff2+1
  1562  031C  3000               	movlw	0
  1563  031D  00F5               	movwf	___ftge@ff2+2
  1564  031E  160A  118A  22FA  120A  118A  	fcall	___ftge
  1565  0323  1803               	btfsc	3,0
  1566  0324  2B52               	goto	l2429
  1567                           
  1568                           ;doprnt.c: 832: fval = -fval;
  1569  0325  1683               	bsf	3,5	;RP0=1, select bank1
  1570  0326  1303               	bcf	3,6	;RP1=0, select bank1
  1571  0327  0865               	movf	printf@fval^(0+128),w
  1572  0328  1283               	bcf	3,5	;RP0=0, select bank0
  1573  0329  1303               	bcf	3,6	;RP1=0, select bank0
  1574  032A  00D4               	movwf	___ftneg@f1
  1575  032B  1683               	bsf	3,5	;RP0=1, select bank1
  1576  032C  1303               	bcf	3,6	;RP1=0, select bank1
  1577  032D  0866               	movf	(printf@fval+1)^(0+128),w
  1578  032E  1283               	bcf	3,5	;RP0=0, select bank0
  1579  032F  1303               	bcf	3,6	;RP1=0, select bank0
  1580  0330  00D5               	movwf	___ftneg@f1+1
  1581  0331  1683               	bsf	3,5	;RP0=1, select bank1
  1582  0332  1303               	bcf	3,6	;RP1=0, select bank1
  1583  0333  0867               	movf	(printf@fval+2)^(0+128),w
  1584  0334  1283               	bcf	3,5	;RP0=0, select bank0
  1585  0335  1303               	bcf	3,6	;RP1=0, select bank0
  1586  0336  00D6               	movwf	___ftneg@f1+2
  1587  0337  160A  118A  2140  120A  118A  	fcall	___ftneg
  1588  033C  1283               	bcf	3,5	;RP0=0, select bank0
  1589  033D  1303               	bcf	3,6	;RP1=0, select bank0
  1590  033E  0854               	movf	?___ftneg,w
  1591  033F  1683               	bsf	3,5	;RP0=1, select bank1
  1592  0340  1303               	bcf	3,6	;RP1=0, select bank1
  1593  0341  00E5               	movwf	printf@fval^(0+128)
  1594  0342  1283               	bcf	3,5	;RP0=0, select bank0
  1595  0343  1303               	bcf	3,6	;RP1=0, select bank0
  1596  0344  0855               	movf	?___ftneg+1,w
  1597  0345  1683               	bsf	3,5	;RP0=1, select bank1
  1598  0346  1303               	bcf	3,6	;RP1=0, select bank1
  1599  0347  00E6               	movwf	(printf@fval+1)^(0+128)
  1600  0348  1283               	bcf	3,5	;RP0=0, select bank0
  1601  0349  1303               	bcf	3,6	;RP1=0, select bank0
  1602  034A  0856               	movf	?___ftneg+2,w
  1603  034B  1683               	bsf	3,5	;RP0=1, select bank1
  1604  034C  1303               	bcf	3,6	;RP1=0, select bank1
  1605  034D  00E7               	movwf	(printf@fval+2)^(0+128)
  1606                           
  1607                           ;doprnt.c: 833: flag |= 0x03;
  1608  034E  3003               	movlw	3
  1609  034F  04D6               	iorwf	printf@flag^(0+128),f
  1610  0350  3000               	movlw	0
  1611  0351  04D7               	iorwf	(printf@flag+1)^(0+128),f
  1612  0352                     l2429:	
  1613                           
  1614                           ;doprnt.c: 834: }
  1615                           ;doprnt.c: 835: exp = 0;
  1616  0352  1683               	bsf	3,5	;RP0=1, select bank1
  1617  0353  1303               	bcf	3,6	;RP1=0, select bank1
  1618  0354  01DD               	clrf	printf@exp^(0+128)
  1619  0355  01DE               	clrf	(printf@exp+1)^(0+128)
  1620                           
  1621                           ;doprnt.c: 836: if( fval!=0) {
  1622  0356  0867               	movf	(printf@fval+2)^(0+128),w
  1623  0357  0466               	iorwf	(printf@fval+1)^(0+128),w
  1624  0358  0465               	iorwf	printf@fval^(0+128),w
  1625  0359  1903               	skipnz
  1626  035A  2C3E               	goto	l2457
  1627                           
  1628                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1629  035B  30E5               	movlw	low (printf@fval| 0)
  1630  035C  0084               	movwf	4
  1631  035D  1383               	bcf	3,7	;select IRP bank1
  1632  035E  0800               	movf	0,w
  1633  035F  00CC               	movwf	??_printf^(0+128)
  1634  0360  0A84               	incf	4,f
  1635  0361  0800               	movf	0,w
  1636  0362  00CD               	movwf	(??_printf^(0+128)+1)
  1637  0363  0A84               	incf	4,f
  1638  0364  0800               	movf	0,w
  1639  0365  00CE               	movwf	(??_printf^(0+128)+2)
  1640  0366  0A84               	incf	4,f
  1641  0367  0800               	movf	0,w
  1642  0368  00CF               	movwf	(??_printf^(0+128)+3)
  1643  0369  300F               	movlw	15
  1644  036A                     u3665:	
  1645  036A  1003               	clrc
  1646  036B  0CCF               	rrf	(??_printf^(0+128)+3),f
  1647  036C  0CCE               	rrf	(??_printf^(0+128)+2),f
  1648  036D  0CCD               	rrf	(??_printf^(0+128)+1),f
  1649  036E  0CCC               	rrf	??_printf^(0+128),f
  1650  036F  3EFF               	addlw	-1
  1651  0370  1D03               	skipz
  1652  0371  2B6A               	goto	u3665
  1653  0372  30FF               	movlw	255
  1654  0373  054C               	andwf	??_printf^(0+128),w
  1655  0374  00D0               	movwf	(??_printf+4)^(0+128)
  1656  0375  3000               	movlw	0
  1657  0376  054D               	andwf	(??_printf+1)^(0+128),w
  1658  0377  00D1               	movwf	(??_printf+5)^(0+128)
  1659  0378  0850               	movf	(??_printf+4)^(0+128),w
  1660  0379  3E82               	addlw	130
  1661  037A  00DD               	movwf	printf@exp^(0+128)
  1662  037B  0851               	movf	(??_printf+5)^(0+128),w
  1663  037C  1803               	skipnc
  1664  037D  3E01               	addlw	1
  1665  037E  3EFF               	addlw	255
  1666  037F  00DE               	movwf	(printf@exp+1)^(0+128)
  1667                           
  1668                           ;doprnt.c: 838: exp--;
  1669  0380  30FF               	movlw	255
  1670  0381  07DD               	addwf	printf@exp^(0+128),f
  1671  0382  1803               	skipnc
  1672  0383  0ADE               	incf	(printf@exp+1)^(0+128),f
  1673  0384  30FF               	movlw	255
  1674  0385  07DE               	addwf	(printf@exp+1)^(0+128),f
  1675                           
  1676                           ;doprnt.c: 839: exp *= 3;
  1677  0386  3003               	movlw	3
  1678  0387  00F0               	movwf	___wmul@multiplier
  1679  0388  3000               	movlw	0
  1680  0389  00F1               	movwf	___wmul@multiplier+1
  1681  038A  085E               	movf	(printf@exp+1)^(0+128),w
  1682  038B  00F3               	movwf	___wmul@multiplicand+1
  1683  038C  085D               	movf	printf@exp^(0+128),w
  1684  038D  00F2               	movwf	___wmul@multiplicand
  1685  038E  160A  118A  21D8  120A  118A  	fcall	___wmul
  1686  0393  0871               	movf	?___wmul+1,w
  1687  0394  1683               	bsf	3,5	;RP0=1, select bank1
  1688  0395  1303               	bcf	3,6	;RP1=0, select bank1
  1689  0396  00DE               	movwf	(printf@exp+1)^(0+128)
  1690  0397  0870               	movf	?___wmul,w
  1691  0398  00DD               	movwf	printf@exp^(0+128)
  1692                           
  1693                           ;doprnt.c: 840: exp /= 10;
  1694  0399  300A               	movlw	10
  1695  039A  00F7               	movwf	___awdiv@divisor
  1696  039B  3000               	movlw	0
  1697  039C  00F8               	movwf	___awdiv@divisor+1
  1698  039D  085E               	movf	(printf@exp+1)^(0+128),w
  1699  039E  00FA               	movwf	___awdiv@dividend+1
  1700  039F  085D               	movf	printf@exp^(0+128),w
  1701  03A0  00F9               	movwf	___awdiv@dividend
  1702  03A1  160A  118A  229F  120A  118A  	fcall	___awdiv
  1703  03A6  0878               	movf	?___awdiv+1,w
  1704  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  1705  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  1706  03A9  00DE               	movwf	(printf@exp+1)^(0+128)
  1707  03AA  0877               	movf	?___awdiv,w
  1708  03AB  00DD               	movwf	printf@exp^(0+128)
  1709                           
  1710                           ;doprnt.c: 841: if(exp < 0)
  1711  03AC  1FDE               	btfss	(printf@exp+1)^(0+128),7
  1712  03AD  2BB4               	goto	l2445
  1713                           
  1714                           ;doprnt.c: 842: exp--;
  1715  03AE  30FF               	movlw	255
  1716  03AF  07DD               	addwf	printf@exp^(0+128),f
  1717  03B0  1803               	skipnc
  1718  03B1  0ADE               	incf	(printf@exp+1)^(0+128),f
  1719  03B2  30FF               	movlw	255
  1720  03B3  07DE               	addwf	(printf@exp+1)^(0+128),f
  1721  03B4                     l2445:	
  1722                           
  1723                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1724  03B4  035D               	decf	printf@exp^(0+128),w
  1725  03B5  3AFF               	xorlw	255
  1726  03B6  120A  158A  228E  120A  118A  	fcall	_scale
  1727  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  1728  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  1729  03BD  0840               	movf	?_scale,w
  1730  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  1731  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  1732  03C0  00DF               	movwf	printf@tmpval^(0+128)
  1733  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  1734  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  1735  03C3  0841               	movf	?_scale+1,w
  1736  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  1737  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  1738  03C6  00E0               	movwf	(printf@tmpval+1)^(0+128)
  1739  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  1740  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  1741  03C9  0842               	movf	?_scale+2,w
  1742  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  1743  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  1744  03CC  00E1               	movwf	(printf@tmpval+2)^(0+128)
  1745                           
  1746                           ;doprnt.c: 847: tmpval.integ *= fval;
  1747  03CD  0865               	movf	printf@fval^(0+128),w
  1748  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  1749  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  1750  03D0  00B0               	movwf	___ftmul@f1
  1751  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  1752  03D2  1303               	bcf	3,6	;RP1=0, select bank1
  1753  03D3  0866               	movf	(printf@fval+1)^(0+128),w
  1754  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1755  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1756  03D6  00B1               	movwf	___ftmul@f1+1
  1757  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  1758  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  1759  03D9  0867               	movf	(printf@fval+2)^(0+128),w
  1760  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  1761  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  1762  03DC  00B2               	movwf	___ftmul@f1+2
  1763  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  1764  03DE  1303               	bcf	3,6	;RP1=0, select bank1
  1765  03DF  085F               	movf	printf@tmpval^(0+128),w
  1766  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  1767  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  1768  03E2  00B3               	movwf	___ftmul@f2
  1769  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  1770  03E4  1303               	bcf	3,6	;RP1=0, select bank1
  1771  03E5  0860               	movf	(printf@tmpval+1)^(0+128),w
  1772  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1773  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  1774  03E8  00B4               	movwf	___ftmul@f2+1
  1775  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  1776  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  1777  03EB  0861               	movf	(printf@tmpval+2)^(0+128),w
  1778  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  1779  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  1780  03EE  00B5               	movwf	___ftmul@f2+2
  1781  03EF  160A  118A  272D  120A  118A  	fcall	___ftmul
  1782  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  1783  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  1784  03F6  0830               	movf	?___ftmul,w
  1785  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  1786  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  1787  03F9  00DF               	movwf	printf@tmpval^(0+128)
  1788  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1789  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  1790  03FC  0831               	movf	?___ftmul+1,w
  1791  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  1792  03FE  1303               	bcf	3,6	;RP1=0, select bank1
  1793  03FF  00E0               	movwf	(printf@tmpval+1)^(0+128)
  1794  0400  1283               	bcf	3,5	;RP0=0, select bank0
  1795  0401  1303               	bcf	3,6	;RP1=0, select bank0
  1796  0402  0832               	movf	?___ftmul+2,w
  1797  0403  1683               	bsf	3,5	;RP0=1, select bank1
  1798  0404  1303               	bcf	3,6	;RP1=0, select bank1
  1799  0405  00E1               	movwf	(printf@tmpval+2)^(0+128)
  1800                           
  1801                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1802  0406  085F               	movf	printf@tmpval^(0+128),w
  1803  0407  00F0               	movwf	___ftge@ff1
  1804  0408  0860               	movf	(printf@tmpval+1)^(0+128),w
  1805  0409  00F1               	movwf	___ftge@ff1+1
  1806  040A  0861               	movf	(printf@tmpval+2)^(0+128),w
  1807  040B  00F2               	movwf	___ftge@ff1+2
  1808  040C  3000               	movlw	0
  1809  040D  00F3               	movwf	___ftge@ff2
  1810  040E  3080               	movlw	128
  1811  040F  00F4               	movwf	___ftge@ff2+1
  1812  0410  303F               	movlw	63
  1813  0411  00F5               	movwf	___ftge@ff2+2
  1814  0412  160A  118A  22FA  120A  118A  	fcall	___ftge
  1815  0417  1803               	btfsc	3,0
  1816  0418  2C21               	goto	l2453
  1817                           
  1818                           ;doprnt.c: 849: exp--;
  1819  0419  30FF               	movlw	255
  1820  041A  1683               	bsf	3,5	;RP0=1, select bank1
  1821  041B  1303               	bcf	3,6	;RP1=0, select bank1
  1822  041C  07DD               	addwf	printf@exp^(0+128),f
  1823  041D  1803               	skipnc
  1824  041E  0ADE               	incf	(printf@exp+1)^(0+128),f
  1825  041F  30FF               	movlw	255
  1826  0420  2C3D               	goto	L1
  1827  0421                     l2453:	
  1828                           
  1829                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1830  0421  1683               	bsf	3,5	;RP0=1, select bank1
  1831  0422  1303               	bcf	3,6	;RP1=0, select bank1
  1832  0423  085F               	movf	printf@tmpval^(0+128),w
  1833  0424  00F0               	movwf	___ftge@ff1
  1834  0425  0860               	movf	(printf@tmpval+1)^(0+128),w
  1835  0426  00F1               	movwf	___ftge@ff1+1
  1836  0427  0861               	movf	(printf@tmpval+2)^(0+128),w
  1837  0428  00F2               	movwf	___ftge@ff1+2
  1838  0429  3000               	movlw	0
  1839  042A  00F3               	movwf	___ftge@ff2
  1840  042B  3020               	movlw	32
  1841  042C  00F4               	movwf	___ftge@ff2+1
  1842  042D  3041               	movlw	65
  1843  042E  00F5               	movwf	___ftge@ff2+2
  1844  042F  160A  118A  22FA  120A  118A  	fcall	___ftge
  1845  0434  1C03               	btfss	3,0
  1846  0435  2C3E               	goto	l2457
  1847                           
  1848                           ;doprnt.c: 851: exp++;
  1849  0436  3001               	movlw	1
  1850  0437  1683               	bsf	3,5	;RP0=1, select bank1
  1851  0438  1303               	bcf	3,6	;RP1=0, select bank1
  1852  0439  07DD               	addwf	printf@exp^(0+128),f
  1853  043A  1803               	skipnc
  1854  043B  0ADE               	incf	(printf@exp+1)^(0+128),f
  1855  043C  3000               	movlw	0
  1856  043D                     L1:	
  1857  043D  07DE               	addwf	(printf@exp+1)^(0+128),f
  1858  043E                     l2457:	
  1859                           
  1860                           ;doprnt.c: 852: }
  1861                           ;doprnt.c: 1112: if(prec <= 12)
  1862  043E  1683               	bsf	3,5	;RP0=1, select bank1
  1863  043F  1303               	bcf	3,6	;RP1=0, select bank1
  1864  0440  0864               	movf	(printf@prec+1)^(0+128),w
  1865  0441  3A80               	xorlw	128
  1866  0442  00FF               	movwf	127
  1867  0443  3080               	movlw	128
  1868  0444  027F               	subwf	127,w
  1869  0445  1D03               	skipz
  1870  0446  2C49               	goto	u3705
  1871  0447  300D               	movlw	13
  1872  0448  0263               	subwf	printf@prec^(0+128),w
  1873  0449                     u3705:	
  1874  0449  1803               	skipnc
  1875  044A  2C84               	goto	l2461
  1876                           
  1877                           ;doprnt.c: 1113: fval += fround(prec);
  1878  044B  1683               	bsf	3,5	;RP0=1, select bank1
  1879  044C  1303               	bcf	3,6	;RP1=0, select bank1
  1880  044D  0863               	movf	printf@prec^(0+128),w
  1881  044E  120A  118A  20CA  120A  118A  	fcall	_fround
  1882  0453  1283               	bcf	3,5	;RP0=0, select bank0
  1883  0454  1303               	bcf	3,6	;RP1=0, select bank0
  1884  0455  0840               	movf	?_fround,w
  1885  0456  00D7               	movwf	___ftadd@f1
  1886  0457  0841               	movf	?_fround+1,w
  1887  0458  00D8               	movwf	___ftadd@f1+1
  1888  0459  0842               	movf	?_fround+2,w
  1889  045A  00D9               	movwf	___ftadd@f1+2
  1890  045B  1683               	bsf	3,5	;RP0=1, select bank1
  1891  045C  1303               	bcf	3,6	;RP1=0, select bank1
  1892  045D  0865               	movf	printf@fval^(0+128),w
  1893  045E  1283               	bcf	3,5	;RP0=0, select bank0
  1894  045F  1303               	bcf	3,6	;RP1=0, select bank0
  1895  0460  00DA               	movwf	___ftadd@f2
  1896  0461  1683               	bsf	3,5	;RP0=1, select bank1
  1897  0462  1303               	bcf	3,6	;RP1=0, select bank1
  1898  0463  0866               	movf	(printf@fval+1)^(0+128),w
  1899  0464  1283               	bcf	3,5	;RP0=0, select bank0
  1900  0465  1303               	bcf	3,6	;RP1=0, select bank0
  1901  0466  00DB               	movwf	___ftadd@f2+1
  1902  0467  1683               	bsf	3,5	;RP0=1, select bank1
  1903  0468  1303               	bcf	3,6	;RP1=0, select bank1
  1904  0469  0867               	movf	(printf@fval+2)^(0+128),w
  1905  046A  1283               	bcf	3,5	;RP0=0, select bank0
  1906  046B  1303               	bcf	3,6	;RP1=0, select bank0
  1907  046C  00DC               	movwf	___ftadd@f2+2
  1908  046D  120A  158A  2053  120A  118A  	fcall	___ftadd
  1909  0472  1283               	bcf	3,5	;RP0=0, select bank0
  1910  0473  1303               	bcf	3,6	;RP1=0, select bank0
  1911  0474  0857               	movf	?___ftadd,w
  1912  0475  1683               	bsf	3,5	;RP0=1, select bank1
  1913  0476  1303               	bcf	3,6	;RP1=0, select bank1
  1914  0477  00E5               	movwf	printf@fval^(0+128)
  1915  0478  1283               	bcf	3,5	;RP0=0, select bank0
  1916  0479  1303               	bcf	3,6	;RP1=0, select bank0
  1917  047A  0858               	movf	?___ftadd+1,w
  1918  047B  1683               	bsf	3,5	;RP0=1, select bank1
  1919  047C  1303               	bcf	3,6	;RP1=0, select bank1
  1920  047D  00E6               	movwf	(printf@fval+1)^(0+128)
  1921  047E  1283               	bcf	3,5	;RP0=0, select bank0
  1922  047F  1303               	bcf	3,6	;RP1=0, select bank0
  1923  0480  0859               	movf	?___ftadd+2,w
  1924  0481  1683               	bsf	3,5	;RP0=1, select bank1
  1925  0482  1303               	bcf	3,6	;RP1=0, select bank1
  1926  0483  00E7               	movwf	(printf@fval+2)^(0+128)
  1927  0484                     l2461:	
  1928                           
  1929                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1930  0484  1683               	bsf	3,5	;RP0=1, select bank1
  1931  0485  1303               	bcf	3,6	;RP1=0, select bank1
  1932  0486  085E               	movf	(printf@exp+1)^(0+128),w
  1933  0487  3A80               	xorlw	128
  1934  0488  00FF               	movwf	127
  1935  0489  3080               	movlw	128
  1936  048A  027F               	subwf	127,w
  1937  048B  1D03               	skipz
  1938  048C  2C8F               	goto	u3715
  1939  048D  300A               	movlw	10
  1940  048E  025D               	subwf	printf@exp^(0+128),w
  1941  048F                     u3715:	
  1942  048F  1803               	skipnc
  1943  0490  2CC2               	goto	l2469
  1944  0491  1683               	bsf	3,5	;RP0=1, select bank1
  1945  0492  1303               	bcf	3,6	;RP1=0, select bank1
  1946  0493  0867               	movf	(printf@fval+2)^(0+128),w
  1947  0494  0466               	iorwf	(printf@fval+1)^(0+128),w
  1948  0495  0465               	iorwf	printf@fval^(0+128),w
  1949  0496  1903               	skipnz
  1950  0497  2D1B               	goto	l2483
  1951  0498  0865               	movf	printf@fval^(0+128),w
  1952  0499  1283               	bcf	3,5	;RP0=0, select bank0
  1953  049A  1303               	bcf	3,6	;RP1=0, select bank0
  1954  049B  00C9               	movwf	___fttol@f1
  1955  049C  1683               	bsf	3,5	;RP0=1, select bank1
  1956  049D  1303               	bcf	3,6	;RP1=0, select bank1
  1957  049E  0866               	movf	(printf@fval+1)^(0+128),w
  1958  049F  1283               	bcf	3,5	;RP0=0, select bank0
  1959  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  1960  04A1  00CA               	movwf	___fttol@f1+1
  1961  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  1962  04A3  1303               	bcf	3,6	;RP1=0, select bank1
  1963  04A4  0867               	movf	(printf@fval+2)^(0+128),w
  1964  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  1965  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  1966  04A7  00CB               	movwf	___fttol@f1+2
  1967  04A8  160A  118A  252B  120A  118A  	fcall	___fttol
  1968  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  1969  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  1970  04AF  084C               	movf	?___fttol+3,w
  1971  04B0  044B               	iorwf	?___fttol+2,w
  1972  04B1  044A               	iorwf	?___fttol+1,w
  1973  04B2  0449               	iorwf	?___fttol,w
  1974  04B3  1D03               	skipz
  1975  04B4  2D1B               	goto	l2483
  1976  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  1977  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  1978  04B7  085E               	movf	(printf@exp+1)^(0+128),w
  1979  04B8  3A80               	xorlw	128
  1980  04B9  00FF               	movwf	127
  1981  04BA  3080               	movlw	128
  1982  04BB  027F               	subwf	127,w
  1983  04BC  1D03               	skipz
  1984  04BD  2CC0               	goto	u3745
  1985  04BE  3002               	movlw	2
  1986  04BF  025D               	subwf	printf@exp^(0+128),w
  1987  04C0                     u3745:	
  1988  04C0  1C03               	skipc
  1989  04C1  2D1B               	goto	l2483
  1990  04C2                     l2469:	
  1991                           
  1992                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1993  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  1994  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  1995  04C4  085F               	movf	printf@tmpval^(0+128),w
  1996  04C5  00F0               	movwf	___ftge@ff1
  1997  04C6  0860               	movf	(printf@tmpval+1)^(0+128),w
  1998  04C7  00F1               	movwf	___ftge@ff1+1
  1999  04C8  0861               	movf	(printf@tmpval+2)^(0+128),w
  2000  04C9  00F2               	movwf	___ftge@ff1+2
  2001  04CA  3070               	movlw	112
  2002  04CB  00F3               	movwf	___ftge@ff2
  2003  04CC  3089               	movlw	137
  2004  04CD  00F4               	movwf	___ftge@ff2+1
  2005  04CE  3040               	movlw	64
  2006  04CF  00F5               	movwf	___ftge@ff2+2
  2007  04D0  160A  118A  22FA  120A  118A  	fcall	___ftge
  2008  04D5  1803               	btfsc	3,0
  2009  04D6  2CD9               	goto	l2473
  2010                           
  2011                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2012  04D7  30F7               	movlw	247
  2013  04D8  2CDA               	goto	L2
  2014  04D9                     l2473:	
  2015                           ;doprnt.c: 1122: }else{
  2016                           
  2017                           
  2018                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2019  04D9  30F8               	movlw	248
  2020  04DA                     L2:	
  2021  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  2022  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  2023  04DC  07DD               	addwf	printf@exp^(0+128),f
  2024  04DD  1803               	skipnc
  2025  04DE  0ADE               	incf	(printf@exp+1)^(0+128),f
  2026  04DF  30FF               	movlw	255
  2027  04E0  07DE               	addwf	(printf@exp+1)^(0+128),f
  2028                           
  2029                           ;doprnt.c: 1124: }
  2030                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2031  04E1  085D               	movf	printf@exp^(0+128),w
  2032  04E2  120A  158A  228E  120A  118A  	fcall	_scale
  2033  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  2034  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  2035  04E9  0840               	movf	?_scale,w
  2036  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  2037  04EB  1303               	bcf	3,6	;RP1=0, select bank1
  2038  04EC  00DF               	movwf	printf@tmpval^(0+128)
  2039  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  2040  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  2041  04EF  0841               	movf	?_scale+1,w
  2042  04F0  1683               	bsf	3,5	;RP0=1, select bank1
  2043  04F1  1303               	bcf	3,6	;RP1=0, select bank1
  2044  04F2  00E0               	movwf	(printf@tmpval+1)^(0+128)
  2045  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  2046  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  2047  04F5  0842               	movf	?_scale+2,w
  2048  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  2049  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  2050  04F8  00E1               	movwf	(printf@tmpval+2)^(0+128)
  2051                           
  2052                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2053  04F9  0865               	movf	printf@fval^(0+128),w
  2054  04FA  00F0               	movwf	__tdiv_to_l_@f1
  2055  04FB  0866               	movf	(printf@fval+1)^(0+128),w
  2056  04FC  00F1               	movwf	__tdiv_to_l_@f1+1
  2057  04FD  0867               	movf	(printf@fval+2)^(0+128),w
  2058  04FE  00F2               	movwf	__tdiv_to_l_@f1+2
  2059  04FF  085F               	movf	printf@tmpval^(0+128),w
  2060  0500  00F3               	movwf	__tdiv_to_l_@f2
  2061  0501  0860               	movf	(printf@tmpval+1)^(0+128),w
  2062  0502  00F4               	movwf	__tdiv_to_l_@f2+1
  2063  0503  0861               	movf	(printf@tmpval+2)^(0+128),w
  2064  0504  00F5               	movwf	__tdiv_to_l_@f2+2
  2065  0505  120A  118A  2007  120A  118A  	fcall	__tdiv_to_l_
  2066  050A  0873               	movf	?__tdiv_to_l_+3,w
  2067  050B  1683               	bsf	3,5	;RP0=1, select bank1
  2068  050C  1303               	bcf	3,6	;RP1=0, select bank1
  2069  050D  00DC               	movwf	(printf@val+3)^(0+128)
  2070  050E  0872               	movf	?__tdiv_to_l_+2,w
  2071  050F  00DB               	movwf	(printf@val+2)^(0+128)
  2072  0510  0871               	movf	?__tdiv_to_l_+1,w
  2073  0511  00DA               	movwf	(printf@val+1)^(0+128)
  2074  0512  0870               	movf	?__tdiv_to_l_,w
  2075  0513  00D9               	movwf	printf@val^(0+128)
  2076                           
  2077                           ;doprnt.c: 1129: fval = 0.0;
  2078  0514  3000               	movlw	0
  2079  0515  00E5               	movwf	printf@fval^(0+128)
  2080  0516  3000               	movlw	0
  2081  0517  00E6               	movwf	(printf@fval+1)^(0+128)
  2082  0518  3000               	movlw	0
  2083  0519  00E7               	movwf	(printf@fval+2)^(0+128)
  2084                           
  2085                           ;doprnt.c: 1130: } else {
  2086  051A  2D8A               	goto	l2487
  2087  051B                     l2483:	
  2088                           
  2089                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2090  051B  1683               	bsf	3,5	;RP0=1, select bank1
  2091  051C  1303               	bcf	3,6	;RP1=0, select bank1
  2092  051D  0865               	movf	printf@fval^(0+128),w
  2093  051E  1283               	bcf	3,5	;RP0=0, select bank0
  2094  051F  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0520  00C9               	movwf	___fttol@f1
  2096  0521  1683               	bsf	3,5	;RP0=1, select bank1
  2097  0522  1303               	bcf	3,6	;RP1=0, select bank1
  2098  0523  0866               	movf	(printf@fval+1)^(0+128),w
  2099  0524  1283               	bcf	3,5	;RP0=0, select bank0
  2100  0525  1303               	bcf	3,6	;RP1=0, select bank0
  2101  0526  00CA               	movwf	___fttol@f1+1
  2102  0527  1683               	bsf	3,5	;RP0=1, select bank1
  2103  0528  1303               	bcf	3,6	;RP1=0, select bank1
  2104  0529  0867               	movf	(printf@fval+2)^(0+128),w
  2105  052A  1283               	bcf	3,5	;RP0=0, select bank0
  2106  052B  1303               	bcf	3,6	;RP1=0, select bank0
  2107  052C  00CB               	movwf	___fttol@f1+2
  2108  052D  160A  118A  252B  120A  118A  	fcall	___fttol
  2109  0532  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0533  1303               	bcf	3,6	;RP1=0, select bank0
  2111  0534  084C               	movf	?___fttol+3,w
  2112  0535  1683               	bsf	3,5	;RP0=1, select bank1
  2113  0536  1303               	bcf	3,6	;RP1=0, select bank1
  2114  0537  00DC               	movwf	(printf@val+3)^(0+128)
  2115  0538  1283               	bcf	3,5	;RP0=0, select bank0
  2116  0539  1303               	bcf	3,6	;RP1=0, select bank0
  2117  053A  084B               	movf	?___fttol+2,w
  2118  053B  1683               	bsf	3,5	;RP0=1, select bank1
  2119  053C  1303               	bcf	3,6	;RP1=0, select bank1
  2120  053D  00DB               	movwf	(printf@val+2)^(0+128)
  2121  053E  1283               	bcf	3,5	;RP0=0, select bank0
  2122  053F  1303               	bcf	3,6	;RP1=0, select bank0
  2123  0540  084A               	movf	?___fttol+1,w
  2124  0541  1683               	bsf	3,5	;RP0=1, select bank1
  2125  0542  1303               	bcf	3,6	;RP1=0, select bank1
  2126  0543  00DA               	movwf	(printf@val+1)^(0+128)
  2127  0544  1283               	bcf	3,5	;RP0=0, select bank0
  2128  0545  1303               	bcf	3,6	;RP1=0, select bank0
  2129  0546  0849               	movf	?___fttol,w
  2130  0547  1683               	bsf	3,5	;RP0=1, select bank1
  2131  0548  1303               	bcf	3,6	;RP1=0, select bank1
  2132  0549  00D9               	movwf	printf@val^(0+128)
  2133                           
  2134                           ;doprnt.c: 1132: fval -= (double)val;
  2135  054A  085C               	movf	(printf@val+3)^(0+128),w
  2136  054B  00FB               	movwf	___lltoft@c+3
  2137  054C  085B               	movf	(printf@val+2)^(0+128),w
  2138  054D  00FA               	movwf	___lltoft@c+2
  2139  054E  085A               	movf	(printf@val+1)^(0+128),w
  2140  054F  00F9               	movwf	___lltoft@c+1
  2141  0550  0859               	movf	printf@val^(0+128),w
  2142  0551  00F8               	movwf	___lltoft@c
  2143  0552  160A  118A  21F9  120A  118A  	fcall	___lltoft
  2144  0557  0878               	movf	?___lltoft,w
  2145  0558  1283               	bcf	3,5	;RP0=0, select bank0
  2146  0559  1303               	bcf	3,6	;RP1=0, select bank0
  2147  055A  00E4               	movwf	___ftsub@f2
  2148  055B  0879               	movf	?___lltoft+1,w
  2149  055C  00E5               	movwf	___ftsub@f2+1
  2150  055D  087A               	movf	?___lltoft+2,w
  2151  055E  00E6               	movwf	___ftsub@f2+2
  2152  055F  1683               	bsf	3,5	;RP0=1, select bank1
  2153  0560  1303               	bcf	3,6	;RP1=0, select bank1
  2154  0561  0865               	movf	printf@fval^(0+128),w
  2155  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0564  00E7               	movwf	___ftsub@f1
  2158  0565  1683               	bsf	3,5	;RP0=1, select bank1
  2159  0566  1303               	bcf	3,6	;RP1=0, select bank1
  2160  0567  0866               	movf	(printf@fval+1)^(0+128),w
  2161  0568  1283               	bcf	3,5	;RP0=0, select bank0
  2162  0569  1303               	bcf	3,6	;RP1=0, select bank0
  2163  056A  00E8               	movwf	___ftsub@f1+1
  2164  056B  1683               	bsf	3,5	;RP0=1, select bank1
  2165  056C  1303               	bcf	3,6	;RP1=0, select bank1
  2166  056D  0867               	movf	(printf@fval+2)^(0+128),w
  2167  056E  1283               	bcf	3,5	;RP0=0, select bank0
  2168  056F  1303               	bcf	3,6	;RP1=0, select bank0
  2169  0570  00E9               	movwf	___ftsub@f1+2
  2170  0571  160A  118A  21B7  120A  118A  	fcall	___ftsub
  2171  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2172  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2173  0578  0864               	movf	?___ftsub,w
  2174  0579  1683               	bsf	3,5	;RP0=1, select bank1
  2175  057A  1303               	bcf	3,6	;RP1=0, select bank1
  2176  057B  00E5               	movwf	printf@fval^(0+128)
  2177  057C  1283               	bcf	3,5	;RP0=0, select bank0
  2178  057D  1303               	bcf	3,6	;RP1=0, select bank0
  2179  057E  0865               	movf	?___ftsub+1,w
  2180  057F  1683               	bsf	3,5	;RP0=1, select bank1
  2181  0580  1303               	bcf	3,6	;RP1=0, select bank1
  2182  0581  00E6               	movwf	(printf@fval+1)^(0+128)
  2183  0582  1283               	bcf	3,5	;RP0=0, select bank0
  2184  0583  1303               	bcf	3,6	;RP1=0, select bank0
  2185  0584  0866               	movf	?___ftsub+2,w
  2186  0585  1683               	bsf	3,5	;RP0=1, select bank1
  2187  0586  1303               	bcf	3,6	;RP1=0, select bank1
  2188  0587  00E7               	movwf	(printf@fval+2)^(0+128)
  2189                           
  2190                           ;doprnt.c: 1133: exp = 0;
  2191  0588  01DD               	clrf	printf@exp^(0+128)
  2192  0589  01DE               	clrf	(printf@exp+1)^(0+128)
  2193  058A                     l2487:	
  2194                           
  2195                           ;doprnt.c: 1134: }
  2196                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2197  058A  01E8               	clrf	printf@c^(0+128)
  2198  058B  0AE8               	incf	printf@c^(0+128),f
  2199  058C  300A               	movlw	10
  2200  058D  0668               	xorwf	printf@c^(0+128),w
  2201  058E  1903               	btfsc	3,2
  2202  058F  2DCC               	goto	l2499
  2203  0590                     l2493:	
  2204                           
  2205                           ;doprnt.c: 1137: if(val < dpowers[c])
  2206  0590  0868               	movf	printf@c^(0+128),w
  2207  0591  00CC               	movwf	??_printf^(0+128)
  2208  0592  3001               	movlw	1
  2209  0593                     u3775:	
  2210  0593  1003               	clrc
  2211  0594  0DCC               	rlf	??_printf^(0+128),f
  2212  0595  3EFF               	addlw	-1
  2213  0596  1D03               	skipz
  2214  0597  2D93               	goto	u3775
  2215  0598  1003               	clrc
  2216  0599  0D4C               	rlf	??_printf^(0+128),w
  2217  059A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2218  059B  0084               	movwf	4
  2219  059C  160A  118A  2000  120A  118A  	fcall	stringdir
  2220  05A1  00CD               	movwf	(??_printf+1)^(0+128)
  2221  05A2  160A  118A  2000  120A  118A  	fcall	stringdir
  2222  05A7  00CE               	movwf	((??_printf+1)^(0+128)+1)
  2223  05A8  160A  118A  2000  120A  118A  	fcall	stringdir
  2224  05AD  00CF               	movwf	((??_printf+1)^(0+128)+2)
  2225  05AE  160A  118A  2000  120A  118A  	fcall	stringdir
  2226  05B3  00D0               	movwf	((??_printf+1)^(0+128)+3)
  2227  05B4  0850               	movf	(??_printf+4)^(0+128),w
  2228  05B5  025C               	subwf	(printf@val+3)^(0+128),w
  2229  05B6  1D03               	skipz
  2230  05B7  2DC2               	goto	u3785
  2231  05B8  084F               	movf	(??_printf+3)^(0+128),w
  2232  05B9  025B               	subwf	(printf@val+2)^(0+128),w
  2233  05BA  1D03               	skipz
  2234  05BB  2DC2               	goto	u3785
  2235  05BC  084E               	movf	(??_printf+2)^(0+128),w
  2236  05BD  025A               	subwf	(printf@val+1)^(0+128),w
  2237  05BE  1D03               	skipz
  2238  05BF  2DC2               	goto	u3785
  2239  05C0  084D               	movf	(??_printf+1)^(0+128),w
  2240  05C1  0259               	subwf	printf@val^(0+128),w
  2241  05C2                     u3785:	
  2242  05C2  1C03               	btfss	3,0
  2243  05C3  2DCC               	goto	l2499
  2244                           
  2245                           ;doprnt.c: 1138: break;
  2246  05C4  3001               	movlw	1
  2247  05C5  00CC               	movwf	??_printf^(0+128)
  2248  05C6  084C               	movf	??_printf^(0+128),w
  2249  05C7  07E8               	addwf	printf@c^(0+128),f
  2250  05C8  300A               	movlw	10
  2251  05C9  0668               	xorwf	printf@c^(0+128),w
  2252  05CA  1D03               	btfss	3,2
  2253  05CB  2D90               	goto	l2493
  2254  05CC                     l2499:	
  2255                           
  2256                           ;doprnt.c: 1175: {
  2257                           ;doprnt.c: 1188: if(flag & 0x03)
  2258  05CC  3003               	movlw	3
  2259  05CD  0556               	andwf	printf@flag^(0+128),w
  2260  05CE  00CC               	movwf	??_printf^(0+128)
  2261  05CF  3000               	movlw	0
  2262  05D0  0557               	andwf	(printf@flag+1)^(0+128),w
  2263  05D1  00CD               	movwf	(??_printf+1)^(0+128)
  2264  05D2  084C               	movf	??_printf^(0+128),w
  2265  05D3  044D               	iorwf	(??_printf^(0+128)+1),w
  2266  05D4  1903               	btfsc	3,2
  2267  05D5  2DDC               	goto	l2509
  2268                           
  2269                           ;doprnt.c: 1190: (putch('-') );
  2270  05D6  302D               	movlw	45
  2271  05D7                     L5:	
  2272  05D7  160A  118A  2138  120A  118A  	fcall	_putch
  2273  05DC                     l2509:	
  2274                           ;doprnt.c: 1195: }
  2275                           ;doprnt.c: 1196: while(c--) {
  2276                           
  2277  05DC  30FF               	movlw	255
  2278  05DD  1683               	bsf	3,5	;RP0=1, select bank1
  2279  05DE  1303               	bcf	3,6	;RP1=0, select bank1
  2280  05DF  00CC               	movwf	??_printf^(0+128)
  2281  05E0  084C               	movf	??_printf^(0+128),w
  2282  05E1  07E8               	addwf	printf@c^(0+128),f
  2283  05E2  0A68               	incf	printf@c^(0+128),w
  2284  05E3  1903               	btfsc	3,2
  2285  05E4  2E52               	goto	l2515
  2286                           
  2287                           ;doprnt.c: 1200: {
  2288                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  2289  05E5  1683               	bsf	3,5	;RP0=1, select bank1
  2290  05E6  1303               	bcf	3,6	;RP1=0, select bank1
  2291  05E7  0868               	movf	printf@c^(0+128),w
  2292  05E8  00CC               	movwf	??_printf^(0+128)
  2293  05E9  3001               	movlw	1
  2294  05EA                     u3815:	
  2295  05EA  1003               	clrc
  2296  05EB  0DCC               	rlf	??_printf^(0+128),f
  2297  05EC  3EFF               	addlw	-1
  2298  05ED  1D03               	skipz
  2299  05EE  2DEA               	goto	u3815
  2300  05EF  1003               	clrc
  2301  05F0  0D4C               	rlf	??_printf^(0+128),w
  2302  05F1  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2303  05F2  0084               	movwf	4
  2304  05F3  160A  118A  2000  120A  118A  	fcall	stringdir
  2305  05F8  00F0               	movwf	___lldiv@divisor
  2306  05F9  160A  118A  2000  120A  118A  	fcall	stringdir
  2307  05FE  00F1               	movwf	___lldiv@divisor+1
  2308  05FF  160A  118A  2000  120A  118A  	fcall	stringdir
  2309  0604  00F2               	movwf	___lldiv@divisor+2
  2310  0605  160A  118A  2000  120A  118A  	fcall	stringdir
  2311  060A  00F3               	movwf	___lldiv@divisor+3
  2312  060B  085C               	movf	(printf@val+3)^(0+128),w
  2313  060C  00F7               	movwf	___lldiv@dividend+3
  2314  060D  085B               	movf	(printf@val+2)^(0+128),w
  2315  060E  00F6               	movwf	___lldiv@dividend+2
  2316  060F  085A               	movf	(printf@val+1)^(0+128),w
  2317  0610  00F5               	movwf	___lldiv@dividend+1
  2318  0611  0859               	movf	printf@val^(0+128),w
  2319  0612  00F4               	movwf	___lldiv@dividend
  2320  0613  160A  118A  2357  120A  118A  	fcall	___lldiv
  2321  0618  0873               	movf	?___lldiv+3,w
  2322  0619  1683               	bsf	3,5	;RP0=1, select bank1
  2323  061A  1303               	bcf	3,6	;RP1=0, select bank1
  2324  061B  00E2               	movwf	(printf@tmpval+3)^(0+128)
  2325  061C  0872               	movf	?___lldiv+2,w
  2326  061D  00E1               	movwf	(printf@tmpval+2)^(0+128)
  2327  061E  0871               	movf	?___lldiv+1,w
  2328  061F  00E0               	movwf	(printf@tmpval+1)^(0+128)
  2329  0620  0870               	movf	?___lldiv,w
  2330  0621  00DF               	movwf	printf@tmpval^(0+128)
  2331                           
  2332                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2333  0622  3000               	movlw	0
  2334  0623  00F3               	movwf	___llmod@divisor+3
  2335  0624  3000               	movlw	0
  2336  0625  00F2               	movwf	___llmod@divisor+2
  2337  0626  3000               	movlw	0
  2338  0627  00F1               	movwf	___llmod@divisor+1
  2339  0628  300A               	movlw	10
  2340  0629  00F0               	movwf	___llmod@divisor
  2341  062A  0862               	movf	(printf@tmpval+3)^(0+128),w
  2342  062B  00F7               	movwf	___llmod@dividend+3
  2343  062C  0861               	movf	(printf@tmpval+2)^(0+128),w
  2344  062D  00F6               	movwf	___llmod@dividend+2
  2345  062E  0860               	movf	(printf@tmpval+1)^(0+128),w
  2346  062F  00F5               	movwf	___llmod@dividend+1
  2347  0630  085F               	movf	printf@tmpval^(0+128),w
  2348  0631  00F4               	movwf	___llmod@dividend
  2349  0632  120A  158A  2007  120A  118A  	fcall	___llmod
  2350  0637  0873               	movf	?___llmod+3,w
  2351  0638  1683               	bsf	3,5	;RP0=1, select bank1
  2352  0639  1303               	bcf	3,6	;RP1=0, select bank1
  2353  063A  00E2               	movwf	(printf@tmpval+3)^(0+128)
  2354  063B  0872               	movf	?___llmod+2,w
  2355  063C  00E1               	movwf	(printf@tmpval+2)^(0+128)
  2356  063D  0871               	movf	?___llmod+1,w
  2357  063E  00E0               	movwf	(printf@tmpval+1)^(0+128)
  2358  063F  0870               	movf	?___llmod,w
  2359  0640  00DF               	movwf	printf@tmpval^(0+128)
  2360                           
  2361                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  2362  0641  085F               	movf	printf@tmpval^(0+128),w
  2363  0642  3E30               	addlw	48
  2364  0643  2DD7               	goto	L5
  2365  0644                     l2511:	
  2366                           ;doprnt.c: 1204: }
  2367                           ;doprnt.c: 1206: }
  2368                           ;doprnt.c: 1207: while(exp > 0) {
  2369                           
  2370                           
  2371                           ;doprnt.c: 1208: (putch('0') );
  2372  0644  3030               	movlw	48
  2373  0645  160A  118A  2138  120A  118A  	fcall	_putch
  2374                           
  2375                           ;doprnt.c: 1209: exp--;
  2376  064A  30FF               	movlw	255
  2377  064B  1683               	bsf	3,5	;RP0=1, select bank1
  2378  064C  1303               	bcf	3,6	;RP1=0, select bank1
  2379  064D  07DD               	addwf	printf@exp^(0+128),f
  2380  064E  1803               	skipnc
  2381  064F  0ADE               	incf	(printf@exp+1)^(0+128),f
  2382  0650  30FF               	movlw	255
  2383  0651  07DE               	addwf	(printf@exp+1)^(0+128),f
  2384  0652                     l2515:	
  2385  0652  085E               	movf	(printf@exp+1)^(0+128),w
  2386  0653  3A80               	xorlw	128
  2387  0654  00FF               	movwf	127
  2388  0655  3080               	movlw	128
  2389  0656  027F               	subwf	127,w
  2390  0657  1D03               	skipz
  2391  0658  2E5B               	goto	u3835
  2392  0659  3001               	movlw	1
  2393  065A  025D               	subwf	printf@exp^(0+128),w
  2394  065B                     u3835:	
  2395  065B  1803               	skipnc
  2396  065C  2E44               	goto	l2511
  2397                           
  2398                           ;doprnt.c: 1210: }
  2399                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2400  065D  1683               	bsf	3,5	;RP0=1, select bank1
  2401  065E  1303               	bcf	3,6	;RP1=0, select bank1
  2402  065F  0864               	movf	(printf@prec+1)^(0+128),w
  2403  0660  3A80               	xorlw	128
  2404  0661  00FF               	movwf	127
  2405  0662  3080               	movlw	128
  2406  0663  027F               	subwf	127,w
  2407  0664  1D03               	skipz
  2408  0665  2E68               	goto	u3845
  2409  0666  3009               	movlw	9
  2410  0667  0263               	subwf	printf@prec^(0+128),w
  2411  0668                     u3845:	
  2412  0668  1C03               	skipc
  2413  0669  2E6E               	goto	l2521
  2414                           
  2415                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2416  066A  3008               	movlw	8
  2417  066B  1683               	bsf	3,5	;RP0=1, select bank1
  2418  066C  1303               	bcf	3,6	;RP1=0, select bank1
  2419  066D  2E71               	goto	L3
  2420  066E                     l2521:	
  2421                           
  2422                           ;doprnt.c: 1213: else
  2423                           ;doprnt.c: 1214: c = prec;
  2424  066E  1683               	bsf	3,5	;RP0=1, select bank1
  2425  066F  1303               	bcf	3,6	;RP1=0, select bank1
  2426  0670  0863               	movf	printf@prec^(0+128),w
  2427  0671                     L3:	
  2428  0671  00CC               	movwf	??_printf^(0+128)
  2429  0672  084C               	movf	??_printf^(0+128),w
  2430  0673  00E8               	movwf	printf@c^(0+128)
  2431                           
  2432                           ;doprnt.c: 1215: prec -= c;
  2433  0674  0868               	movf	printf@c^(0+128),w
  2434  0675  00CC               	movwf	??_printf^(0+128)
  2435  0676  01CD               	clrf	(??_printf^(0+128)+1)
  2436  0677  1BCC               	btfsc	??_printf^(0+128),7
  2437  0678  03CD               	decf	(??_printf^(0+128)+1),f
  2438  0679  084C               	movf	??_printf^(0+128),w
  2439  067A  02E3               	subwf	printf@prec^(0+128),f
  2440  067B  084D               	movf	(??_printf+1)^(0+128),w
  2441  067C  1C03               	skipc
  2442  067D  03E4               	decf	(printf@prec+1)^(0+128),f
  2443  067E  02E4               	subwf	(printf@prec+1)^(0+128),f
  2444                           
  2445                           ;doprnt.c: 1219: if(c)
  2446  067F  0868               	movf	printf@c^(0+128),w
  2447  0680  1903               	btfsc	3,2
  2448  0681  2E88               	goto	l2527
  2449                           
  2450                           ;doprnt.c: 1221: (putch('.') );
  2451  0682  302E               	movlw	46
  2452  0683  160A  118A  2138  120A  118A  	fcall	_putch
  2453  0688                     l2527:	
  2454                           
  2455                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2456  0688  1683               	bsf	3,5	;RP0=1, select bank1
  2457  0689  1303               	bcf	3,6	;RP1=0, select bank1
  2458  068A  0868               	movf	printf@c^(0+128),w
  2459  068B  120A  158A  228E  120A  118A  	fcall	_scale
  2460  0690  1283               	bcf	3,5	;RP0=0, select bank0
  2461  0691  1303               	bcf	3,6	;RP1=0, select bank0
  2462  0692  0840               	movf	?_scale,w
  2463  0693  1683               	bsf	3,5	;RP0=1, select bank1
  2464  0694  1303               	bcf	3,6	;RP1=0, select bank1
  2465  0695  00D2               	movwf	_printf$720^(0+128)
  2466  0696  1283               	bcf	3,5	;RP0=0, select bank0
  2467  0697  1303               	bcf	3,6	;RP1=0, select bank0
  2468  0698  0841               	movf	?_scale+1,w
  2469  0699  1683               	bsf	3,5	;RP0=1, select bank1
  2470  069A  1303               	bcf	3,6	;RP1=0, select bank1
  2471  069B  00D3               	movwf	(_printf$720+1)^(0+128)
  2472  069C  1283               	bcf	3,5	;RP0=0, select bank0
  2473  069D  1303               	bcf	3,6	;RP1=0, select bank0
  2474  069E  0842               	movf	?_scale+2,w
  2475  069F  1683               	bsf	3,5	;RP0=1, select bank1
  2476  06A0  1303               	bcf	3,6	;RP1=0, select bank1
  2477  06A1  00D4               	movwf	(_printf$720+2)^(0+128)
  2478                           
  2479                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2480  06A2  0852               	movf	_printf$720^(0+128),w
  2481  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  2482  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  2483  06A5  00B3               	movwf	___ftmul@f2
  2484  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  2485  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  2486  06A8  0853               	movf	(_printf$720+1)^(0+128),w
  2487  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  2488  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  2489  06AB  00B4               	movwf	___ftmul@f2+1
  2490  06AC  1683               	bsf	3,5	;RP0=1, select bank1
  2491  06AD  1303               	bcf	3,6	;RP1=0, select bank1
  2492  06AE  0854               	movf	(_printf$720+2)^(0+128),w
  2493  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  2494  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  2495  06B1  00B5               	movwf	___ftmul@f2+2
  2496  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  2497  06B3  1303               	bcf	3,6	;RP1=0, select bank1
  2498  06B4  0865               	movf	printf@fval^(0+128),w
  2499  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  2500  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  2501  06B7  00B0               	movwf	___ftmul@f1
  2502  06B8  1683               	bsf	3,5	;RP0=1, select bank1
  2503  06B9  1303               	bcf	3,6	;RP1=0, select bank1
  2504  06BA  0866               	movf	(printf@fval+1)^(0+128),w
  2505  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  2506  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  2507  06BD  00B1               	movwf	___ftmul@f1+1
  2508  06BE  1683               	bsf	3,5	;RP0=1, select bank1
  2509  06BF  1303               	bcf	3,6	;RP1=0, select bank1
  2510  06C0  0867               	movf	(printf@fval+2)^(0+128),w
  2511  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  2512  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  2513  06C3  00B2               	movwf	___ftmul@f1+2
  2514  06C4  160A  118A  272D  120A  118A  	fcall	___ftmul
  2515  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  2516  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  2517  06CB  0830               	movf	?___ftmul,w
  2518  06CC  00C9               	movwf	___fttol@f1
  2519  06CD  0831               	movf	?___ftmul+1,w
  2520  06CE  00CA               	movwf	___fttol@f1+1
  2521  06CF  0832               	movf	?___ftmul+2,w
  2522  06D0  00CB               	movwf	___fttol@f1+2
  2523  06D1  160A  118A  252B  120A  118A  	fcall	___fttol
  2524  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  2525  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  2526  06D8  084C               	movf	?___fttol+3,w
  2527  06D9  1683               	bsf	3,5	;RP0=1, select bank1
  2528  06DA  1303               	bcf	3,6	;RP1=0, select bank1
  2529  06DB  00DC               	movwf	(printf@val+3)^(0+128)
  2530  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  2531  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  2532  06DE  084B               	movf	?___fttol+2,w
  2533  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  2534  06E0  1303               	bcf	3,6	;RP1=0, select bank1
  2535  06E1  00DB               	movwf	(printf@val+2)^(0+128)
  2536  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  2537  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  2538  06E4  084A               	movf	?___fttol+1,w
  2539  06E5  1683               	bsf	3,5	;RP0=1, select bank1
  2540  06E6  1303               	bcf	3,6	;RP1=0, select bank1
  2541  06E7  00DA               	movwf	(printf@val+1)^(0+128)
  2542  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  2543  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  2544  06EA  0849               	movf	?___fttol,w
  2545  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  2546  06EC  1303               	bcf	3,6	;RP1=0, select bank1
  2547  06ED                     L4:	
  2548  06ED  00D9               	movwf	printf@val^(0+128)
  2549  06EE  30FF               	movlw	255
  2550  06EF  00CC               	movwf	??_printf^(0+128)
  2551  06F0  084C               	movf	??_printf^(0+128),w
  2552  06F1  07E8               	addwf	printf@c^(0+128),f
  2553  06F2  0A68               	incf	printf@c^(0+128),w
  2554  06F3  1903               	btfsc	3,2
  2555  06F4  2FA1               	goto	l2543
  2556                           
  2557                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2558                           
  2559                           ;doprnt.c: 1228: while(c--) {
  2560  06F5  0868               	movf	printf@c^(0+128),w
  2561  06F6  00CC               	movwf	??_printf^(0+128)
  2562  06F7  3001               	movlw	1
  2563  06F8                     u3865:	
  2564  06F8  1003               	clrc
  2565  06F9  0DCC               	rlf	??_printf^(0+128),f
  2566  06FA  3EFF               	addlw	-1
  2567  06FB  1D03               	skipz
  2568  06FC  2EF8               	goto	u3865
  2569  06FD  1003               	clrc
  2570  06FE  0D4C               	rlf	??_printf^(0+128),w
  2571  06FF  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2572  0700  0084               	movwf	4
  2573  0701  160A  118A  2000  120A  118A  	fcall	stringdir
  2574  0706  00F0               	movwf	___lldiv@divisor
  2575  0707  160A  118A  2000  120A  118A  	fcall	stringdir
  2576  070C  00F1               	movwf	___lldiv@divisor+1
  2577  070D  160A  118A  2000  120A  118A  	fcall	stringdir
  2578  0712  00F2               	movwf	___lldiv@divisor+2
  2579  0713  160A  118A  2000  120A  118A  	fcall	stringdir
  2580  0718  00F3               	movwf	___lldiv@divisor+3
  2581  0719  085C               	movf	(printf@val+3)^(0+128),w
  2582  071A  00F7               	movwf	___lldiv@dividend+3
  2583  071B  085B               	movf	(printf@val+2)^(0+128),w
  2584  071C  00F6               	movwf	___lldiv@dividend+2
  2585  071D  085A               	movf	(printf@val+1)^(0+128),w
  2586  071E  00F5               	movwf	___lldiv@dividend+1
  2587  071F  0859               	movf	printf@val^(0+128),w
  2588  0720  00F4               	movwf	___lldiv@dividend
  2589  0721  160A  118A  2357  120A  118A  	fcall	___lldiv
  2590  0726  0873               	movf	?___lldiv+3,w
  2591  0727  1683               	bsf	3,5	;RP0=1, select bank1
  2592  0728  1303               	bcf	3,6	;RP1=0, select bank1
  2593  0729  00E2               	movwf	(printf@tmpval+3)^(0+128)
  2594  072A  0872               	movf	?___lldiv+2,w
  2595  072B  00E1               	movwf	(printf@tmpval+2)^(0+128)
  2596  072C  0871               	movf	?___lldiv+1,w
  2597  072D  00E0               	movwf	(printf@tmpval+1)^(0+128)
  2598  072E  0870               	movf	?___lldiv,w
  2599  072F  00DF               	movwf	printf@tmpval^(0+128)
  2600                           
  2601                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2602  0730  3000               	movlw	0
  2603  0731  00F3               	movwf	___llmod@divisor+3
  2604  0732  3000               	movlw	0
  2605  0733  00F2               	movwf	___llmod@divisor+2
  2606  0734  3000               	movlw	0
  2607  0735  00F1               	movwf	___llmod@divisor+1
  2608  0736  300A               	movlw	10
  2609  0737  00F0               	movwf	___llmod@divisor
  2610  0738  0862               	movf	(printf@tmpval+3)^(0+128),w
  2611  0739  00F7               	movwf	___llmod@dividend+3
  2612  073A  0861               	movf	(printf@tmpval+2)^(0+128),w
  2613  073B  00F6               	movwf	___llmod@dividend+2
  2614  073C  0860               	movf	(printf@tmpval+1)^(0+128),w
  2615  073D  00F5               	movwf	___llmod@dividend+1
  2616  073E  085F               	movf	printf@tmpval^(0+128),w
  2617  073F  00F4               	movwf	___llmod@dividend
  2618  0740  120A  158A  2007  120A  118A  	fcall	___llmod
  2619  0745  0873               	movf	?___llmod+3,w
  2620  0746  1683               	bsf	3,5	;RP0=1, select bank1
  2621  0747  1303               	bcf	3,6	;RP1=0, select bank1
  2622  0748  00E2               	movwf	(printf@tmpval+3)^(0+128)
  2623  0749  0872               	movf	?___llmod+2,w
  2624  074A  00E1               	movwf	(printf@tmpval+2)^(0+128)
  2625  074B  0871               	movf	?___llmod+1,w
  2626  074C  00E0               	movwf	(printf@tmpval+1)^(0+128)
  2627  074D  0870               	movf	?___llmod,w
  2628  074E  00DF               	movwf	printf@tmpval^(0+128)
  2629                           
  2630                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  2631  074F  085F               	movf	printf@tmpval^(0+128),w
  2632  0750  3E30               	addlw	48
  2633  0751  160A  118A  2138  120A  118A  	fcall	_putch
  2634                           
  2635                           ;doprnt.c: 1232: val %= dpowers[c];
  2636  0756  1683               	bsf	3,5	;RP0=1, select bank1
  2637  0757  1303               	bcf	3,6	;RP1=0, select bank1
  2638  0758  0868               	movf	printf@c^(0+128),w
  2639  0759  00CC               	movwf	??_printf^(0+128)
  2640  075A  3001               	movlw	1
  2641  075B                     u3875:	
  2642  075B  1003               	clrc
  2643  075C  0DCC               	rlf	??_printf^(0+128),f
  2644  075D  3EFF               	addlw	-1
  2645  075E  1D03               	skipz
  2646  075F  2F5B               	goto	u3875
  2647  0760  1003               	clrc
  2648  0761  0D4C               	rlf	??_printf^(0+128),w
  2649  0762  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2650  0763  0084               	movwf	4
  2651  0764  160A  118A  2000  120A  118A  	fcall	stringdir
  2652  0769  00F0               	movwf	___llmod@divisor
  2653  076A  160A  118A  2000  120A  118A  	fcall	stringdir
  2654  076F  00F1               	movwf	___llmod@divisor+1
  2655  0770  160A  118A  2000  120A  118A  	fcall	stringdir
  2656  0775  00F2               	movwf	___llmod@divisor+2
  2657  0776  160A  118A  2000  120A  118A  	fcall	stringdir
  2658  077B  00F3               	movwf	___llmod@divisor+3
  2659  077C  085C               	movf	(printf@val+3)^(0+128),w
  2660  077D  00F7               	movwf	___llmod@dividend+3
  2661  077E  085B               	movf	(printf@val+2)^(0+128),w
  2662  077F  00F6               	movwf	___llmod@dividend+2
  2663  0780  085A               	movf	(printf@val+1)^(0+128),w
  2664  0781  00F5               	movwf	___llmod@dividend+1
  2665  0782  0859               	movf	printf@val^(0+128),w
  2666  0783  00F4               	movwf	___llmod@dividend
  2667  0784  120A  158A  2007  120A  118A  	fcall	___llmod
  2668  0789  0873               	movf	?___llmod+3,w
  2669  078A  1683               	bsf	3,5	;RP0=1, select bank1
  2670  078B  1303               	bcf	3,6	;RP1=0, select bank1
  2671  078C  00DC               	movwf	(printf@val+3)^(0+128)
  2672  078D  0872               	movf	?___llmod+2,w
  2673  078E  00DB               	movwf	(printf@val+2)^(0+128)
  2674  078F  0871               	movf	?___llmod+1,w
  2675  0790  00DA               	movwf	(printf@val+1)^(0+128)
  2676  0791  0870               	movf	?___llmod,w
  2677  0792  2EED               	goto	L4
  2678  0793                     l2539:	
  2679                           ;doprnt.c: 1233: }
  2680                           ;doprnt.c: 1235: while(prec) {
  2681                           
  2682                           
  2683                           ;doprnt.c: 1236: (putch('0') );
  2684  0793  3030               	movlw	48
  2685  0794  160A  118A  2138  120A  118A  	fcall	_putch
  2686                           
  2687                           ;doprnt.c: 1237: prec--;
  2688  0799  30FF               	movlw	255
  2689  079A  1683               	bsf	3,5	;RP0=1, select bank1
  2690  079B  1303               	bcf	3,6	;RP1=0, select bank1
  2691  079C  07E3               	addwf	printf@prec^(0+128),f
  2692  079D  1803               	skipnc
  2693  079E  0AE4               	incf	(printf@prec+1)^(0+128),f
  2694  079F  30FF               	movlw	255
  2695  07A0  07E4               	addwf	(printf@prec+1)^(0+128),f
  2696  07A1                     l2543:	
  2697  07A1  0863               	movf	printf@prec^(0+128),w
  2698  07A2  0464               	iorwf	(printf@prec+1)^(0+128),w
  2699  07A3  1903               	btfsc	3,2
  2700  07A4  2A6B               	goto	l2559
  2701  07A5  2F93               	goto	l2539
  2702  07A6                     l2545:	
  2703                           ;doprnt.c: 1238: }
  2704                           ;doprnt.c: 1245: continue;
  2705                           
  2706                           
  2707                           ;doprnt.c: 1246: }
  2708                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  2709  07A6  0863               	movf	printf@prec^(0+128),w
  2710  07A7  0464               	iorwf	(printf@prec+1)^(0+128),w
  2711  07A8  1D03               	btfss	3,2
  2712  07A9  2FB6               	goto	l186
  2713  07AA  085C               	movf	(printf@val+3)^(0+128),w
  2714  07AB  045B               	iorwf	(printf@val+2)^(0+128),w
  2715  07AC  045A               	iorwf	(printf@val+1)^(0+128),w
  2716  07AD  0459               	iorwf	printf@val^(0+128),w
  2717  07AE  1D03               	skipz
  2718  07AF  2FB6               	goto	l186
  2719                           
  2720                           ;doprnt.c: 1291: prec++;
  2721  07B0  3001               	movlw	1
  2722  07B1  07E3               	addwf	printf@prec^(0+128),f
  2723  07B2  1803               	skipnc
  2724  07B3  0AE4               	incf	(printf@prec+1)^(0+128),f
  2725  07B4  3000               	movlw	0
  2726  07B5  07E4               	addwf	(printf@prec+1)^(0+128),f
  2727  07B6                     l186:	
  2728                           
  2729                           ;doprnt.c: 1339: if(c < prec)
  2730  07B6  0868               	movf	printf@c^(0+128),w
  2731  07B7  00CC               	movwf	??_printf^(0+128)
  2732  07B8  01CD               	clrf	(??_printf^(0+128)+1)
  2733  07B9  1BCC               	btfsc	??_printf^(0+128),7
  2734  07BA  03CD               	decf	(??_printf^(0+128)+1),f
  2735  07BB  084D               	movf	(??_printf+1)^(0+128),w
  2736  07BC  3A80               	xorlw	128
  2737  07BD  00CE               	movwf	(??_printf+2)^(0+128)
  2738  07BE  0864               	movf	(printf@prec+1)^(0+128),w
  2739  07BF  3A80               	xorlw	128
  2740  07C0  024E               	subwf	(??_printf+2)^(0+128),w
  2741  07C1  1D03               	skipz
  2742  07C2  2FC5               	goto	u3925
  2743  07C3  0863               	movf	printf@prec^(0+128),w
  2744  07C4  024C               	subwf	??_printf^(0+128),w
  2745  07C5                     u3925:	
  2746  07C5  1803               	skipnc
  2747  07C6  2FCE               	goto	l2553
  2748                           
  2749                           ;doprnt.c: 1340: c = prec;
  2750  07C7  1683               	bsf	3,5	;RP0=1, select bank1
  2751  07C8  1303               	bcf	3,6	;RP1=0, select bank1
  2752  07C9  0863               	movf	printf@prec^(0+128),w
  2753  07CA  00CC               	movwf	??_printf^(0+128)
  2754  07CB  084C               	movf	??_printf^(0+128),w
  2755  07CC  00E8               	movwf	printf@c^(0+128)
  2756  07CD  2FE8               	goto	l188
  2757  07CE                     l2553:	
  2758                           
  2759                           ;doprnt.c: 1341: else if(prec < c)
  2760  07CE  1683               	bsf	3,5	;RP0=1, select bank1
  2761  07CF  1303               	bcf	3,6	;RP1=0, select bank1
  2762  07D0  0868               	movf	printf@c^(0+128),w
  2763  07D1  00CC               	movwf	??_printf^(0+128)
  2764  07D2  01CD               	clrf	(??_printf^(0+128)+1)
  2765  07D3  1BCC               	btfsc	??_printf^(0+128),7
  2766  07D4  03CD               	decf	(??_printf^(0+128)+1),f
  2767  07D5  0864               	movf	(printf@prec+1)^(0+128),w
  2768  07D6  3A80               	xorlw	128
  2769  07D7  00CE               	movwf	(??_printf+2)^(0+128)
  2770  07D8  084D               	movf	(??_printf+1)^(0+128),w
  2771  07D9  3A80               	xorlw	128
  2772  07DA  024E               	subwf	(??_printf+2)^(0+128),w
  2773  07DB  1D03               	skipz
  2774  07DC  2FDF               	goto	u3935
  2775  07DD  084C               	movf	??_printf^(0+128),w
  2776  07DE  0263               	subwf	printf@prec^(0+128),w
  2777  07DF                     u3935:	
  2778  07DF  1803               	skipnc
  2779  07E0  2FE8               	goto	l188
  2780                           
  2781                           ;doprnt.c: 1342: prec = c;
  2782  07E1  1683               	bsf	3,5	;RP0=1, select bank1
  2783  07E2  1303               	bcf	3,6	;RP1=0, select bank1
  2784  07E3  0868               	movf	printf@c^(0+128),w
  2785  07E4  00E3               	movwf	printf@prec^(0+128)
  2786  07E5  01E4               	clrf	(printf@prec+1)^(0+128)
  2787  07E6  1BE3               	btfsc	printf@prec^(0+128),7
  2788  07E7  03E4               	decf	(printf@prec+1)^(0+128),f
  2789  07E8                     l188:	
  2790                           
  2791                           ;doprnt.c: 1422: {
  2792                           ;doprnt.c: 1438: if(flag & 0x03)
  2793  07E8  3003               	movlw	3
  2794  07E9  1683               	bsf	3,5	;RP0=1, select bank1
  2795  07EA  1303               	bcf	3,6	;RP1=0, select bank1
  2796  07EB  0556               	andwf	printf@flag^(0+128),w
  2797  07EC  00CC               	movwf	??_printf^(0+128)
  2798  07ED  3000               	movlw	0
  2799  07EE  0557               	andwf	(printf@flag+1)^(0+128),w
  2800  07EF  00CD               	movwf	(??_printf+1)^(0+128)
  2801  07F0  084C               	movf	??_printf^(0+128),w
  2802  07F1  044D               	iorwf	(??_printf^(0+128)+1),w
  2803  07F2  1903               	btfsc	3,2
  2804  07F3  2A6B               	goto	l2559
  2805                           
  2806                           ;doprnt.c: 1439: (putch('-') );
  2807  07F4  302D               	movlw	45
  2808  07F5  160A  118A  2138  120A  118A  	fcall	_putch
  2809  07FA  2A6B               	goto	l2559
  2810  07FB                     l192:	
  2811                           ;doprnt.c: 1540: return 0;
  2812                           ;	Return value of _printf is never used
  2813                           
  2814                           ;doprnt.c: 1469: }
  2815                           ;doprnt.c: 1533: }
  2816                           ;doprnt.c: 1535: alldone:
  2817                           
  2818  07FB  0008               	return
  2819  07FC                     __end_of_printf:	
  2820                           
  2821                           	psect	text3
  2822  0A8E                     __ptext3:	
  2823 ;; *************** function _scale *****************
  2824 ;; Defined at:
  2825 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  scl             1    wreg     char 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  scl             1   40[BANK0 ] char 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  3   32[BANK0 ] char 
  2832 ;; Registers used:
  2833 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2839 ;;      Params:         0       3       0       0       0
  2840 ;;      Locals:         0       4       0       0       0
  2841 ;;      Temps:          0       2       0       0       0
  2842 ;;      Totals:         0       9       0       0       0
  2843 ;;Total ram usage:        9 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:    2
  2846 ;; This function calls:
  2847 ;;		___awdiv
  2848 ;;		___awmod
  2849 ;;		___bmul
  2850 ;;		___ftmul
  2851 ;; This function is called by:
  2852 ;;		_printf
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           
  2857                           ;psect for function _scale
  2858  0A8E                     _scale:	
  2859                           
  2860                           ;incstack = 0
  2861                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2862                           ;scale@scl stored from wreg
  2863  0A8E  1283               	bcf	3,5	;RP0=0, select bank0
  2864  0A8F  1303               	bcf	3,6	;RP1=0, select bank0
  2865  0A90  00C8               	movwf	scale@scl
  2866                           
  2867                           ;doprnt.c: 428: if(scl < 0) {
  2868  0A91  1FC8               	btfss	scale@scl,7
  2869  0A92  2BDF               	goto	l2111
  2870                           
  2871                           ;doprnt.c: 429: scl = -scl;
  2872  0A93  09C8               	comf	scale@scl,f
  2873  0A94  0AC8               	incf	scale@scl,f
  2874                           
  2875                           ;doprnt.c: 430: if(scl>=110)
  2876  0A95  0848               	movf	scale@scl,w
  2877  0A96  3A80               	xorlw	128
  2878  0A97  3E12               	addlw	-238
  2879  0A98  1C03               	skipc
  2880  0A99  2B52               	goto	l2101
  2881                           
  2882                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2883  0A9A  3003               	movlw	3
  2884  0A9B  00C3               	movwf	??_scale
  2885  0A9C  0843               	movf	??_scale,w
  2886  0A9D  00A4               	movwf	___bmul@multiplicand
  2887  0A9E  300A               	movlw	10
  2888  0A9F  00F7               	movwf	___awdiv@divisor
  2889  0AA0  3000               	movlw	0
  2890  0AA1  00F8               	movwf	___awdiv@divisor+1
  2891  0AA2  0848               	movf	scale@scl,w
  2892  0AA3  00F2               	movwf	___awmod@dividend
  2893  0AA4  01F3               	clrf	___awmod@dividend+1
  2894  0AA5  1BF2               	btfsc	___awmod@dividend,7
  2895  0AA6  03F3               	decf	___awmod@dividend+1,f
  2896  0AA7  3064               	movlw	100
  2897  0AA8  00F0               	movwf	___awmod@divisor
  2898  0AA9  3000               	movlw	0
  2899  0AAA  00F1               	movwf	___awmod@divisor+1
  2900  0AAB  160A  118A  2254  120A  158A  	fcall	___awmod
  2901  0AB0  0871               	movf	?___awmod+1,w
  2902  0AB1  00FA               	movwf	___awdiv@dividend+1
  2903  0AB2  0870               	movf	?___awmod,w
  2904  0AB3  00F9               	movwf	___awdiv@dividend
  2905  0AB4  160A  118A  229F  120A  158A  	fcall	___awdiv
  2906  0AB9  0877               	movf	?___awdiv,w
  2907  0ABA  3E09               	addlw	9
  2908  0ABB  160A  118A  216F  120A  158A  	fcall	___bmul
  2909  0AC0  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2910  0AC1  0084               	movwf	4
  2911  0AC2  160A  118A  2000  120A  158A  	fcall	stringdir
  2912  0AC7  1283               	bcf	3,5	;RP0=0, select bank0
  2913  0AC8  1303               	bcf	3,6	;RP1=0, select bank0
  2914  0AC9  00B0               	movwf	___ftmul@f1
  2915  0ACA  160A  118A  2000  120A  158A  	fcall	stringdir
  2916  0ACF  00B1               	movwf	___ftmul@f1+1
  2917  0AD0  160A  118A  2000  120A  158A  	fcall	stringdir
  2918  0AD5  00B2               	movwf	___ftmul@f1+2
  2919  0AD6  3003               	movlw	3
  2920  0AD7  00C4               	movwf	??_scale+1
  2921  0AD8  0844               	movf	??_scale+1,w
  2922  0AD9  00A4               	movwf	___bmul@multiplicand
  2923  0ADA  3064               	movlw	100
  2924  0ADB  00F7               	movwf	___awdiv@divisor
  2925  0ADC  3000               	movlw	0
  2926  0ADD  00F8               	movwf	___awdiv@divisor+1
  2927  0ADE  0848               	movf	scale@scl,w
  2928  0ADF  00F9               	movwf	___awdiv@dividend
  2929  0AE0  01FA               	clrf	___awdiv@dividend+1
  2930  0AE1  1BF9               	btfsc	___awdiv@dividend,7
  2931  0AE2  03FA               	decf	___awdiv@dividend+1,f
  2932  0AE3  160A  118A  229F  120A  158A  	fcall	___awdiv
  2933  0AE8  0877               	movf	?___awdiv,w
  2934  0AE9  3E12               	addlw	18
  2935  0AEA  160A  118A  216F  120A  158A  	fcall	___bmul
  2936  0AEF  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2937  0AF0  0084               	movwf	4
  2938  0AF1  160A  118A  2000  120A  158A  	fcall	stringdir
  2939  0AF6  1283               	bcf	3,5	;RP0=0, select bank0
  2940  0AF7  1303               	bcf	3,6	;RP1=0, select bank0
  2941  0AF8  00B3               	movwf	___ftmul@f2
  2942  0AF9  160A  118A  2000  120A  158A  	fcall	stringdir
  2943  0AFE  00B4               	movwf	___ftmul@f2+1
  2944  0AFF  160A  118A  2000  120A  158A  	fcall	stringdir
  2945  0B04  00B5               	movwf	___ftmul@f2+2
  2946  0B05  160A  118A  272D  120A  158A  	fcall	___ftmul
  2947  0B0A  1283               	bcf	3,5	;RP0=0, select bank0
  2948  0B0B  1303               	bcf	3,6	;RP1=0, select bank0
  2949  0B0C  0830               	movf	?___ftmul,w
  2950  0B0D  00C5               	movwf	_scale$719
  2951  0B0E  0831               	movf	?___ftmul+1,w
  2952  0B0F  00C6               	movwf	_scale$719+1
  2953  0B10  0832               	movf	?___ftmul+2,w
  2954  0B11  00C7               	movwf	_scale$719+2
  2955                           
  2956                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2957  0B12  3003               	movlw	3
  2958  0B13  00C3               	movwf	??_scale
  2959  0B14  0843               	movf	??_scale,w
  2960  0B15  00A4               	movwf	___bmul@multiplicand
  2961  0B16  0848               	movf	scale@scl,w
  2962  0B17  00F2               	movwf	___awmod@dividend
  2963  0B18  01F3               	clrf	___awmod@dividend+1
  2964  0B19  1BF2               	btfsc	___awmod@dividend,7
  2965  0B1A  03F3               	decf	___awmod@dividend+1,f
  2966  0B1B  300A               	movlw	10
  2967  0B1C  00F0               	movwf	___awmod@divisor
  2968  0B1D  3000               	movlw	0
  2969  0B1E  00F1               	movwf	___awmod@divisor+1
  2970  0B1F  160A  118A  2254  120A  158A  	fcall	___awmod
  2971  0B24  0870               	movf	?___awmod,w
  2972  0B25  160A  118A  216F  120A  158A  	fcall	___bmul
  2973  0B2A  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2974  0B2B  0084               	movwf	4
  2975  0B2C  160A  118A  2000  120A  158A  	fcall	stringdir
  2976  0B31  1283               	bcf	3,5	;RP0=0, select bank0
  2977  0B32  1303               	bcf	3,6	;RP1=0, select bank0
  2978  0B33  00B0               	movwf	___ftmul@f1
  2979  0B34  160A  118A  2000  120A  158A  	fcall	stringdir
  2980  0B39  00B1               	movwf	___ftmul@f1+1
  2981  0B3A  160A  118A  2000  120A  158A  	fcall	stringdir
  2982  0B3F  00B2               	movwf	___ftmul@f1+2
  2983  0B40  0845               	movf	_scale$719,w
  2984  0B41  00B3               	movwf	___ftmul@f2
  2985  0B42  0846               	movf	_scale$719+1,w
  2986  0B43  00B4               	movwf	___ftmul@f2+1
  2987  0B44  0847               	movf	_scale$719+2,w
  2988  0B45  00B5               	movwf	___ftmul@f2+2
  2989  0B46  160A  118A  272D   	fcall	___ftmul
  2990  0B49  1283               	bcf	3,5	;RP0=0, select bank0
  2991  0B4A  1303               	bcf	3,6	;RP1=0, select bank0
  2992  0B4B  0830               	movf	?___ftmul,w
  2993  0B4C  00C0               	movwf	?_scale
  2994  0B4D  0831               	movf	?___ftmul+1,w
  2995  0B4E  00C1               	movwf	?_scale+1
  2996  0B4F  0832               	movf	?___ftmul+2,w
  2997  0B50  00C2               	movwf	?_scale+2
  2998  0B51  0008               	return
  2999  0B52                     l2101:	
  3000                           
  3001                           ;doprnt.c: 432: else if(scl > 10)
  3002  0B52  0848               	movf	scale@scl,w
  3003  0B53  3A80               	xorlw	128
  3004  0B54  3E75               	addlw	-139
  3005  0B55  1C03               	skipc
  3006  0B56  2BC0               	goto	l2107
  3007                           
  3008                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  3009  0B57  3003               	movlw	3
  3010  0B58  00C3               	movwf	??_scale
  3011  0B59  0843               	movf	??_scale,w
  3012  0B5A  00A4               	movwf	___bmul@multiplicand
  3013  0B5B  0848               	movf	scale@scl,w
  3014  0B5C  00F2               	movwf	___awmod@dividend
  3015  0B5D  01F3               	clrf	___awmod@dividend+1
  3016  0B5E  1BF2               	btfsc	___awmod@dividend,7
  3017  0B5F  03F3               	decf	___awmod@dividend+1,f
  3018  0B60  300A               	movlw	10
  3019  0B61  00F0               	movwf	___awmod@divisor
  3020  0B62  3000               	movlw	0
  3021  0B63  00F1               	movwf	___awmod@divisor+1
  3022  0B64  160A  118A  2254  120A  158A  	fcall	___awmod
  3023  0B69  0870               	movf	?___awmod,w
  3024  0B6A  160A  118A  216F  120A  158A  	fcall	___bmul
  3025  0B6F  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3026  0B70  0084               	movwf	4
  3027  0B71  160A  118A  2000  120A  158A  	fcall	stringdir
  3028  0B76  1283               	bcf	3,5	;RP0=0, select bank0
  3029  0B77  1303               	bcf	3,6	;RP1=0, select bank0
  3030  0B78  00B0               	movwf	___ftmul@f1
  3031  0B79  160A  118A  2000  120A  158A  	fcall	stringdir
  3032  0B7E  00B1               	movwf	___ftmul@f1+1
  3033  0B7F  160A  118A  2000  120A  158A  	fcall	stringdir
  3034  0B84  00B2               	movwf	___ftmul@f1+2
  3035  0B85  3003               	movlw	3
  3036  0B86  00C4               	movwf	??_scale+1
  3037  0B87  0844               	movf	??_scale+1,w
  3038  0B88  00A4               	movwf	___bmul@multiplicand
  3039  0B89  300A               	movlw	10
  3040  0B8A  00F7               	movwf	___awdiv@divisor
  3041  0B8B  3000               	movlw	0
  3042  0B8C  00F8               	movwf	___awdiv@divisor+1
  3043  0B8D  0848               	movf	scale@scl,w
  3044  0B8E  00F9               	movwf	___awdiv@dividend
  3045  0B8F  01FA               	clrf	___awdiv@dividend+1
  3046  0B90  1BF9               	btfsc	___awdiv@dividend,7
  3047  0B91  03FA               	decf	___awdiv@dividend+1,f
  3048  0B92  160A  118A  229F  120A  158A  	fcall	___awdiv
  3049  0B97  0877               	movf	?___awdiv,w
  3050  0B98  3E09               	addlw	9
  3051  0B99  160A  118A  216F  120A  158A  	fcall	___bmul
  3052  0B9E  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3053  0B9F  0084               	movwf	4
  3054  0BA0  160A  118A  2000  120A  158A  	fcall	stringdir
  3055  0BA5  1283               	bcf	3,5	;RP0=0, select bank0
  3056  0BA6  1303               	bcf	3,6	;RP1=0, select bank0
  3057  0BA7  00B3               	movwf	___ftmul@f2
  3058  0BA8  160A  118A  2000  120A  158A  	fcall	stringdir
  3059  0BAD  00B4               	movwf	___ftmul@f2+1
  3060  0BAE  160A  118A  2000  120A  158A  	fcall	stringdir
  3061  0BB3  00B5               	movwf	___ftmul@f2+2
  3062  0BB4  160A  118A  272D   	fcall	___ftmul
  3063  0BB7  1283               	bcf	3,5	;RP0=0, select bank0
  3064  0BB8  1303               	bcf	3,6	;RP1=0, select bank0
  3065  0BB9  0830               	movf	?___ftmul,w
  3066  0BBA  00C0               	movwf	?_scale
  3067  0BBB  0831               	movf	?___ftmul+1,w
  3068  0BBC  00C1               	movwf	?_scale+1
  3069  0BBD  0832               	movf	?___ftmul+2,w
  3070  0BBE  00C2               	movwf	?_scale+2
  3071  0BBF  0008               	return
  3072  0BC0                     l2107:	
  3073                           
  3074                           ;doprnt.c: 434: return _npowers_[scl];
  3075  0BC0  3003               	movlw	3
  3076  0BC1  00C3               	movwf	??_scale
  3077  0BC2  0843               	movf	??_scale,w
  3078  0BC3  00A4               	movwf	___bmul@multiplicand
  3079  0BC4  0848               	movf	scale@scl,w
  3080  0BC5  160A  118A  216F  120A  158A  	fcall	___bmul
  3081  0BCA  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3082  0BCB  0084               	movwf	4
  3083  0BCC  160A  118A  2000  120A  158A  	fcall	stringdir
  3084  0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  3085  0BD2  1303               	bcf	3,6	;RP1=0, select bank0
  3086  0BD3  00C0               	movwf	?_scale
  3087  0BD4  160A  118A  2000  120A  158A  	fcall	stringdir
  3088  0BD9  00C1               	movwf	?_scale+1
  3089  0BDA  160A  118A  2000   	fcall	stringdir
  3090  0BDD  00C2               	movwf	?_scale+2
  3091  0BDE  0008               	return
  3092  0BDF                     l2111:	
  3093                           
  3094                           ;doprnt.c: 435: }
  3095                           ;doprnt.c: 436: if(scl>=110)
  3096  0BDF  0848               	movf	scale@scl,w
  3097  0BE0  3A80               	xorlw	128
  3098  0BE1  3E12               	addlw	-238
  3099  0BE2  1C03               	skipc
  3100  0BE3  2C9C               	goto	l2119
  3101                           
  3102                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3103  0BE4  3003               	movlw	3
  3104  0BE5  00C3               	movwf	??_scale
  3105  0BE6  0843               	movf	??_scale,w
  3106  0BE7  00A4               	movwf	___bmul@multiplicand
  3107  0BE8  300A               	movlw	10
  3108  0BE9  00F7               	movwf	___awdiv@divisor
  3109  0BEA  3000               	movlw	0
  3110  0BEB  00F8               	movwf	___awdiv@divisor+1
  3111  0BEC  0848               	movf	scale@scl,w
  3112  0BED  00F2               	movwf	___awmod@dividend
  3113  0BEE  01F3               	clrf	___awmod@dividend+1
  3114  0BEF  1BF2               	btfsc	___awmod@dividend,7
  3115  0BF0  03F3               	decf	___awmod@dividend+1,f
  3116  0BF1  3064               	movlw	100
  3117  0BF2  00F0               	movwf	___awmod@divisor
  3118  0BF3  3000               	movlw	0
  3119  0BF4  00F1               	movwf	___awmod@divisor+1
  3120  0BF5  160A  118A  2254  120A  158A  	fcall	___awmod
  3121  0BFA  0871               	movf	?___awmod+1,w
  3122  0BFB  00FA               	movwf	___awdiv@dividend+1
  3123  0BFC  0870               	movf	?___awmod,w
  3124  0BFD  00F9               	movwf	___awdiv@dividend
  3125  0BFE  160A  118A  229F  120A  158A  	fcall	___awdiv
  3126  0C03  0877               	movf	?___awdiv,w
  3127  0C04  3E09               	addlw	9
  3128  0C05  160A  118A  216F  120A  158A  	fcall	___bmul
  3129  0C0A  3E50               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3130  0C0B  0084               	movwf	4
  3131  0C0C  160A  118A  2000  120A  158A  	fcall	stringdir
  3132  0C11  1283               	bcf	3,5	;RP0=0, select bank0
  3133  0C12  1303               	bcf	3,6	;RP1=0, select bank0
  3134  0C13  00B0               	movwf	___ftmul@f1
  3135  0C14  160A  118A  2000  120A  158A  	fcall	stringdir
  3136  0C19  00B1               	movwf	___ftmul@f1+1
  3137  0C1A  160A  118A  2000  120A  158A  	fcall	stringdir
  3138  0C1F  00B2               	movwf	___ftmul@f1+2
  3139  0C20  3003               	movlw	3
  3140  0C21  00C4               	movwf	??_scale+1
  3141  0C22  0844               	movf	??_scale+1,w
  3142  0C23  00A4               	movwf	___bmul@multiplicand
  3143  0C24  3064               	movlw	100
  3144  0C25  00F7               	movwf	___awdiv@divisor
  3145  0C26  3000               	movlw	0
  3146  0C27  00F8               	movwf	___awdiv@divisor+1
  3147  0C28  0848               	movf	scale@scl,w
  3148  0C29  00F9               	movwf	___awdiv@dividend
  3149  0C2A  01FA               	clrf	___awdiv@dividend+1
  3150  0C2B  1BF9               	btfsc	___awdiv@dividend,7
  3151  0C2C  03FA               	decf	___awdiv@dividend+1,f
  3152  0C2D  160A  118A  229F  120A  158A  	fcall	___awdiv
  3153  0C32  0877               	movf	?___awdiv,w
  3154  0C33  3E12               	addlw	18
  3155  0C34  160A  118A  216F  120A  158A  	fcall	___bmul
  3156  0C39  3E50               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3157  0C3A  0084               	movwf	4
  3158  0C3B  160A  118A  2000  120A  158A  	fcall	stringdir
  3159  0C40  1283               	bcf	3,5	;RP0=0, select bank0
  3160  0C41  1303               	bcf	3,6	;RP1=0, select bank0
  3161  0C42  00B3               	movwf	___ftmul@f2
  3162  0C43  160A  118A  2000  120A  158A  	fcall	stringdir
  3163  0C48  00B4               	movwf	___ftmul@f2+1
  3164  0C49  160A  118A  2000  120A  158A  	fcall	stringdir
  3165  0C4E  00B5               	movwf	___ftmul@f2+2
  3166  0C4F  160A  118A  272D  120A  158A  	fcall	___ftmul
  3167  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  3168  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  3169  0C56  0830               	movf	?___ftmul,w
  3170  0C57  00C5               	movwf	_scale$719
  3171  0C58  0831               	movf	?___ftmul+1,w
  3172  0C59  00C6               	movwf	_scale$719+1
  3173  0C5A  0832               	movf	?___ftmul+2,w
  3174  0C5B  00C7               	movwf	_scale$719+2
  3175                           
  3176                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3177  0C5C  3003               	movlw	3
  3178  0C5D  00C3               	movwf	??_scale
  3179  0C5E  0843               	movf	??_scale,w
  3180  0C5F  00A4               	movwf	___bmul@multiplicand
  3181  0C60  0848               	movf	scale@scl,w
  3182  0C61  00F2               	movwf	___awmod@dividend
  3183  0C62  01F3               	clrf	___awmod@dividend+1
  3184  0C63  1BF2               	btfsc	___awmod@dividend,7
  3185  0C64  03F3               	decf	___awmod@dividend+1,f
  3186  0C65  300A               	movlw	10
  3187  0C66  00F0               	movwf	___awmod@divisor
  3188  0C67  3000               	movlw	0
  3189  0C68  00F1               	movwf	___awmod@divisor+1
  3190  0C69  160A  118A  2254  120A  158A  	fcall	___awmod
  3191  0C6E  0870               	movf	?___awmod,w
  3192  0C6F  160A  118A  216F  120A  158A  	fcall	___bmul
  3193  0C74  3E50               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3194  0C75  0084               	movwf	4
  3195  0C76  160A  118A  2000  120A  158A  	fcall	stringdir
  3196  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0C7D  00B0               	movwf	___ftmul@f1
  3199  0C7E  160A  118A  2000  120A  158A  	fcall	stringdir
  3200  0C83  00B1               	movwf	___ftmul@f1+1
  3201  0C84  160A  118A  2000  120A  158A  	fcall	stringdir
  3202  0C89  00B2               	movwf	___ftmul@f1+2
  3203  0C8A  0845               	movf	_scale$719,w
  3204  0C8B  00B3               	movwf	___ftmul@f2
  3205  0C8C  0846               	movf	_scale$719+1,w
  3206  0C8D  00B4               	movwf	___ftmul@f2+1
  3207  0C8E  0847               	movf	_scale$719+2,w
  3208  0C8F  00B5               	movwf	___ftmul@f2+2
  3209  0C90  160A  118A  272D   	fcall	___ftmul
  3210  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  3211  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  3212  0C95  0830               	movf	?___ftmul,w
  3213  0C96  00C0               	movwf	?_scale
  3214  0C97  0831               	movf	?___ftmul+1,w
  3215  0C98  00C1               	movwf	?_scale+1
  3216  0C99  0832               	movf	?___ftmul+2,w
  3217  0C9A  00C2               	movwf	?_scale+2
  3218  0C9B  0008               	return
  3219  0C9C                     l2119:	
  3220                           
  3221                           ;doprnt.c: 438: else if(scl > 10)
  3222  0C9C  0848               	movf	scale@scl,w
  3223  0C9D  3A80               	xorlw	128
  3224  0C9E  3E75               	addlw	-139
  3225  0C9F  1C03               	skipc
  3226  0CA0  2D0A               	goto	l2125
  3227                           
  3228                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3229  0CA1  3003               	movlw	3
  3230  0CA2  00C3               	movwf	??_scale
  3231  0CA3  0843               	movf	??_scale,w
  3232  0CA4  00A4               	movwf	___bmul@multiplicand
  3233  0CA5  0848               	movf	scale@scl,w
  3234  0CA6  00F2               	movwf	___awmod@dividend
  3235  0CA7  01F3               	clrf	___awmod@dividend+1
  3236  0CA8  1BF2               	btfsc	___awmod@dividend,7
  3237  0CA9  03F3               	decf	___awmod@dividend+1,f
  3238  0CAA  300A               	movlw	10
  3239  0CAB  00F0               	movwf	___awmod@divisor
  3240  0CAC  3000               	movlw	0
  3241  0CAD  00F1               	movwf	___awmod@divisor+1
  3242  0CAE  160A  118A  2254  120A  158A  	fcall	___awmod
  3243  0CB3  0870               	movf	?___awmod,w
  3244  0CB4  160A  118A  216F  120A  158A  	fcall	___bmul
  3245  0CB9  3E50               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3246  0CBA  0084               	movwf	4
  3247  0CBB  160A  118A  2000  120A  158A  	fcall	stringdir
  3248  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3249  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3250  0CC2  00B0               	movwf	___ftmul@f1
  3251  0CC3  160A  118A  2000  120A  158A  	fcall	stringdir
  3252  0CC8  00B1               	movwf	___ftmul@f1+1
  3253  0CC9  160A  118A  2000  120A  158A  	fcall	stringdir
  3254  0CCE  00B2               	movwf	___ftmul@f1+2
  3255  0CCF  3003               	movlw	3
  3256  0CD0  00C4               	movwf	??_scale+1
  3257  0CD1  0844               	movf	??_scale+1,w
  3258  0CD2  00A4               	movwf	___bmul@multiplicand
  3259  0CD3  300A               	movlw	10
  3260  0CD4  00F7               	movwf	___awdiv@divisor
  3261  0CD5  3000               	movlw	0
  3262  0CD6  00F8               	movwf	___awdiv@divisor+1
  3263  0CD7  0848               	movf	scale@scl,w
  3264  0CD8  00F9               	movwf	___awdiv@dividend
  3265  0CD9  01FA               	clrf	___awdiv@dividend+1
  3266  0CDA  1BF9               	btfsc	___awdiv@dividend,7
  3267  0CDB  03FA               	decf	___awdiv@dividend+1,f
  3268  0CDC  160A  118A  229F  120A  158A  	fcall	___awdiv
  3269  0CE1  0877               	movf	?___awdiv,w
  3270  0CE2  3E09               	addlw	9
  3271  0CE3  160A  118A  216F  120A  158A  	fcall	___bmul
  3272  0CE8  3E50               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3273  0CE9  0084               	movwf	4
  3274  0CEA  160A  118A  2000  120A  158A  	fcall	stringdir
  3275  0CEF  1283               	bcf	3,5	;RP0=0, select bank0
  3276  0CF0  1303               	bcf	3,6	;RP1=0, select bank0
  3277  0CF1  00B3               	movwf	___ftmul@f2
  3278  0CF2  160A  118A  2000  120A  158A  	fcall	stringdir
  3279  0CF7  00B4               	movwf	___ftmul@f2+1
  3280  0CF8  160A  118A  2000  120A  158A  	fcall	stringdir
  3281  0CFD  00B5               	movwf	___ftmul@f2+2
  3282  0CFE  160A  118A  272D   	fcall	___ftmul
  3283  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  3284  0D02  1303               	bcf	3,6	;RP1=0, select bank0
  3285  0D03  0830               	movf	?___ftmul,w
  3286  0D04  00C0               	movwf	?_scale
  3287  0D05  0831               	movf	?___ftmul+1,w
  3288  0D06  00C1               	movwf	?_scale+1
  3289  0D07  0832               	movf	?___ftmul+2,w
  3290  0D08  00C2               	movwf	?_scale+2
  3291  0D09  0008               	return
  3292  0D0A                     l2125:	
  3293                           
  3294                           ;doprnt.c: 440: return _powers_[scl];
  3295  0D0A  3003               	movlw	3
  3296  0D0B  00C3               	movwf	??_scale
  3297  0D0C  0843               	movf	??_scale,w
  3298  0D0D  00A4               	movwf	___bmul@multiplicand
  3299  0D0E  0848               	movf	scale@scl,w
  3300  0D0F  160A  118A  216F  120A  158A  	fcall	___bmul
  3301  0D14  3E50               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3302  0D15  0084               	movwf	4
  3303  0D16  160A  118A  2000  120A  158A  	fcall	stringdir
  3304  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  3306  0D1D  00C0               	movwf	?_scale
  3307  0D1E  160A  118A  2000  120A  158A  	fcall	stringdir
  3308  0D23  00C1               	movwf	?_scale+1
  3309  0D24  160A  118A  2000   	fcall	stringdir
  3310  0D27  00C2               	movwf	?_scale+2
  3311  0D28  0008               	return
  3312  0D29                     __end_of_scale:	
  3313                           
  3314                           	psect	text4
  3315  1138                     __ptext4:	
  3316 ;; *************** function _putch *****************
  3317 ;; Defined at:
  3318 ;;		line 37 in file "uart_serial.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;  byte            1    wreg     unsigned char 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  byte            1    0[COMMON] unsigned char 
  3323 ;; Return value:  Size  Location     Type
  3324 ;;		None               void
  3325 ;; Registers used:
  3326 ;;		wreg
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3332 ;;      Params:         0       0       0       0       0
  3333 ;;      Locals:         1       0       0       0       0
  3334 ;;      Temps:          0       0       0       0       0
  3335 ;;      Totals:         1       0       0       0       0
  3336 ;;Total ram usage:        1 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; This function calls:
  3339 ;;		Nothing
  3340 ;; This function is called by:
  3341 ;;		_printf
  3342 ;;		_getche
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           
  3347                           ;psect for function _putch
  3348  1138                     _putch:	
  3349                           
  3350                           ;incstack = 0
  3351                           ; Regs used in _putch: [wreg]
  3352                           ;putch@byte stored from wreg
  3353  1138  00F0               	movwf	putch@byte
  3354  1139                     l42:	
  3355                           ;uart_serial.c: 39: while(!TXIF){
  3356                           
  3357  1139  1283               	bcf	3,5	;RP0=0, select bank0
  3358  113A  1303               	bcf	3,6	;RP1=0, select bank0
  3359  113B  1E0C               	btfss	12,4	;volatile
  3360  113C  2939               	goto	l42
  3361                           
  3362                           ;uart_serial.c: 40: }
  3363                           ;uart_serial.c: 41: TXREG = byte;
  3364  113D  0870               	movf	putch@byte,w
  3365  113E  0099               	movwf	25	;volatile
  3366  113F  0008               	return
  3367  1140                     __end_of_putch:	
  3368                           
  3369                           	psect	text5
  3370  1161                     __ptext5:	
  3371 ;; *************** function _isdigit *****************
  3372 ;; Defined at:
  3373 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  c               1    wreg     unsigned char 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;  c               1    1[COMMON] unsigned char 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;		None               void
  3380 ;; Registers used:
  3381 ;;		wreg, status,2, status,0
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3387 ;;      Params:         0       0       0       0       0
  3388 ;;      Locals:         2       0       0       0       0
  3389 ;;      Temps:          0       0       0       0       0
  3390 ;;      Totals:         2       0       0       0       0
  3391 ;;Total ram usage:        2 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_printf
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           
  3401                           ;psect for function _isdigit
  3402  1161                     _isdigit:	
  3403                           
  3404                           ;incstack = 0
  3405                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3406                           ;isdigit@c stored from wreg
  3407  1161  00F1               	movwf	isdigit@c
  3408  1162  01F0               	clrf	_isdigit$494
  3409  1163  303A               	movlw	58
  3410  1164  0271               	subwf	isdigit@c,w
  3411  1165  1803               	skipnc
  3412  1166  296D               	goto	l2137
  3413  1167  3030               	movlw	48
  3414  1168  0271               	subwf	isdigit@c,w
  3415  1169  1C03               	skipc
  3416  116A  296D               	goto	l2137
  3417  116B  01F0               	clrf	_isdigit$494
  3418  116C  0AF0               	incf	_isdigit$494,f
  3419  116D                     l2137:	
  3420  116D  0C70               	rrf	_isdigit$494,w
  3421  116E  0008               	return
  3422  116F                     __end_of_isdigit:	
  3423                           
  3424                           	psect	text6
  3425  00CA                     __ptext6:	
  3426 ;; *************** function _fround *****************
  3427 ;; Defined at:
  3428 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;  prec            1    wreg     unsigned char 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  prec            1   47[BANK0 ] unsigned char 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  3   32[BANK0 ] unsigned char 
  3435 ;; Registers used:
  3436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3442 ;;      Params:         0       3       0       0       0
  3443 ;;      Locals:         0       7       0       0       0
  3444 ;;      Temps:          0       6       0       0       0
  3445 ;;      Totals:         0      16       0       0       0
  3446 ;;Total ram usage:       16 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:    2
  3449 ;; This function calls:
  3450 ;;		___awdiv
  3451 ;;		___awmod
  3452 ;;		___bmul
  3453 ;;		___ftmul
  3454 ;; This function is called by:
  3455 ;;		_printf
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           
  3460                           ;psect for function _fround
  3461  00CA                     _fround:	
  3462                           
  3463                           ;incstack = 0
  3464                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3465                           ;fround@prec stored from wreg
  3466  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  3467  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  3468  00CC  00CF               	movwf	fround@prec
  3469                           
  3470                           ;doprnt.c: 413: if(prec>=110)
  3471  00CD  306E               	movlw	110
  3472  00CE  024F               	subwf	fround@prec,w
  3473  00CF  1C03               	skipc
  3474  00D0  29A8               	goto	l2077
  3475                           
  3476                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3477  00D1  3003               	movlw	3
  3478  00D2  00C3               	movwf	??_fround
  3479  00D3  0843               	movf	??_fround,w
  3480  00D4  00A4               	movwf	___bmul@multiplicand
  3481  00D5  300A               	movlw	10
  3482  00D6  00F7               	movwf	___awdiv@divisor
  3483  00D7  3000               	movlw	0
  3484  00D8  00F8               	movwf	___awdiv@divisor+1
  3485  00D9  084F               	movf	fround@prec,w
  3486  00DA  00C4               	movwf	??_fround+1
  3487  00DB  01C5               	clrf	??_fround+2
  3488  00DC  0844               	movf	??_fround+1,w
  3489  00DD  00F2               	movwf	___awmod@dividend
  3490  00DE  0845               	movf	??_fround+2,w
  3491  00DF  00F3               	movwf	___awmod@dividend+1
  3492  00E0  3064               	movlw	100
  3493  00E1  00F0               	movwf	___awmod@divisor
  3494  00E2  3000               	movlw	0
  3495  00E3  00F1               	movwf	___awmod@divisor+1
  3496  00E4  160A  118A  2254  120A  118A  	fcall	___awmod
  3497  00E9  0871               	movf	?___awmod+1,w
  3498  00EA  00FA               	movwf	___awdiv@dividend+1
  3499  00EB  0870               	movf	?___awmod,w
  3500  00EC  00F9               	movwf	___awdiv@dividend
  3501  00ED  160A  118A  229F  120A  118A  	fcall	___awdiv
  3502  00F2  0877               	movf	?___awdiv,w
  3503  00F3  3E09               	addlw	9
  3504  00F4  160A  118A  216F  120A  118A  	fcall	___bmul
  3505  00F9  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3506  00FA  0084               	movwf	4
  3507  00FB  160A  118A  2000  120A  118A  	fcall	stringdir
  3508  0100  1283               	bcf	3,5	;RP0=0, select bank0
  3509  0101  1303               	bcf	3,6	;RP1=0, select bank0
  3510  0102  00B0               	movwf	___ftmul@f1
  3511  0103  160A  118A  2000  120A  118A  	fcall	stringdir
  3512  0108  00B1               	movwf	___ftmul@f1+1
  3513  0109  160A  118A  2000  120A  118A  	fcall	stringdir
  3514  010E  00B2               	movwf	___ftmul@f1+2
  3515  010F  3003               	movlw	3
  3516  0110  00C6               	movwf	??_fround+3
  3517  0111  0846               	movf	??_fround+3,w
  3518  0112  00A4               	movwf	___bmul@multiplicand
  3519  0113  3064               	movlw	100
  3520  0114  00F7               	movwf	___awdiv@divisor
  3521  0115  3000               	movlw	0
  3522  0116  00F8               	movwf	___awdiv@divisor+1
  3523  0117  084F               	movf	fround@prec,w
  3524  0118  00C7               	movwf	??_fround+4
  3525  0119  01C8               	clrf	??_fround+5
  3526  011A  0847               	movf	??_fround+4,w
  3527  011B  00F9               	movwf	___awdiv@dividend
  3528  011C  0848               	movf	??_fround+5,w
  3529  011D  00FA               	movwf	___awdiv@dividend+1
  3530  011E  160A  118A  229F  120A  118A  	fcall	___awdiv
  3531  0123  0877               	movf	?___awdiv,w
  3532  0124  3E12               	addlw	18
  3533  0125  160A  118A  216F  120A  118A  	fcall	___bmul
  3534  012A  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3535  012B  0084               	movwf	4
  3536  012C  160A  118A  2000  120A  118A  	fcall	stringdir
  3537  0131  1283               	bcf	3,5	;RP0=0, select bank0
  3538  0132  1303               	bcf	3,6	;RP1=0, select bank0
  3539  0133  00B3               	movwf	___ftmul@f2
  3540  0134  160A  118A  2000  120A  118A  	fcall	stringdir
  3541  0139  00B4               	movwf	___ftmul@f2+1
  3542  013A  160A  118A  2000  120A  118A  	fcall	stringdir
  3543  013F  00B5               	movwf	___ftmul@f2+2
  3544  0140  160A  118A  272D  120A  118A  	fcall	___ftmul
  3545  0145  1283               	bcf	3,5	;RP0=0, select bank0
  3546  0146  1303               	bcf	3,6	;RP1=0, select bank0
  3547  0147  0830               	movf	?___ftmul,w
  3548  0148  00CC               	movwf	_fround$717
  3549  0149  0831               	movf	?___ftmul+1,w
  3550  014A  00CD               	movwf	_fround$717+1
  3551  014B  0832               	movf	?___ftmul+2,w
  3552  014C  00CE               	movwf	_fround$717+2
  3553                           
  3554                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3555  014D  3003               	movlw	3
  3556  014E  00C3               	movwf	??_fround
  3557  014F  0843               	movf	??_fround,w
  3558  0150  00A4               	movwf	___bmul@multiplicand
  3559  0151  084F               	movf	fround@prec,w
  3560  0152  00C4               	movwf	??_fround+1
  3561  0153  01C5               	clrf	??_fround+2
  3562  0154  0844               	movf	??_fround+1,w
  3563  0155  00F2               	movwf	___awmod@dividend
  3564  0156  0845               	movf	??_fround+2,w
  3565  0157  00F3               	movwf	___awmod@dividend+1
  3566  0158  300A               	movlw	10
  3567  0159  00F0               	movwf	___awmod@divisor
  3568  015A  3000               	movlw	0
  3569  015B  00F1               	movwf	___awmod@divisor+1
  3570  015C  160A  118A  2254  120A  118A  	fcall	___awmod
  3571  0161  0870               	movf	?___awmod,w
  3572  0162  160A  118A  216F  120A  118A  	fcall	___bmul
  3573  0167  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3574  0168  0084               	movwf	4
  3575  0169  160A  118A  2000  120A  118A  	fcall	stringdir
  3576  016E  1283               	bcf	3,5	;RP0=0, select bank0
  3577  016F  1303               	bcf	3,6	;RP1=0, select bank0
  3578  0170  00B0               	movwf	___ftmul@f1
  3579  0171  160A  118A  2000  120A  118A  	fcall	stringdir
  3580  0176  00B1               	movwf	___ftmul@f1+1
  3581  0177  160A  118A  2000  120A  118A  	fcall	stringdir
  3582  017C  00B2               	movwf	___ftmul@f1+2
  3583  017D  084C               	movf	_fround$717,w
  3584  017E  00B3               	movwf	___ftmul@f2
  3585  017F  084D               	movf	_fround$717+1,w
  3586  0180  00B4               	movwf	___ftmul@f2+1
  3587  0181  084E               	movf	_fround$717+2,w
  3588  0182  00B5               	movwf	___ftmul@f2+2
  3589  0183  160A  118A  272D  120A  118A  	fcall	___ftmul
  3590  0188  1283               	bcf	3,5	;RP0=0, select bank0
  3591  0189  1303               	bcf	3,6	;RP1=0, select bank0
  3592  018A  0830               	movf	?___ftmul,w
  3593  018B  00C9               	movwf	_fround$718
  3594  018C  0831               	movf	?___ftmul+1,w
  3595  018D  00CA               	movwf	_fround$718+1
  3596  018E  0832               	movf	?___ftmul+2,w
  3597  018F  00CB               	movwf	_fround$718+2
  3598                           
  3599                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3600  0190  3000               	movlw	0
  3601  0191  00B0               	movwf	___ftmul@f1
  3602  0192  3000               	movlw	0
  3603  0193  00B1               	movwf	___ftmul@f1+1
  3604  0194  303F               	movlw	63
  3605  0195  00B2               	movwf	___ftmul@f1+2
  3606  0196  0849               	movf	_fround$718,w
  3607  0197  00B3               	movwf	___ftmul@f2
  3608  0198  084A               	movf	_fround$718+1,w
  3609  0199  00B4               	movwf	___ftmul@f2+1
  3610  019A  084B               	movf	_fround$718+2,w
  3611  019B  00B5               	movwf	___ftmul@f2+2
  3612  019C  160A  118A  272D   	fcall	___ftmul
  3613  019F  1283               	bcf	3,5	;RP0=0, select bank0
  3614  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  3615  01A1  0830               	movf	?___ftmul,w
  3616  01A2  00C0               	movwf	?_fround
  3617  01A3  0831               	movf	?___ftmul+1,w
  3618  01A4  00C1               	movwf	?_fround+1
  3619  01A5  0832               	movf	?___ftmul+2,w
  3620  01A6  00C2               	movwf	?_fround+2
  3621  01A7  0008               	return
  3622  01A8                     l2077:	
  3623                           
  3624                           ;doprnt.c: 415: else if(prec > 10)
  3625  01A8  300B               	movlw	11
  3626  01A9  024F               	subwf	fround@prec,w
  3627  01AA  1C03               	skipc
  3628  01AB  2A32               	goto	l2085
  3629                           
  3630                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3631  01AC  3003               	movlw	3
  3632  01AD  00C3               	movwf	??_fround
  3633  01AE  0843               	movf	??_fround,w
  3634  01AF  00A4               	movwf	___bmul@multiplicand
  3635  01B0  084F               	movf	fround@prec,w
  3636  01B1  00C4               	movwf	??_fround+1
  3637  01B2  01C5               	clrf	??_fround+2
  3638  01B3  0844               	movf	??_fround+1,w
  3639  01B4  00F2               	movwf	___awmod@dividend
  3640  01B5  0845               	movf	??_fround+2,w
  3641  01B6  00F3               	movwf	___awmod@dividend+1
  3642  01B7  300A               	movlw	10
  3643  01B8  00F0               	movwf	___awmod@divisor
  3644  01B9  3000               	movlw	0
  3645  01BA  00F1               	movwf	___awmod@divisor+1
  3646  01BB  160A  118A  2254  120A  118A  	fcall	___awmod
  3647  01C0  0870               	movf	?___awmod,w
  3648  01C1  160A  118A  216F  120A  118A  	fcall	___bmul
  3649  01C6  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3650  01C7  0084               	movwf	4
  3651  01C8  160A  118A  2000  120A  118A  	fcall	stringdir
  3652  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  3653  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  3654  01CF  00B0               	movwf	___ftmul@f1
  3655  01D0  160A  118A  2000  120A  118A  	fcall	stringdir
  3656  01D5  00B1               	movwf	___ftmul@f1+1
  3657  01D6  160A  118A  2000  120A  118A  	fcall	stringdir
  3658  01DB  00B2               	movwf	___ftmul@f1+2
  3659  01DC  3003               	movlw	3
  3660  01DD  00C6               	movwf	??_fround+3
  3661  01DE  0846               	movf	??_fround+3,w
  3662  01DF  00A4               	movwf	___bmul@multiplicand
  3663  01E0  300A               	movlw	10
  3664  01E1  00F7               	movwf	___awdiv@divisor
  3665  01E2  3000               	movlw	0
  3666  01E3  00F8               	movwf	___awdiv@divisor+1
  3667  01E4  084F               	movf	fround@prec,w
  3668  01E5  00C7               	movwf	??_fround+4
  3669  01E6  01C8               	clrf	??_fround+5
  3670  01E7  0847               	movf	??_fround+4,w
  3671  01E8  00F9               	movwf	___awdiv@dividend
  3672  01E9  0848               	movf	??_fround+5,w
  3673  01EA  00FA               	movwf	___awdiv@dividend+1
  3674  01EB  160A  118A  229F  120A  118A  	fcall	___awdiv
  3675  01F0  0877               	movf	?___awdiv,w
  3676  01F1  3E09               	addlw	9
  3677  01F2  160A  118A  216F  120A  118A  	fcall	___bmul
  3678  01F7  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3679  01F8  0084               	movwf	4
  3680  01F9  160A  118A  2000  120A  118A  	fcall	stringdir
  3681  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  3682  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  3683  0200  00B3               	movwf	___ftmul@f2
  3684  0201  160A  118A  2000  120A  118A  	fcall	stringdir
  3685  0206  00B4               	movwf	___ftmul@f2+1
  3686  0207  160A  118A  2000  120A  118A  	fcall	stringdir
  3687  020C  00B5               	movwf	___ftmul@f2+2
  3688  020D  160A  118A  272D  120A  118A  	fcall	___ftmul
  3689  0212  1283               	bcf	3,5	;RP0=0, select bank0
  3690  0213  1303               	bcf	3,6	;RP1=0, select bank0
  3691  0214  0830               	movf	?___ftmul,w
  3692  0215  00CC               	movwf	_fround$717
  3693  0216  0831               	movf	?___ftmul+1,w
  3694  0217  00CD               	movwf	_fround$717+1
  3695  0218  0832               	movf	?___ftmul+2,w
  3696  0219  00CE               	movwf	_fround$717+2
  3697                           
  3698                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3699  021A  3000               	movlw	0
  3700  021B  00B0               	movwf	___ftmul@f1
  3701  021C  3000               	movlw	0
  3702  021D  00B1               	movwf	___ftmul@f1+1
  3703  021E  303F               	movlw	63
  3704  021F  00B2               	movwf	___ftmul@f1+2
  3705  0220  084C               	movf	_fround$717,w
  3706  0221  00B3               	movwf	___ftmul@f2
  3707  0222  084D               	movf	_fround$717+1,w
  3708  0223  00B4               	movwf	___ftmul@f2+1
  3709  0224  084E               	movf	_fround$717+2,w
  3710  0225  00B5               	movwf	___ftmul@f2+2
  3711  0226  160A  118A  272D   	fcall	___ftmul
  3712  0229  1283               	bcf	3,5	;RP0=0, select bank0
  3713  022A  1303               	bcf	3,6	;RP1=0, select bank0
  3714  022B  0830               	movf	?___ftmul,w
  3715  022C  00C0               	movwf	?_fround
  3716  022D  0831               	movf	?___ftmul+1,w
  3717  022E  00C1               	movwf	?_fround+1
  3718  022F  0832               	movf	?___ftmul+2,w
  3719  0230  00C2               	movwf	?_fround+2
  3720  0231  0008               	return
  3721  0232                     l2085:	
  3722                           
  3723                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3724  0232  3000               	movlw	0
  3725  0233  00B0               	movwf	___ftmul@f1
  3726  0234  3000               	movlw	0
  3727  0235  00B1               	movwf	___ftmul@f1+1
  3728  0236  303F               	movlw	63
  3729  0237  00B2               	movwf	___ftmul@f1+2
  3730  0238  3003               	movlw	3
  3731  0239  00C3               	movwf	??_fround
  3732  023A  0843               	movf	??_fround,w
  3733  023B  00A4               	movwf	___bmul@multiplicand
  3734  023C  084F               	movf	fround@prec,w
  3735  023D  160A  118A  216F  120A  118A  	fcall	___bmul
  3736  0242  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3737  0243  0084               	movwf	4
  3738  0244  160A  118A  2000  120A  118A  	fcall	stringdir
  3739  0249  1283               	bcf	3,5	;RP0=0, select bank0
  3740  024A  1303               	bcf	3,6	;RP1=0, select bank0
  3741  024B  00B3               	movwf	___ftmul@f2
  3742  024C  160A  118A  2000  120A  118A  	fcall	stringdir
  3743  0251  00B4               	movwf	___ftmul@f2+1
  3744  0252  160A  118A  2000  120A  118A  	fcall	stringdir
  3745  0257  00B5               	movwf	___ftmul@f2+2
  3746  0258  160A  118A  272D   	fcall	___ftmul
  3747  025B  1283               	bcf	3,5	;RP0=0, select bank0
  3748  025C  1303               	bcf	3,6	;RP1=0, select bank0
  3749  025D  0830               	movf	?___ftmul,w
  3750  025E  00C0               	movwf	?_fround
  3751  025F  0831               	movf	?___ftmul+1,w
  3752  0260  00C1               	movwf	?_fround+1
  3753  0261  0832               	movf	?___ftmul+2,w
  3754  0262  00C2               	movwf	?_fround+2
  3755  0263  0008               	return
  3756  0264                     __end_of_fround:	
  3757                           
  3758                           	psect	text7
  3759  116F                     __ptext7:	
  3760 ;; *************** function ___bmul *****************
  3761 ;; Defined at:
  3762 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul8.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;  multiplier      1    wreg     unsigned char 
  3765 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;  multiplier      1    6[BANK0 ] unsigned char 
  3768 ;;  product         1    5[BANK0 ] unsigned char 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  1    wreg      unsigned char 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3778 ;;      Params:         0       1       0       0       0
  3779 ;;      Locals:         0       2       0       0       0
  3780 ;;      Temps:          1       0       0       0       0
  3781 ;;      Totals:         1       3       0       0       0
  3782 ;;Total ram usage:        4 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		_fround
  3788 ;;		_scale
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           
  3793                           ;psect for function ___bmul
  3794  116F                     ___bmul:	
  3795                           
  3796                           ;incstack = 0
  3797                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3798                           ;___bmul@multiplier stored from wreg
  3799  116F  1283               	bcf	3,5	;RP0=0, select bank0
  3800  1170  1303               	bcf	3,6	;RP1=0, select bank0
  3801  1171  00A6               	movwf	___bmul@multiplier
  3802  1172  01A5               	clrf	___bmul@product
  3803  1173                     l1867:	
  3804  1173  1C26               	btfss	___bmul@multiplier,0
  3805  1174  2979               	goto	l1871
  3806  1175  0824               	movf	___bmul@multiplicand,w
  3807  1176  00FC               	movwf	??___bmul
  3808  1177  087C               	movf	??___bmul,w
  3809  1178  07A5               	addwf	___bmul@product,f
  3810  1179                     l1871:	
  3811  1179  1003               	clrc
  3812  117A  0DA4               	rlf	___bmul@multiplicand,f
  3813  117B  1003               	clrc
  3814  117C  0CA6               	rrf	___bmul@multiplier,f
  3815  117D  0826               	movf	___bmul@multiplier,w
  3816  117E  1D03               	btfss	3,2
  3817  117F  2973               	goto	l1867
  3818  1180  0825               	movf	___bmul@product,w
  3819  1181  0008               	return
  3820  1182                     __end_of___bmul:	
  3821                           
  3822                           	psect	text8
  3823  1254                     __ptext8:	
  3824 ;; *************** function ___awmod *****************
  3825 ;; Defined at:
  3826 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  divisor         2    0[COMMON] int 
  3829 ;;  dividend        2    2[COMMON] int 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  sign            1    6[COMMON] unsigned char 
  3832 ;;  counter         1    5[COMMON] unsigned char 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  2    0[COMMON] int 
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, status,0
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3842 ;;      Params:         4       0       0       0       0
  3843 ;;      Locals:         2       0       0       0       0
  3844 ;;      Temps:          1       0       0       0       0
  3845 ;;      Totals:         7       0       0       0       0
  3846 ;;Total ram usage:        7 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_fround
  3852 ;;		_scale
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           
  3857                           ;psect for function ___awmod
  3858  1254                     ___awmod:	
  3859                           
  3860                           ;incstack = 0
  3861                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3862  1254  01F6               	clrf	___awmod@sign
  3863  1255  1FF3               	btfss	___awmod@dividend+1,7
  3864  1256  2A5E               	goto	l1931
  3865  1257  09F2               	comf	___awmod@dividend,f
  3866  1258  09F3               	comf	___awmod@dividend+1,f
  3867  1259  0AF2               	incf	___awmod@dividend,f
  3868  125A  1903               	skipnz
  3869  125B  0AF3               	incf	___awmod@dividend+1,f
  3870  125C  01F6               	clrf	___awmod@sign
  3871  125D  0AF6               	incf	___awmod@sign,f
  3872  125E                     l1931:	
  3873  125E  1FF1               	btfss	___awmod@divisor+1,7
  3874  125F  2A65               	goto	l1935
  3875  1260  09F0               	comf	___awmod@divisor,f
  3876  1261  09F1               	comf	___awmod@divisor+1,f
  3877  1262  0AF0               	incf	___awmod@divisor,f
  3878  1263  1903               	skipnz
  3879  1264  0AF1               	incf	___awmod@divisor+1,f
  3880  1265                     l1935:	
  3881  1265  0870               	movf	___awmod@divisor,w
  3882  1266  0471               	iorwf	___awmod@divisor+1,w
  3883  1267  1903               	btfsc	3,2
  3884  1268  2A92               	goto	l1953
  3885  1269  01F5               	clrf	___awmod@counter
  3886  126A  0AF5               	incf	___awmod@counter,f
  3887  126B                     l1943:	
  3888  126B  1BF1               	btfsc	___awmod@divisor+1,7
  3889  126C  2A79               	goto	l1945
  3890  126D  3001               	movlw	1
  3891  126E                     u2585:	
  3892  126E  1003               	clrc
  3893  126F  0DF0               	rlf	___awmod@divisor,f
  3894  1270  0DF1               	rlf	___awmod@divisor+1,f
  3895  1271  3EFF               	addlw	-1
  3896  1272  1D03               	skipz
  3897  1273  2A6E               	goto	u2585
  3898  1274  3001               	movlw	1
  3899  1275  00F4               	movwf	??___awmod
  3900  1276  0874               	movf	??___awmod,w
  3901  1277  07F5               	addwf	___awmod@counter,f
  3902  1278  2A6B               	goto	l1943
  3903  1279                     l1945:	
  3904  1279  0871               	movf	___awmod@divisor+1,w
  3905  127A  0273               	subwf	___awmod@dividend+1,w
  3906  127B  1D03               	skipz
  3907  127C  2A7F               	goto	u2605
  3908  127D  0870               	movf	___awmod@divisor,w
  3909  127E  0272               	subwf	___awmod@dividend,w
  3910  127F                     u2605:	
  3911  127F  1C03               	skipc
  3912  1280  2A87               	goto	l1949
  3913  1281  0870               	movf	___awmod@divisor,w
  3914  1282  02F2               	subwf	___awmod@dividend,f
  3915  1283  0871               	movf	___awmod@divisor+1,w
  3916  1284  1C03               	skipc
  3917  1285  03F3               	decf	___awmod@dividend+1,f
  3918  1286  02F3               	subwf	___awmod@dividend+1,f
  3919  1287                     l1949:	
  3920  1287  3001               	movlw	1
  3921  1288                     u2615:	
  3922  1288  1003               	clrc
  3923  1289  0CF1               	rrf	___awmod@divisor+1,f
  3924  128A  0CF0               	rrf	___awmod@divisor,f
  3925  128B  3EFF               	addlw	-1
  3926  128C  1D03               	skipz
  3927  128D  2A88               	goto	u2615
  3928  128E  3001               	movlw	1
  3929  128F  02F5               	subwf	___awmod@counter,f
  3930  1290  1D03               	btfss	3,2
  3931  1291  2A79               	goto	l1945
  3932  1292                     l1953:	
  3933  1292  0876               	movf	___awmod@sign,w
  3934  1293  1903               	btfsc	3,2
  3935  1294  2A9A               	goto	l1957
  3936  1295  09F2               	comf	___awmod@dividend,f
  3937  1296  09F3               	comf	___awmod@dividend+1,f
  3938  1297  0AF2               	incf	___awmod@dividend,f
  3939  1298  1903               	skipnz
  3940  1299  0AF3               	incf	___awmod@dividend+1,f
  3941  129A                     l1957:	
  3942  129A  0873               	movf	___awmod@dividend+1,w
  3943  129B  00F1               	movwf	?___awmod+1
  3944  129C  0872               	movf	___awmod@dividend,w
  3945  129D  00F0               	movwf	?___awmod
  3946  129E  0008               	return
  3947  129F                     __end_of___awmod:	
  3948                           
  3949                           	psect	text9
  3950  129F                     __ptext9:	
  3951 ;; *************** function ___awdiv *****************
  3952 ;; Defined at:
  3953 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  divisor         2    7[COMMON] int 
  3956 ;;  dividend        2    9[COMMON] int 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  quotient        2    2[BANK0 ] int 
  3959 ;;  sign            1    1[BANK0 ] unsigned char 
  3960 ;;  counter         1    0[BANK0 ] unsigned char 
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  2    7[COMMON] int 
  3963 ;; Registers used:
  3964 ;;		wreg, status,2, status,0
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3970 ;;      Params:         4       0       0       0       0
  3971 ;;      Locals:         0       4       0       0       0
  3972 ;;      Temps:          1       0       0       0       0
  3973 ;;      Totals:         5       4       0       0       0
  3974 ;;Total ram usage:        9 bytes
  3975 ;; Hardware stack levels used:    1
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_fround
  3980 ;;		_scale
  3981 ;;		_printf
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           
  3986                           ;psect for function ___awdiv
  3987  129F                     ___awdiv:	
  3988                           
  3989                           ;incstack = 0
  3990                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3991  129F  1283               	bcf	3,5	;RP0=0, select bank0
  3992  12A0  1303               	bcf	3,6	;RP1=0, select bank0
  3993  12A1  01A1               	clrf	___awdiv@sign
  3994  12A2  1FF8               	btfss	___awdiv@divisor+1,7
  3995  12A3  2AAB               	goto	l1887
  3996  12A4  09F7               	comf	___awdiv@divisor,f
  3997  12A5  09F8               	comf	___awdiv@divisor+1,f
  3998  12A6  0AF7               	incf	___awdiv@divisor,f
  3999  12A7  1903               	skipnz
  4000  12A8  0AF8               	incf	___awdiv@divisor+1,f
  4001  12A9  01A1               	clrf	___awdiv@sign
  4002  12AA  0AA1               	incf	___awdiv@sign,f
  4003  12AB                     l1887:	
  4004  12AB  1FFA               	btfss	___awdiv@dividend+1,7
  4005  12AC  2AB6               	goto	l1893
  4006  12AD  09F9               	comf	___awdiv@dividend,f
  4007  12AE  09FA               	comf	___awdiv@dividend+1,f
  4008  12AF  0AF9               	incf	___awdiv@dividend,f
  4009  12B0  1903               	skipnz
  4010  12B1  0AFA               	incf	___awdiv@dividend+1,f
  4011  12B2  3001               	movlw	1
  4012  12B3  00FB               	movwf	??___awdiv
  4013  12B4  087B               	movf	??___awdiv,w
  4014  12B5  06A1               	xorwf	___awdiv@sign,f
  4015  12B6                     l1893:	
  4016  12B6  01A2               	clrf	___awdiv@quotient
  4017  12B7  01A3               	clrf	___awdiv@quotient+1
  4018  12B8  0877               	movf	___awdiv@divisor,w
  4019  12B9  0478               	iorwf	___awdiv@divisor+1,w
  4020  12BA  1903               	btfsc	3,2
  4021  12BB  2AED               	goto	l1915
  4022  12BC  01A0               	clrf	___awdiv@counter
  4023  12BD  0AA0               	incf	___awdiv@counter,f
  4024  12BE                     l1903:	
  4025  12BE  1BF8               	btfsc	___awdiv@divisor+1,7
  4026  12BF  2ACC               	goto	l1905
  4027  12C0  3001               	movlw	1
  4028  12C1                     u2485:	
  4029  12C1  1003               	clrc
  4030  12C2  0DF7               	rlf	___awdiv@divisor,f
  4031  12C3  0DF8               	rlf	___awdiv@divisor+1,f
  4032  12C4  3EFF               	addlw	-1
  4033  12C5  1D03               	skipz
  4034  12C6  2AC1               	goto	u2485
  4035  12C7  3001               	movlw	1
  4036  12C8  00FB               	movwf	??___awdiv
  4037  12C9  087B               	movf	??___awdiv,w
  4038  12CA  07A0               	addwf	___awdiv@counter,f
  4039  12CB  2ABE               	goto	l1903
  4040  12CC                     l1905:	
  4041  12CC  3001               	movlw	1
  4042  12CD                     u2505:	
  4043  12CD  1003               	clrc
  4044  12CE  0DA2               	rlf	___awdiv@quotient,f
  4045  12CF  0DA3               	rlf	___awdiv@quotient+1,f
  4046  12D0  3EFF               	addlw	-1
  4047  12D1  1D03               	skipz
  4048  12D2  2ACD               	goto	u2505
  4049  12D3  0878               	movf	___awdiv@divisor+1,w
  4050  12D4  027A               	subwf	___awdiv@dividend+1,w
  4051  12D5  1D03               	skipz
  4052  12D6  2AD9               	goto	u2515
  4053  12D7  0877               	movf	___awdiv@divisor,w
  4054  12D8  0279               	subwf	___awdiv@dividend,w
  4055  12D9                     u2515:	
  4056  12D9  1C03               	skipc
  4057  12DA  2AE2               	goto	l1911
  4058  12DB  0877               	movf	___awdiv@divisor,w
  4059  12DC  02F9               	subwf	___awdiv@dividend,f
  4060  12DD  0878               	movf	___awdiv@divisor+1,w
  4061  12DE  1C03               	skipc
  4062  12DF  03FA               	decf	___awdiv@dividend+1,f
  4063  12E0  02FA               	subwf	___awdiv@dividend+1,f
  4064  12E1  1422               	bsf	___awdiv@quotient,0
  4065  12E2                     l1911:	
  4066  12E2  3001               	movlw	1
  4067  12E3                     u2525:	
  4068  12E3  1003               	clrc
  4069  12E4  0CF8               	rrf	___awdiv@divisor+1,f
  4070  12E5  0CF7               	rrf	___awdiv@divisor,f
  4071  12E6  3EFF               	addlw	-1
  4072  12E7  1D03               	skipz
  4073  12E8  2AE3               	goto	u2525
  4074  12E9  3001               	movlw	1
  4075  12EA  02A0               	subwf	___awdiv@counter,f
  4076  12EB  1D03               	btfss	3,2
  4077  12EC  2ACC               	goto	l1905
  4078  12ED                     l1915:	
  4079  12ED  0821               	movf	___awdiv@sign,w
  4080  12EE  1903               	btfsc	3,2
  4081  12EF  2AF5               	goto	l1919
  4082  12F0  09A2               	comf	___awdiv@quotient,f
  4083  12F1  09A3               	comf	___awdiv@quotient+1,f
  4084  12F2  0AA2               	incf	___awdiv@quotient,f
  4085  12F3  1903               	skipnz
  4086  12F4  0AA3               	incf	___awdiv@quotient+1,f
  4087  12F5                     l1919:	
  4088  12F5  0823               	movf	___awdiv@quotient+1,w
  4089  12F6  00F8               	movwf	?___awdiv+1
  4090  12F7  0822               	movf	___awdiv@quotient,w
  4091  12F8  00F7               	movwf	?___awdiv
  4092  12F9  0008               	return
  4093  12FA                     __end_of___awdiv:	
  4094                           
  4095                           	psect	text10
  4096  0007                     __ptext10:	
  4097 ;; *************** function __tdiv_to_l_ *****************
  4098 ;; Defined at:
  4099 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  f1              3    0[COMMON] float 
  4102 ;;  f2              3    3[COMMON] float 
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;  quot            4    0[BANK0 ] unsigned long 
  4105 ;;  exp1            1    5[BANK0 ] unsigned char 
  4106 ;;  cntr            1    4[BANK0 ] unsigned char 
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  4    0[COMMON] unsigned long 
  4109 ;; Registers used:
  4110 ;;		wreg, status,2, status,0
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4116 ;;      Params:         6       0       0       0       0
  4117 ;;      Locals:         0       6       0       0       0
  4118 ;;      Temps:          4       0       0       0       0
  4119 ;;      Totals:        10       6       0       0       0
  4120 ;;Total ram usage:       16 bytes
  4121 ;; Hardware stack levels used:    1
  4122 ;; This function calls:
  4123 ;;		Nothing
  4124 ;; This function is called by:
  4125 ;;		_printf
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           
  4130                           ;psect for function __tdiv_to_l_
  4131  0007                     __tdiv_to_l_:	
  4132                           
  4133                           ;incstack = 0
  4134                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4135  0007  0870               	movf	__tdiv_to_l_@f1,w
  4136  0008  00F6               	movwf	??__tdiv_to_l_
  4137  0009  0871               	movf	__tdiv_to_l_@f1+1,w
  4138  000A  00F7               	movwf	??__tdiv_to_l_+1
  4139  000B  0872               	movf	__tdiv_to_l_@f1+2,w
  4140  000C  00F8               	movwf	??__tdiv_to_l_+2
  4141  000D  1003               	clrc
  4142  000E  0D77               	rlf	??__tdiv_to_l_+1,w
  4143  000F  0D78               	rlf	??__tdiv_to_l_+2,w
  4144  0010  00F9               	movwf	??__tdiv_to_l_+3
  4145  0011  0879               	movf	??__tdiv_to_l_+3,w
  4146  0012  1283               	bcf	3,5	;RP0=0, select bank0
  4147  0013  1303               	bcf	3,6	;RP1=0, select bank0
  4148  0014  00A5               	movwf	__tdiv_to_l_@exp1
  4149  0015  0825               	movf	__tdiv_to_l_@exp1,w
  4150  0016  1D03               	btfss	3,2
  4151  0017  2821               	goto	l2147
  4152  0018  3000               	movlw	0
  4153  0019  00F3               	movwf	?__tdiv_to_l_+3
  4154  001A  3000               	movlw	0
  4155  001B  00F2               	movwf	?__tdiv_to_l_+2
  4156  001C  3000               	movlw	0
  4157  001D  00F1               	movwf	?__tdiv_to_l_+1
  4158  001E  3000               	movlw	0
  4159  001F  00F0               	movwf	?__tdiv_to_l_
  4160  0020  0008               	return
  4161  0021                     l2147:	
  4162  0021  0873               	movf	__tdiv_to_l_@f2,w
  4163  0022  00F6               	movwf	??__tdiv_to_l_
  4164  0023  0874               	movf	__tdiv_to_l_@f2+1,w
  4165  0024  00F7               	movwf	??__tdiv_to_l_+1
  4166  0025  0875               	movf	__tdiv_to_l_@f2+2,w
  4167  0026  00F8               	movwf	??__tdiv_to_l_+2
  4168  0027  1003               	clrc
  4169  0028  0D77               	rlf	??__tdiv_to_l_+1,w
  4170  0029  0D78               	rlf	??__tdiv_to_l_+2,w
  4171  002A  00F9               	movwf	??__tdiv_to_l_+3
  4172  002B  0879               	movf	??__tdiv_to_l_+3,w
  4173  002C  00A4               	movwf	__tdiv_to_l_@cntr
  4174  002D  0824               	movf	__tdiv_to_l_@cntr,w
  4175  002E  1D03               	btfss	3,2
  4176  002F  2839               	goto	l511
  4177  0030  3000               	movlw	0
  4178  0031  00F3               	movwf	?__tdiv_to_l_+3
  4179  0032  3000               	movlw	0
  4180  0033  00F2               	movwf	?__tdiv_to_l_+2
  4181  0034  3000               	movlw	0
  4182  0035  00F1               	movwf	?__tdiv_to_l_+1
  4183  0036  3000               	movlw	0
  4184  0037  00F0               	movwf	?__tdiv_to_l_
  4185  0038  0008               	return
  4186  0039                     l511:	
  4187  0039  17F1               	bsf	__tdiv_to_l_@f1+1,7
  4188  003A  30FF               	movlw	255
  4189  003B  05F0               	andwf	__tdiv_to_l_@f1,f
  4190  003C  30FF               	movlw	255
  4191  003D  05F1               	andwf	__tdiv_to_l_@f1+1,f
  4192  003E  3000               	movlw	0
  4193  003F  05F2               	andwf	__tdiv_to_l_@f1+2,f
  4194  0040  17F4               	bsf	__tdiv_to_l_@f2+1,7
  4195  0041  30FF               	movlw	255
  4196  0042  05F3               	andwf	__tdiv_to_l_@f2,f
  4197  0043  30FF               	movlw	255
  4198  0044  05F4               	andwf	__tdiv_to_l_@f2+1,f
  4199  0045  3000               	movlw	0
  4200  0046  05F5               	andwf	__tdiv_to_l_@f2+2,f
  4201  0047  3000               	movlw	0
  4202  0048  00A3               	movwf	__tdiv_to_l_@quot+3
  4203  0049  3000               	movlw	0
  4204  004A  00A2               	movwf	__tdiv_to_l_@quot+2
  4205  004B  3000               	movlw	0
  4206  004C  00A1               	movwf	__tdiv_to_l_@quot+1
  4207  004D  3000               	movlw	0
  4208  004E  00A0               	movwf	__tdiv_to_l_@quot
  4209  004F  307F               	movlw	127
  4210  0050  02A5               	subwf	__tdiv_to_l_@exp1,f
  4211  0051  3098               	movlw	152
  4212  0052  0724               	addwf	__tdiv_to_l_@cntr,w
  4213  0053  00F6               	movwf	??__tdiv_to_l_
  4214  0054  0876               	movf	??__tdiv_to_l_,w
  4215  0055  02A5               	subwf	__tdiv_to_l_@exp1,f
  4216  0056  3018               	movlw	24
  4217  0057  00F6               	movwf	??__tdiv_to_l_
  4218  0058  0876               	movf	??__tdiv_to_l_,w
  4219  0059  00A4               	movwf	__tdiv_to_l_@cntr
  4220  005A                     l2161:	
  4221  005A  3001               	movlw	1
  4222  005B  00F6               	movwf	??__tdiv_to_l_
  4223  005C                     u3015:	
  4224  005C  1003               	clrc
  4225  005D  0DA0               	rlf	__tdiv_to_l_@quot,f
  4226  005E  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4227  005F  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4228  0060  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4229  0061  0BF6               	decfsz	??__tdiv_to_l_,f
  4230  0062  285C               	goto	u3015
  4231  0063  0875               	movf	__tdiv_to_l_@f2+2,w
  4232  0064  0272               	subwf	__tdiv_to_l_@f1+2,w
  4233  0065  1D03               	skipz
  4234  0066  286D               	goto	u3025
  4235  0067  0874               	movf	__tdiv_to_l_@f2+1,w
  4236  0068  0271               	subwf	__tdiv_to_l_@f1+1,w
  4237  0069  1D03               	skipz
  4238  006A  286D               	goto	u3025
  4239  006B  0873               	movf	__tdiv_to_l_@f2,w
  4240  006C  0270               	subwf	__tdiv_to_l_@f1,w
  4241  006D                     u3025:	
  4242  006D  1C03               	skipc
  4243  006E  287A               	goto	l2169
  4244  006F  0873               	movf	__tdiv_to_l_@f2,w
  4245  0070  02F0               	subwf	__tdiv_to_l_@f1,f
  4246  0071  0874               	movf	__tdiv_to_l_@f2+1,w
  4247  0072  1C03               	skipc
  4248  0073  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  4249  0074  02F1               	subwf	__tdiv_to_l_@f1+1,f
  4250  0075  0875               	movf	__tdiv_to_l_@f2+2,w
  4251  0076  1C03               	skipc
  4252  0077  0A75               	incf	__tdiv_to_l_@f2+2,w
  4253  0078  02F2               	subwf	__tdiv_to_l_@f1+2,f
  4254  0079  1420               	bsf	__tdiv_to_l_@quot,0
  4255  007A                     l2169:	
  4256  007A  3001               	movlw	1
  4257  007B                     u3035:	
  4258  007B  1003               	clrc
  4259  007C  0DF0               	rlf	__tdiv_to_l_@f1,f
  4260  007D  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  4261  007E  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  4262  007F  3EFF               	addlw	-1
  4263  0080  1D03               	skipz
  4264  0081  287B               	goto	u3035
  4265  0082  3001               	movlw	1
  4266  0083  02A4               	subwf	__tdiv_to_l_@cntr,f
  4267  0084  1D03               	btfss	3,2
  4268  0085  285A               	goto	l2161
  4269  0086  1FA5               	btfss	__tdiv_to_l_@exp1,7
  4270  0087  28A6               	goto	l2181
  4271  0088  0825               	movf	__tdiv_to_l_@exp1,w
  4272  0089  3A80               	xorlw	128
  4273  008A  3E97               	addlw	151
  4274  008B  1803               	skipnc
  4275  008C  2896               	goto	l2179
  4276  008D  3000               	movlw	0
  4277  008E  00F3               	movwf	?__tdiv_to_l_+3
  4278  008F  3000               	movlw	0
  4279  0090  00F2               	movwf	?__tdiv_to_l_+2
  4280  0091  3000               	movlw	0
  4281  0092  00F1               	movwf	?__tdiv_to_l_+1
  4282  0093  3000               	movlw	0
  4283  0094  00F0               	movwf	?__tdiv_to_l_
  4284  0095  0008               	return
  4285  0096                     l2179:	
  4286  0096  3001               	movlw	1
  4287  0097                     u3075:	
  4288  0097  1003               	clrc
  4289  0098  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  4290  0099  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  4291  009A  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  4292  009B  0CA0               	rrf	__tdiv_to_l_@quot,f
  4293  009C  3EFF               	addlw	-1
  4294  009D  1D03               	skipz
  4295  009E  2897               	goto	u3075
  4296  009F  3001               	movlw	1
  4297  00A0  00F6               	movwf	??__tdiv_to_l_
  4298  00A1  0876               	movf	??__tdiv_to_l_,w
  4299  00A2  07A5               	addwf	__tdiv_to_l_@exp1,f
  4300  00A3  1903               	btfsc	3,2
  4301  00A4  28C1               	goto	l2189
  4302  00A5  2896               	goto	l2179
  4303  00A6                     l2181:	
  4304  00A6  3018               	movlw	24
  4305  00A7  0225               	subwf	__tdiv_to_l_@exp1,w
  4306  00A8  1C03               	skipc
  4307  00A9  28BE               	goto	l521
  4308  00AA  3000               	movlw	0
  4309  00AB  00F3               	movwf	?__tdiv_to_l_+3
  4310  00AC  3000               	movlw	0
  4311  00AD  00F2               	movwf	?__tdiv_to_l_+2
  4312  00AE  3000               	movlw	0
  4313  00AF  00F1               	movwf	?__tdiv_to_l_+1
  4314  00B0  3000               	movlw	0
  4315  00B1  00F0               	movwf	?__tdiv_to_l_
  4316  00B2  0008               	return
  4317  00B3                     l2187:	
  4318  00B3  3001               	movlw	1
  4319  00B4  00F6               	movwf	??__tdiv_to_l_
  4320  00B5                     u3105:	
  4321  00B5  1003               	clrc
  4322  00B6  0DA0               	rlf	__tdiv_to_l_@quot,f
  4323  00B7  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4324  00B8  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4325  00B9  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4326  00BA  0BF6               	decfsz	??__tdiv_to_l_,f
  4327  00BB  28B5               	goto	u3105
  4328  00BC  3001               	movlw	1
  4329  00BD  02A5               	subwf	__tdiv_to_l_@exp1,f
  4330  00BE                     l521:	
  4331  00BE  0825               	movf	__tdiv_to_l_@exp1,w
  4332  00BF  1D03               	btfss	3,2
  4333  00C0  28B3               	goto	l2187
  4334  00C1                     l2189:	
  4335  00C1  0823               	movf	__tdiv_to_l_@quot+3,w
  4336  00C2  00F3               	movwf	?__tdiv_to_l_+3
  4337  00C3  0822               	movf	__tdiv_to_l_@quot+2,w
  4338  00C4  00F2               	movwf	?__tdiv_to_l_+2
  4339  00C5  0821               	movf	__tdiv_to_l_@quot+1,w
  4340  00C6  00F1               	movwf	?__tdiv_to_l_+1
  4341  00C7  0820               	movf	__tdiv_to_l_@quot,w
  4342  00C8  00F0               	movwf	?__tdiv_to_l_
  4343  00C9  0008               	return
  4344  00CA                     __end_of__tdiv_to_l_:	
  4345                           
  4346                           	psect	text11
  4347  095C                     __ptext11:	
  4348 ;; *************** function __div_to_l_ *****************
  4349 ;; Defined at:
  4350 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;  f1              3    0[COMMON] unsigned long 
  4353 ;;  f2              3    3[COMMON] unsigned long 
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;  quot            4    0[BANK0 ] unsigned long 
  4356 ;;  exp1            1    5[BANK0 ] unsigned char 
  4357 ;;  cntr            1    4[BANK0 ] unsigned char 
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  4    0[COMMON] unsigned long 
  4360 ;; Registers used:
  4361 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4367 ;;      Params:         6       0       0       0       0
  4368 ;;      Locals:         0       6       0       0       0
  4369 ;;      Temps:          8       0       0       0       0
  4370 ;;      Totals:        14       6       0       0       0
  4371 ;;Total ram usage:       20 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; This function calls:
  4374 ;;		Nothing
  4375 ;; This function is called by:
  4376 ;;		_printf
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           
  4381                           ;psect for function __div_to_l_
  4382  095C                     __div_to_l_:	
  4383                           
  4384                           ;incstack = 0
  4385                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  4386  095C  3070               	movlw	low (__div_to_l_@f1| 0)
  4387  095D  0084               	movwf	4
  4388  095E  0800               	movf	0,w
  4389  095F  00F6               	movwf	??__div_to_l_
  4390  0960  0A84               	incf	4,f
  4391  0961  0800               	movf	0,w
  4392  0962  00F7               	movwf	??__div_to_l_+1
  4393  0963  0A84               	incf	4,f
  4394  0964  0800               	movf	0,w
  4395  0965  00F8               	movwf	??__div_to_l_+2
  4396  0966  0A84               	incf	4,f
  4397  0967  0800               	movf	0,w
  4398  0968  00F9               	movwf	??__div_to_l_+3
  4399  0969  1003               	clrc
  4400  096A  0D78               	rlf	??__div_to_l_+2,w
  4401  096B  0D79               	rlf	??__div_to_l_+3,w
  4402  096C  00FA               	movwf	??__div_to_l_+4
  4403  096D  087A               	movf	??__div_to_l_+4,w
  4404  096E  1283               	bcf	3,5	;RP0=0, select bank0
  4405  096F  1303               	bcf	3,6	;RP1=0, select bank0
  4406  0970  00A5               	movwf	__div_to_l_@exp1
  4407  0971  0825               	movf	__div_to_l_@exp1,w
  4408  0972  1D03               	btfss	3,2
  4409  0973  297D               	goto	l2199
  4410  0974  3000               	movlw	0
  4411  0975  00F3               	movwf	?__div_to_l_+3
  4412  0976  3000               	movlw	0
  4413  0977  00F2               	movwf	?__div_to_l_+2
  4414  0978  3000               	movlw	0
  4415  0979  00F1               	movwf	?__div_to_l_+1
  4416  097A  3000               	movlw	0
  4417  097B  00F0               	movwf	?__div_to_l_
  4418  097C  0008               	return
  4419  097D                     l2199:	
  4420  097D  3073               	movlw	low (__div_to_l_@f2| 0)
  4421  097E  0084               	movwf	4
  4422  097F  0800               	movf	0,w
  4423  0980  00F6               	movwf	??__div_to_l_
  4424  0981  0A84               	incf	4,f
  4425  0982  0800               	movf	0,w
  4426  0983  00F7               	movwf	??__div_to_l_+1
  4427  0984  0A84               	incf	4,f
  4428  0985  0800               	movf	0,w
  4429  0986  00F8               	movwf	??__div_to_l_+2
  4430  0987  0A84               	incf	4,f
  4431  0988  0800               	movf	0,w
  4432  0989  00F9               	movwf	??__div_to_l_+3
  4433  098A  1003               	clrc
  4434  098B  0D78               	rlf	??__div_to_l_+2,w
  4435  098C  0D79               	rlf	??__div_to_l_+3,w
  4436  098D  00FA               	movwf	??__div_to_l_+4
  4437  098E  087A               	movf	??__div_to_l_+4,w
  4438  098F  00A4               	movwf	__div_to_l_@cntr
  4439  0990  0824               	movf	__div_to_l_@cntr,w
  4440  0991  1D03               	btfss	3,2
  4441  0992  299C               	goto	l2205
  4442  0993  3000               	movlw	0
  4443  0994  00F3               	movwf	?__div_to_l_+3
  4444  0995  3000               	movlw	0
  4445  0996  00F2               	movwf	?__div_to_l_+2
  4446  0997  3000               	movlw	0
  4447  0998  00F1               	movwf	?__div_to_l_+1
  4448  0999  3000               	movlw	0
  4449  099A  00F0               	movwf	?__div_to_l_
  4450  099B  0008               	return
  4451  099C                     l2205:	
  4452  099C  3070               	movlw	low (__div_to_l_@f1| 0)
  4453  099D  0084               	movwf	4
  4454  099E  3000               	movlw	0
  4455  099F  0480               	iorwf	0,f
  4456  09A0  0A84               	incf	4,f
  4457  09A1  3000               	movlw	0
  4458  09A2  0480               	iorwf	0,f
  4459  09A3  0A84               	incf	4,f
  4460  09A4  3080               	movlw	128
  4461  09A5  0480               	iorwf	0,f
  4462  09A6  0A84               	incf	4,f
  4463  09A7  3000               	movlw	0
  4464  09A8  0480               	iorwf	0,f
  4465  09A9  3070               	movlw	low (__div_to_l_@f1| 0)
  4466  09AA  0084               	movwf	4
  4467  09AB  30FF               	movlw	255
  4468  09AC  0580               	andwf	0,f
  4469  09AD  0A84               	incf	4,f
  4470  09AE  30FF               	movlw	255
  4471  09AF  0580               	andwf	0,f
  4472  09B0  0A84               	incf	4,f
  4473  09B1  30FF               	movlw	255
  4474  09B2  0580               	andwf	0,f
  4475  09B3  0A84               	incf	4,f
  4476  09B4  3000               	movlw	0
  4477  09B5  0580               	andwf	0,f
  4478  09B6  3073               	movlw	low (__div_to_l_@f2| 0)
  4479  09B7  0084               	movwf	4
  4480  09B8  3000               	movlw	0
  4481  09B9  0480               	iorwf	0,f
  4482  09BA  0A84               	incf	4,f
  4483  09BB  3000               	movlw	0
  4484  09BC  0480               	iorwf	0,f
  4485  09BD  0A84               	incf	4,f
  4486  09BE  3080               	movlw	128
  4487  09BF  0480               	iorwf	0,f
  4488  09C0  0A84               	incf	4,f
  4489  09C1  3000               	movlw	0
  4490  09C2  0480               	iorwf	0,f
  4491  09C3  3073               	movlw	low (__div_to_l_@f2| 0)
  4492  09C4  0084               	movwf	4
  4493  09C5  30FF               	movlw	255
  4494  09C6  0580               	andwf	0,f
  4495  09C7  0A84               	incf	4,f
  4496  09C8  30FF               	movlw	255
  4497  09C9  0580               	andwf	0,f
  4498  09CA  0A84               	incf	4,f
  4499  09CB  30FF               	movlw	255
  4500  09CC  0580               	andwf	0,f
  4501  09CD  0A84               	incf	4,f
  4502  09CE  3000               	movlw	0
  4503  09CF  0580               	andwf	0,f
  4504  09D0  3000               	movlw	0
  4505  09D1  00A3               	movwf	__div_to_l_@quot+3
  4506  09D2  3000               	movlw	0
  4507  09D3  00A2               	movwf	__div_to_l_@quot+2
  4508  09D4  3000               	movlw	0
  4509  09D5  00A1               	movwf	__div_to_l_@quot+1
  4510  09D6  3000               	movlw	0
  4511  09D7  00A0               	movwf	__div_to_l_@quot
  4512  09D8  307F               	movlw	127
  4513  09D9  02A5               	subwf	__div_to_l_@exp1,f
  4514  09DA  30A0               	movlw	160
  4515  09DB  0724               	addwf	__div_to_l_@cntr,w
  4516  09DC  00F6               	movwf	??__div_to_l_
  4517  09DD  0876               	movf	??__div_to_l_,w
  4518  09DE  02A5               	subwf	__div_to_l_@exp1,f
  4519  09DF  3020               	movlw	32
  4520  09E0  00F6               	movwf	??__div_to_l_
  4521  09E1  0876               	movf	??__div_to_l_,w
  4522  09E2  00A4               	movwf	__div_to_l_@cntr
  4523  09E3                     l2215:	
  4524  09E3  3001               	movlw	1
  4525  09E4  00F6               	movwf	??__div_to_l_
  4526  09E5                     u3145:	
  4527  09E5  1003               	clrc
  4528  09E6  0DA0               	rlf	__div_to_l_@quot,f
  4529  09E7  0DA1               	rlf	__div_to_l_@quot+1,f
  4530  09E8  0DA2               	rlf	__div_to_l_@quot+2,f
  4531  09E9  0DA3               	rlf	__div_to_l_@quot+3,f
  4532  09EA  0BF6               	decfsz	??__div_to_l_,f
  4533  09EB  29E5               	goto	u3145
  4534  09EC  3073               	movlw	low (__div_to_l_@f2| 0)
  4535  09ED  0084               	movwf	4
  4536  09EE  0800               	movf	0,w
  4537  09EF  00F6               	movwf	??__div_to_l_
  4538  09F0  0A84               	incf	4,f
  4539  09F1  0800               	movf	0,w
  4540  09F2  00F7               	movwf	??__div_to_l_+1
  4541  09F3  0A84               	incf	4,f
  4542  09F4  0800               	movf	0,w
  4543  09F5  00F8               	movwf	??__div_to_l_+2
  4544  09F6  0A84               	incf	4,f
  4545  09F7  0800               	movf	0,w
  4546  09F8  00F9               	movwf	??__div_to_l_+3
  4547  09F9  3070               	movlw	low (__div_to_l_@f1| 0)
  4548  09FA  0084               	movwf	4
  4549  09FB  0800               	movf	0,w
  4550  09FC  00FA               	movwf	??__div_to_l_+4
  4551  09FD  0A84               	incf	4,f
  4552  09FE  0800               	movf	0,w
  4553  09FF  00FB               	movwf	??__div_to_l_+5
  4554  0A00  0A84               	incf	4,f
  4555  0A01  0800               	movf	0,w
  4556  0A02  00FC               	movwf	??__div_to_l_+6
  4557  0A03  0A84               	incf	4,f
  4558  0A04  0800               	movf	0,w
  4559  0A05  00FD               	movwf	??__div_to_l_+7
  4560  0A06  0879               	movf	??__div_to_l_+3,w
  4561  0A07  027D               	subwf	??__div_to_l_+7,w
  4562  0A08  1D03               	skipz
  4563  0A09  2A14               	goto	u3155
  4564  0A0A  0878               	movf	??__div_to_l_+2,w
  4565  0A0B  027C               	subwf	??__div_to_l_+6,w
  4566  0A0C  1D03               	skipz
  4567  0A0D  2A14               	goto	u3155
  4568  0A0E  0877               	movf	??__div_to_l_+1,w
  4569  0A0F  027B               	subwf	??__div_to_l_+5,w
  4570  0A10  1D03               	skipz
  4571  0A11  2A14               	goto	u3155
  4572  0A12  0876               	movf	??__div_to_l_,w
  4573  0A13  027A               	subwf	??__div_to_l_+4,w
  4574  0A14                     u3155:	
  4575  0A14  1C03               	skipc
  4576  0A15  2A39               	goto	l434
  4577  0A16  3073               	movlw	low (__div_to_l_@f2| 0)
  4578  0A17  0084               	movwf	4
  4579  0A18  0800               	movf	0,w
  4580  0A19  00F6               	movwf	??__div_to_l_
  4581  0A1A  0A84               	incf	4,f
  4582  0A1B  0800               	movf	0,w
  4583  0A1C  00F7               	movwf	??__div_to_l_+1
  4584  0A1D  0A84               	incf	4,f
  4585  0A1E  0800               	movf	0,w
  4586  0A1F  00F8               	movwf	??__div_to_l_+2
  4587  0A20  0A84               	incf	4,f
  4588  0A21  0800               	movf	0,w
  4589  0A22  00F9               	movwf	??__div_to_l_+3
  4590  0A23  3070               	movlw	low (__div_to_l_@f1| 0)
  4591  0A24  0084               	movwf	4
  4592  0A25  0876               	movf	??__div_to_l_,w
  4593  0A26  0280               	subwf	0,f
  4594  0A27  0A84               	incf	4,f
  4595  0A28  0877               	movf	??__div_to_l_+1,w
  4596  0A29  1C03               	skipc
  4597  0A2A  0F77               	incfsz	??__div_to_l_+1,w
  4598  0A2B  0280               	subwf	0,f
  4599  0A2C  0A84               	incf	4,f
  4600  0A2D  0878               	movf	??__div_to_l_+2,w
  4601  0A2E  1C03               	skipc
  4602  0A2F  0F78               	incfsz	??__div_to_l_+2,w
  4603  0A30  0280               	subwf	0,f
  4604  0A31  0A84               	incf	4,f
  4605  0A32  0879               	movf	??__div_to_l_+3,w
  4606  0A33  1C03               	skipc
  4607  0A34  0A79               	incf	??__div_to_l_+3,w
  4608  0A35  0280               	subwf	0,f
  4609  0A36  3003               	movlw	3
  4610  0A37  0284               	subwf	4,f
  4611  0A38  1420               	bsf	__div_to_l_@quot,0
  4612  0A39                     l434:	
  4613  0A39  3070               	movlw	low (__div_to_l_@f1| 0)
  4614  0A3A  0084               	movwf	4
  4615  0A3B  1003               	clrc
  4616  0A3C  0D80               	rlf	0,f
  4617  0A3D  0A84               	incf	4,f
  4618  0A3E  0D80               	rlf	0,f
  4619  0A3F  0A84               	incf	4,f
  4620  0A40  0D80               	rlf	0,f
  4621  0A41  0A84               	incf	4,f
  4622  0A42  0D80               	rlf	0,f
  4623  0A43  0384               	decf	4,f
  4624  0A44  0384               	decf	4,f
  4625  0A45  0384               	decf	4,f
  4626  0A46  3001               	movlw	1
  4627  0A47  02A4               	subwf	__div_to_l_@cntr,f
  4628  0A48  1D03               	btfss	3,2
  4629  0A49  29E3               	goto	l2215
  4630  0A4A  1FA5               	btfss	__div_to_l_@exp1,7
  4631  0A4B  2A6A               	goto	l2233
  4632  0A4C  0825               	movf	__div_to_l_@exp1,w
  4633  0A4D  3A80               	xorlw	128
  4634  0A4E  3E9F               	addlw	159
  4635  0A4F  1803               	skipnc
  4636  0A50  2A5A               	goto	l2231
  4637  0A51  3000               	movlw	0
  4638  0A52  00F3               	movwf	?__div_to_l_+3
  4639  0A53  3000               	movlw	0
  4640  0A54  00F2               	movwf	?__div_to_l_+2
  4641  0A55  3000               	movlw	0
  4642  0A56  00F1               	movwf	?__div_to_l_+1
  4643  0A57  3000               	movlw	0
  4644  0A58  00F0               	movwf	?__div_to_l_
  4645  0A59  0008               	return
  4646  0A5A                     l2231:	
  4647  0A5A  3001               	movlw	1
  4648  0A5B                     u3195:	
  4649  0A5B  1003               	clrc
  4650  0A5C  0CA3               	rrf	__div_to_l_@quot+3,f
  4651  0A5D  0CA2               	rrf	__div_to_l_@quot+2,f
  4652  0A5E  0CA1               	rrf	__div_to_l_@quot+1,f
  4653  0A5F  0CA0               	rrf	__div_to_l_@quot,f
  4654  0A60  3EFF               	addlw	-1
  4655  0A61  1D03               	skipz
  4656  0A62  2A5B               	goto	u3195
  4657  0A63  3001               	movlw	1
  4658  0A64  00F6               	movwf	??__div_to_l_
  4659  0A65  0876               	movf	??__div_to_l_,w
  4660  0A66  07A5               	addwf	__div_to_l_@exp1,f
  4661  0A67  1903               	btfsc	3,2
  4662  0A68  2A85               	goto	l2241
  4663  0A69  2A5A               	goto	l2231
  4664  0A6A                     l2233:	
  4665  0A6A  3020               	movlw	32
  4666  0A6B  0225               	subwf	__div_to_l_@exp1,w
  4667  0A6C  1C03               	skipc
  4668  0A6D  2A82               	goto	l442
  4669  0A6E  3000               	movlw	0
  4670  0A6F  00F3               	movwf	?__div_to_l_+3
  4671  0A70  3000               	movlw	0
  4672  0A71  00F2               	movwf	?__div_to_l_+2
  4673  0A72  3000               	movlw	0
  4674  0A73  00F1               	movwf	?__div_to_l_+1
  4675  0A74  3000               	movlw	0
  4676  0A75  00F0               	movwf	?__div_to_l_
  4677  0A76  0008               	return
  4678  0A77                     l2239:	
  4679  0A77  3001               	movlw	1
  4680  0A78  00F6               	movwf	??__div_to_l_
  4681  0A79                     u3225:	
  4682  0A79  1003               	clrc
  4683  0A7A  0DA0               	rlf	__div_to_l_@quot,f
  4684  0A7B  0DA1               	rlf	__div_to_l_@quot+1,f
  4685  0A7C  0DA2               	rlf	__div_to_l_@quot+2,f
  4686  0A7D  0DA3               	rlf	__div_to_l_@quot+3,f
  4687  0A7E  0BF6               	decfsz	??__div_to_l_,f
  4688  0A7F  2A79               	goto	u3225
  4689  0A80  3001               	movlw	1
  4690  0A81  02A5               	subwf	__div_to_l_@exp1,f
  4691  0A82                     l442:	
  4692  0A82  0825               	movf	__div_to_l_@exp1,w
  4693  0A83  1D03               	btfss	3,2
  4694  0A84  2A77               	goto	l2239
  4695  0A85                     l2241:	
  4696  0A85  0823               	movf	__div_to_l_@quot+3,w
  4697  0A86  00F3               	movwf	?__div_to_l_+3
  4698  0A87  0822               	movf	__div_to_l_@quot+2,w
  4699  0A88  00F2               	movwf	?__div_to_l_+2
  4700  0A89  0821               	movf	__div_to_l_@quot+1,w
  4701  0A8A  00F1               	movwf	?__div_to_l_+1
  4702  0A8B  0820               	movf	__div_to_l_@quot,w
  4703  0A8C  00F0               	movwf	?__div_to_l_
  4704  0A8D  0008               	return
  4705  0A8E                     __end_of__div_to_l_:	
  4706                           
  4707                           	psect	text12
  4708  11D8                     __ptext12:	
  4709 ;; *************** function ___wmul *****************
  4710 ;; Defined at:
  4711 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;  multiplier      2    0[COMMON] unsigned int 
  4714 ;;  multiplicand    2    2[COMMON] unsigned int 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  product         2    4[COMMON] unsigned int 
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  2    0[COMMON] unsigned int 
  4719 ;; Registers used:
  4720 ;;		wreg, status,2, status,0
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4726 ;;      Params:         4       0       0       0       0
  4727 ;;      Locals:         2       0       0       0       0
  4728 ;;      Temps:          0       0       0       0       0
  4729 ;;      Totals:         6       0       0       0       0
  4730 ;;Total ram usage:        6 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; This function calls:
  4733 ;;		Nothing
  4734 ;; This function is called by:
  4735 ;;		_printf
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           
  4740                           ;psect for function ___wmul
  4741  11D8                     ___wmul:	
  4742                           
  4743                           ;incstack = 0
  4744                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4745  11D8  01F4               	clrf	___wmul@product
  4746  11D9  01F5               	clrf	___wmul@product+1
  4747  11DA                     l2247:	
  4748  11DA  1C70               	btfss	___wmul@multiplier,0
  4749  11DB  29E2               	goto	l276
  4750  11DC  0872               	movf	___wmul@multiplicand,w
  4751  11DD  07F4               	addwf	___wmul@product,f
  4752  11DE  1803               	skipnc
  4753  11DF  0AF5               	incf	___wmul@product+1,f
  4754  11E0  0873               	movf	___wmul@multiplicand+1,w
  4755  11E1  07F5               	addwf	___wmul@product+1,f
  4756  11E2                     l276:	
  4757  11E2  3001               	movlw	1
  4758  11E3                     u3255:	
  4759  11E3  1003               	clrc
  4760  11E4  0DF2               	rlf	___wmul@multiplicand,f
  4761  11E5  0DF3               	rlf	___wmul@multiplicand+1,f
  4762  11E6  3EFF               	addlw	-1
  4763  11E7  1D03               	skipz
  4764  11E8  29E3               	goto	u3255
  4765  11E9  3001               	movlw	1
  4766  11EA                     u3265:	
  4767  11EA  1003               	clrc
  4768  11EB  0CF1               	rrf	___wmul@multiplier+1,f
  4769  11EC  0CF0               	rrf	___wmul@multiplier,f
  4770  11ED  3EFF               	addlw	-1
  4771  11EE  1D03               	skipz
  4772  11EF  29EA               	goto	u3265
  4773  11F0  0870               	movf	___wmul@multiplier,w
  4774  11F1  0471               	iorwf	___wmul@multiplier+1,w
  4775  11F2  1D03               	btfss	3,2
  4776  11F3  29DA               	goto	l2247
  4777  11F4  0875               	movf	___wmul@product+1,w
  4778  11F5  00F1               	movwf	?___wmul+1
  4779  11F6  0874               	movf	___wmul@product,w
  4780  11F7  00F0               	movwf	?___wmul
  4781  11F8  0008               	return
  4782  11F9                     __end_of___wmul:	
  4783                           
  4784                           	psect	text13
  4785  11F9                     __ptext13:	
  4786 ;; *************** function ___lltoft *****************
  4787 ;; Defined at:
  4788 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lltoft.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;  c               4    8[COMMON] unsigned long 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;  exp             1   13[COMMON] unsigned char 
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  3    8[COMMON] float 
  4795 ;; Registers used:
  4796 ;;		wreg, status,2, status,0, pclath, cstack
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4802 ;;      Params:         4       0       0       0       0
  4803 ;;      Locals:         1       0       0       0       0
  4804 ;;      Temps:          1       0       0       0       0
  4805 ;;      Totals:         6       0       0       0       0
  4806 ;;Total ram usage:        6 bytes
  4807 ;; Hardware stack levels used:    1
  4808 ;; Hardware stack levels required when called:    1
  4809 ;; This function calls:
  4810 ;;		___ftpack
  4811 ;; This function is called by:
  4812 ;;		_printf
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           
  4817                           ;psect for function ___lltoft
  4818  11F9                     ___lltoft:	
  4819                           
  4820                           ;incstack = 0
  4821                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  4822  11F9  308E               	movlw	142
  4823  11FA  00FC               	movwf	??___lltoft
  4824  11FB  087C               	movf	??___lltoft,w
  4825  11FC  00FD               	movwf	___lltoft@exp
  4826  11FD                     l2377:	
  4827  11FD  30FF               	movlw	255
  4828  11FE  057B               	andwf	___lltoft@c+3,w
  4829  11FF  1903               	btfsc	3,2
  4830  1200  2A0F               	goto	l2379
  4831  1201  3001               	movlw	1
  4832  1202                     u3575:	
  4833  1202  1003               	clrc
  4834  1203  0CFB               	rrf	___lltoft@c+3,f
  4835  1204  0CFA               	rrf	___lltoft@c+2,f
  4836  1205  0CF9               	rrf	___lltoft@c+1,f
  4837  1206  0CF8               	rrf	___lltoft@c,f
  4838  1207  3EFF               	addlw	-1
  4839  1208  1D03               	skipz
  4840  1209  2A02               	goto	u3575
  4841  120A  3001               	movlw	1
  4842  120B  00FC               	movwf	??___lltoft
  4843  120C  087C               	movf	??___lltoft,w
  4844  120D  07FD               	addwf	___lltoft@exp,f
  4845  120E  29FD               	goto	l2377
  4846  120F                     l2379:	
  4847  120F  0878               	movf	___lltoft@c,w
  4848  1210  00F0               	movwf	___ftpack@arg
  4849  1211  0879               	movf	___lltoft@c+1,w
  4850  1212  00F1               	movwf	___ftpack@arg+1
  4851  1213  087A               	movf	___lltoft@c+2,w
  4852  1214  00F2               	movwf	___ftpack@arg+2
  4853  1215  087D               	movf	___lltoft@exp,w
  4854  1216  00FC               	movwf	??___lltoft
  4855  1217  087C               	movf	??___lltoft,w
  4856  1218  00F3               	movwf	___ftpack@exp
  4857  1219  01F4               	clrf	___ftpack@sign
  4858  121A  160A  118A  23B5   	fcall	___ftpack
  4859  121D  0870               	movf	?___ftpack,w
  4860  121E  00F8               	movwf	?___lltoft
  4861  121F  0871               	movf	?___ftpack+1,w
  4862  1220  00F9               	movwf	?___lltoft+1
  4863  1221  0872               	movf	?___ftpack+2,w
  4864  1222  00FA               	movwf	?___lltoft+2
  4865  1223  0008               	return
  4866  1224                     __end_of___lltoft:	
  4867                           
  4868                           	psect	text14
  4869  0807                     __ptext14:	
  4870 ;; *************** function ___llmod *****************
  4871 ;; Defined at:
  4872 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  divisor         4    0[COMMON] unsigned long 
  4875 ;;  dividend        4    4[COMMON] unsigned long 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  counter         1    9[COMMON] unsigned char 
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  4    0[COMMON] unsigned long 
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, status,0
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4887 ;;      Params:         8       0       0       0       0
  4888 ;;      Locals:         1       0       0       0       0
  4889 ;;      Temps:          1       0       0       0       0
  4890 ;;      Totals:        10       0       0       0       0
  4891 ;;Total ram usage:       10 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_printf
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           
  4901                           ;psect for function ___llmod
  4902  0807                     ___llmod:	
  4903                           
  4904                           ;incstack = 0
  4905                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4906  0807  0873               	movf	___llmod@divisor+3,w
  4907  0808  0472               	iorwf	___llmod@divisor+2,w
  4908  0809  0471               	iorwf	___llmod@divisor+1,w
  4909  080A  0470               	iorwf	___llmod@divisor,w
  4910  080B  1903               	skipnz
  4911  080C  284A               	goto	l2369
  4912  080D  01F9               	clrf	___llmod@counter
  4913  080E  0AF9               	incf	___llmod@counter,f
  4914  080F                     l2359:	
  4915  080F  1BF3               	btfsc	___llmod@divisor+3,7
  4916  0810  281F               	goto	l2361
  4917  0811  3001               	movlw	1
  4918  0812  00F8               	movwf	??___llmod
  4919  0813                     u3525:	
  4920  0813  1003               	clrc
  4921  0814  0DF0               	rlf	___llmod@divisor,f
  4922  0815  0DF1               	rlf	___llmod@divisor+1,f
  4923  0816  0DF2               	rlf	___llmod@divisor+2,f
  4924  0817  0DF3               	rlf	___llmod@divisor+3,f
  4925  0818  0BF8               	decfsz	??___llmod,f
  4926  0819  2813               	goto	u3525
  4927  081A  3001               	movlw	1
  4928  081B  00F8               	movwf	??___llmod
  4929  081C  0878               	movf	??___llmod,w
  4930  081D  07F9               	addwf	___llmod@counter,f
  4931  081E  280F               	goto	l2359
  4932  081F                     l2361:	
  4933  081F  0873               	movf	___llmod@divisor+3,w
  4934  0820  0277               	subwf	___llmod@dividend+3,w
  4935  0821  1D03               	skipz
  4936  0822  282D               	goto	u3545
  4937  0823  0872               	movf	___llmod@divisor+2,w
  4938  0824  0276               	subwf	___llmod@dividend+2,w
  4939  0825  1D03               	skipz
  4940  0826  282D               	goto	u3545
  4941  0827  0871               	movf	___llmod@divisor+1,w
  4942  0828  0275               	subwf	___llmod@dividend+1,w
  4943  0829  1D03               	skipz
  4944  082A  282D               	goto	u3545
  4945  082B  0870               	movf	___llmod@divisor,w
  4946  082C  0274               	subwf	___llmod@dividend,w
  4947  082D                     u3545:	
  4948  082D  1C03               	skipc
  4949  082E  283D               	goto	l2365
  4950  082F  0870               	movf	___llmod@divisor,w
  4951  0830  02F4               	subwf	___llmod@dividend,f
  4952  0831  0871               	movf	___llmod@divisor+1,w
  4953  0832  1C03               	skipc
  4954  0833  0F71               	incfsz	___llmod@divisor+1,w
  4955  0834  02F5               	subwf	___llmod@dividend+1,f
  4956  0835  0872               	movf	___llmod@divisor+2,w
  4957  0836  1C03               	skipc
  4958  0837  0F72               	incfsz	___llmod@divisor+2,w
  4959  0838  02F6               	subwf	___llmod@dividend+2,f
  4960  0839  0873               	movf	___llmod@divisor+3,w
  4961  083A  1C03               	skipc
  4962  083B  0F73               	incfsz	___llmod@divisor+3,w
  4963  083C  02F7               	subwf	___llmod@dividend+3,f
  4964  083D                     l2365:	
  4965  083D  3001               	movlw	1
  4966  083E                     u3555:	
  4967  083E  1003               	clrc
  4968  083F  0CF3               	rrf	___llmod@divisor+3,f
  4969  0840  0CF2               	rrf	___llmod@divisor+2,f
  4970  0841  0CF1               	rrf	___llmod@divisor+1,f
  4971  0842  0CF0               	rrf	___llmod@divisor,f
  4972  0843  3EFF               	addlw	-1
  4973  0844  1D03               	skipz
  4974  0845  283E               	goto	u3555
  4975  0846  3001               	movlw	1
  4976  0847  02F9               	subwf	___llmod@counter,f
  4977  0848  1D03               	btfss	3,2
  4978  0849  281F               	goto	l2361
  4979  084A                     l2369:	
  4980  084A  0877               	movf	___llmod@dividend+3,w
  4981  084B  00F3               	movwf	?___llmod+3
  4982  084C  0876               	movf	___llmod@dividend+2,w
  4983  084D  00F2               	movwf	?___llmod+2
  4984  084E  0875               	movf	___llmod@dividend+1,w
  4985  084F  00F1               	movwf	?___llmod+1
  4986  0850  0874               	movf	___llmod@dividend,w
  4987  0851  00F0               	movwf	?___llmod
  4988  0852  0008               	return
  4989  0853                     __end_of___llmod:	
  4990                           
  4991                           	psect	text15
  4992  1357                     __ptext15:	
  4993 ;; *************** function ___lldiv *****************
  4994 ;; Defined at:
  4995 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  divisor         4    0[COMMON] unsigned long 
  4998 ;;  dividend        4    4[COMMON] unsigned long 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;  quotient        4    9[COMMON] unsigned long 
  5001 ;;  counter         1   13[COMMON] unsigned char 
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  4    0[COMMON] unsigned long 
  5004 ;; Registers used:
  5005 ;;		wreg, status,2, status,0
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5011 ;;      Params:         8       0       0       0       0
  5012 ;;      Locals:         5       0       0       0       0
  5013 ;;      Temps:          1       0       0       0       0
  5014 ;;      Totals:        14       0       0       0       0
  5015 ;;Total ram usage:       14 bytes
  5016 ;; Hardware stack levels used:    1
  5017 ;; This function calls:
  5018 ;;		Nothing
  5019 ;; This function is called by:
  5020 ;;		_printf
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           
  5025                           ;psect for function ___lldiv
  5026  1357                     ___lldiv:	
  5027                           
  5028                           ;incstack = 0
  5029                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5030  1357  3000               	movlw	0
  5031  1358  00FC               	movwf	___lldiv@quotient+3
  5032  1359  3000               	movlw	0
  5033  135A  00FB               	movwf	___lldiv@quotient+2
  5034  135B  3000               	movlw	0
  5035  135C  00FA               	movwf	___lldiv@quotient+1
  5036  135D  3000               	movlw	0
  5037  135E  00F9               	movwf	___lldiv@quotient
  5038  135F  0873               	movf	___lldiv@divisor+3,w
  5039  1360  0472               	iorwf	___lldiv@divisor+2,w
  5040  1361  0471               	iorwf	___lldiv@divisor+1,w
  5041  1362  0470               	iorwf	___lldiv@divisor,w
  5042  1363  1903               	skipnz
  5043  1364  2BAC               	goto	l2349
  5044  1365  01FD               	clrf	___lldiv@counter
  5045  1366  0AFD               	incf	___lldiv@counter,f
  5046  1367                     l2335:	
  5047  1367  1BF3               	btfsc	___lldiv@divisor+3,7
  5048  1368  2B77               	goto	l2337
  5049  1369  3001               	movlw	1
  5050  136A  00F8               	movwf	??___lldiv
  5051  136B                     u3455:	
  5052  136B  1003               	clrc
  5053  136C  0DF0               	rlf	___lldiv@divisor,f
  5054  136D  0DF1               	rlf	___lldiv@divisor+1,f
  5055  136E  0DF2               	rlf	___lldiv@divisor+2,f
  5056  136F  0DF3               	rlf	___lldiv@divisor+3,f
  5057  1370  0BF8               	decfsz	??___lldiv,f
  5058  1371  2B6B               	goto	u3455
  5059  1372  3001               	movlw	1
  5060  1373  00F8               	movwf	??___lldiv
  5061  1374  0878               	movf	??___lldiv,w
  5062  1375  07FD               	addwf	___lldiv@counter,f
  5063  1376  2B67               	goto	l2335
  5064  1377                     l2337:	
  5065  1377  3001               	movlw	1
  5066  1378  00F8               	movwf	??___lldiv
  5067  1379                     u3475:	
  5068  1379  1003               	clrc
  5069  137A  0DF9               	rlf	___lldiv@quotient,f
  5070  137B  0DFA               	rlf	___lldiv@quotient+1,f
  5071  137C  0DFB               	rlf	___lldiv@quotient+2,f
  5072  137D  0DFC               	rlf	___lldiv@quotient+3,f
  5073  137E  0BF8               	decfsz	??___lldiv,f
  5074  137F  2B79               	goto	u3475
  5075  1380  0873               	movf	___lldiv@divisor+3,w
  5076  1381  0277               	subwf	___lldiv@dividend+3,w
  5077  1382  1D03               	skipz
  5078  1383  2B8E               	goto	u3485
  5079  1384  0872               	movf	___lldiv@divisor+2,w
  5080  1385  0276               	subwf	___lldiv@dividend+2,w
  5081  1386  1D03               	skipz
  5082  1387  2B8E               	goto	u3485
  5083  1388  0871               	movf	___lldiv@divisor+1,w
  5084  1389  0275               	subwf	___lldiv@dividend+1,w
  5085  138A  1D03               	skipz
  5086  138B  2B8E               	goto	u3485
  5087  138C  0870               	movf	___lldiv@divisor,w
  5088  138D  0274               	subwf	___lldiv@dividend,w
  5089  138E                     u3485:	
  5090  138E  1C03               	skipc
  5091  138F  2B9F               	goto	l2345
  5092  1390  0870               	movf	___lldiv@divisor,w
  5093  1391  02F4               	subwf	___lldiv@dividend,f
  5094  1392  0871               	movf	___lldiv@divisor+1,w
  5095  1393  1C03               	skipc
  5096  1394  0F71               	incfsz	___lldiv@divisor+1,w
  5097  1395  02F5               	subwf	___lldiv@dividend+1,f
  5098  1396  0872               	movf	___lldiv@divisor+2,w
  5099  1397  1C03               	skipc
  5100  1398  0F72               	incfsz	___lldiv@divisor+2,w
  5101  1399  02F6               	subwf	___lldiv@dividend+2,f
  5102  139A  0873               	movf	___lldiv@divisor+3,w
  5103  139B  1C03               	skipc
  5104  139C  0F73               	incfsz	___lldiv@divisor+3,w
  5105  139D  02F7               	subwf	___lldiv@dividend+3,f
  5106  139E  1479               	bsf	___lldiv@quotient,0
  5107  139F                     l2345:	
  5108  139F  3001               	movlw	1
  5109  13A0                     u3495:	
  5110  13A0  1003               	clrc
  5111  13A1  0CF3               	rrf	___lldiv@divisor+3,f
  5112  13A2  0CF2               	rrf	___lldiv@divisor+2,f
  5113  13A3  0CF1               	rrf	___lldiv@divisor+1,f
  5114  13A4  0CF0               	rrf	___lldiv@divisor,f
  5115  13A5  3EFF               	addlw	-1
  5116  13A6  1D03               	skipz
  5117  13A7  2BA0               	goto	u3495
  5118  13A8  3001               	movlw	1
  5119  13A9  02FD               	subwf	___lldiv@counter,f
  5120  13AA  1D03               	btfss	3,2
  5121  13AB  2B77               	goto	l2337
  5122  13AC                     l2349:	
  5123  13AC  087C               	movf	___lldiv@quotient+3,w
  5124  13AD  00F3               	movwf	?___lldiv+3
  5125  13AE  087B               	movf	___lldiv@quotient+2,w
  5126  13AF  00F2               	movwf	?___lldiv+2
  5127  13B0  087A               	movf	___lldiv@quotient+1,w
  5128  13B1  00F1               	movwf	?___lldiv+1
  5129  13B2  0879               	movf	___lldiv@quotient,w
  5130  13B3  00F0               	movwf	?___lldiv
  5131  13B4  0008               	return
  5132  13B5                     __end_of___lldiv:	
  5133                           
  5134                           	psect	text16
  5135  152B                     __ptext16:	
  5136 ;; *************** function ___fttol *****************
  5137 ;; Defined at:
  5138 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  f1              3   41[BANK0 ] float 
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  lval            4   50[BANK0 ] unsigned long 
  5143 ;;  exp1            1   54[BANK0 ] unsigned char 
  5144 ;;  sign1           1   49[BANK0 ] unsigned char 
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  4   41[BANK0 ] long 
  5147 ;; Registers used:
  5148 ;;		wreg, status,2, status,0
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5154 ;;      Params:         0       4       0       0       0
  5155 ;;      Locals:         0       6       0       0       0
  5156 ;;      Temps:          0       4       0       0       0
  5157 ;;      Totals:         0      14       0       0       0
  5158 ;;Total ram usage:       14 bytes
  5159 ;; Hardware stack levels used:    1
  5160 ;; This function calls:
  5161 ;;		Nothing
  5162 ;; This function is called by:
  5163 ;;		_printf
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           
  5168                           ;psect for function ___fttol
  5169  152B                     ___fttol:	
  5170                           
  5171                           ;incstack = 0
  5172                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5173  152B  1283               	bcf	3,5	;RP0=0, select bank0
  5174  152C  1303               	bcf	3,6	;RP1=0, select bank0
  5175  152D  0849               	movf	___fttol@f1,w
  5176  152E  00CD               	movwf	??___fttol
  5177  152F  084A               	movf	___fttol@f1+1,w
  5178  1530  00CE               	movwf	??___fttol+1
  5179  1531  084B               	movf	___fttol@f1+2,w
  5180  1532  00CF               	movwf	??___fttol+2
  5181  1533  1003               	clrc
  5182  1534  0D4E               	rlf	??___fttol+1,w
  5183  1535  0D4F               	rlf	??___fttol+2,w
  5184  1536  00D0               	movwf	??___fttol+3
  5185  1537  0850               	movf	??___fttol+3,w
  5186  1538  00D6               	movwf	___fttol@exp1
  5187  1539  0856               	movf	___fttol@exp1,w
  5188  153A  1D03               	btfss	3,2
  5189  153B  2D45               	goto	l2293
  5190  153C  3000               	movlw	0
  5191  153D  00CC               	movwf	?___fttol+3
  5192  153E  3000               	movlw	0
  5193  153F  00CB               	movwf	?___fttol+2
  5194  1540  3000               	movlw	0
  5195  1541  00CA               	movwf	?___fttol+1
  5196  1542  3000               	movlw	0
  5197  1543  00C9               	movwf	?___fttol
  5198  1544  0008               	return
  5199  1545                     l2293:	
  5200  1545  0849               	movf	___fttol@f1,w
  5201  1546  00CD               	movwf	??___fttol
  5202  1547  084A               	movf	___fttol@f1+1,w
  5203  1548  00CE               	movwf	??___fttol+1
  5204  1549  084B               	movf	___fttol@f1+2,w
  5205  154A  00CF               	movwf	??___fttol+2
  5206  154B  3017               	movlw	23
  5207  154C                     u3355:	
  5208  154C  1003               	clrc
  5209  154D  0CCF               	rrf	??___fttol+2,f
  5210  154E  0CCE               	rrf	??___fttol+1,f
  5211  154F  0CCD               	rrf	??___fttol,f
  5212  1550  3EFF               	addlw	-1
  5213  1551  1D03               	skipz
  5214  1552  2D4C               	goto	u3355
  5215  1553  084D               	movf	??___fttol,w
  5216  1554  00D0               	movwf	??___fttol+3
  5217  1555  0850               	movf	??___fttol+3,w
  5218  1556  00D1               	movwf	___fttol@sign1
  5219  1557  17CA               	bsf	___fttol@f1+1,7
  5220  1558  30FF               	movlw	255
  5221  1559  05C9               	andwf	___fttol@f1,f
  5222  155A  30FF               	movlw	255
  5223  155B  05CA               	andwf	___fttol@f1+1,f
  5224  155C  3000               	movlw	0
  5225  155D  05CB               	andwf	___fttol@f1+2,f
  5226  155E  0849               	movf	___fttol@f1,w
  5227  155F  00D2               	movwf	___fttol@lval
  5228  1560  084A               	movf	___fttol@f1+1,w
  5229  1561  00D3               	movwf	___fttol@lval+1
  5230  1562  084B               	movf	___fttol@f1+2,w
  5231  1563  00D4               	movwf	___fttol@lval+2
  5232  1564  01D5               	clrf	___fttol@lval+3
  5233  1565  308E               	movlw	142
  5234  1566  02D6               	subwf	___fttol@exp1,f
  5235  1567  1FD6               	btfss	___fttol@exp1,7
  5236  1568  2D87               	goto	l2313
  5237  1569  0856               	movf	___fttol@exp1,w
  5238  156A  3A80               	xorlw	128
  5239  156B  3E8F               	addlw	143
  5240  156C  1803               	skipnc
  5241  156D  2D77               	goto	l2311
  5242  156E  3000               	movlw	0
  5243  156F  00CC               	movwf	?___fttol+3
  5244  1570  3000               	movlw	0
  5245  1571  00CB               	movwf	?___fttol+2
  5246  1572  3000               	movlw	0
  5247  1573  00CA               	movwf	?___fttol+1
  5248  1574  3000               	movlw	0
  5249  1575  00C9               	movwf	?___fttol
  5250  1576  0008               	return
  5251  1577                     l2311:	
  5252  1577  3001               	movlw	1
  5253  1578                     u3385:	
  5254  1578  1003               	clrc
  5255  1579  0CD5               	rrf	___fttol@lval+3,f
  5256  157A  0CD4               	rrf	___fttol@lval+2,f
  5257  157B  0CD3               	rrf	___fttol@lval+1,f
  5258  157C  0CD2               	rrf	___fttol@lval,f
  5259  157D  3EFF               	addlw	-1
  5260  157E  1D03               	skipz
  5261  157F  2D78               	goto	u3385
  5262  1580  3001               	movlw	1
  5263  1581  00CD               	movwf	??___fttol
  5264  1582  084D               	movf	??___fttol,w
  5265  1583  07D6               	addwf	___fttol@exp1,f
  5266  1584  1903               	btfsc	3,2
  5267  1585  2DA2               	goto	l2321
  5268  1586  2D77               	goto	l2311
  5269  1587                     l2313:	
  5270  1587  3018               	movlw	24
  5271  1588  0256               	subwf	___fttol@exp1,w
  5272  1589  1C03               	skipc
  5273  158A  2D9F               	goto	l562
  5274  158B  3000               	movlw	0
  5275  158C  00CC               	movwf	?___fttol+3
  5276  158D  3000               	movlw	0
  5277  158E  00CB               	movwf	?___fttol+2
  5278  158F  3000               	movlw	0
  5279  1590  00CA               	movwf	?___fttol+1
  5280  1591  3000               	movlw	0
  5281  1592  00C9               	movwf	?___fttol
  5282  1593  0008               	return
  5283  1594                     l2319:	
  5284  1594  3001               	movlw	1
  5285  1595  00CD               	movwf	??___fttol
  5286  1596                     u3415:	
  5287  1596  1003               	clrc
  5288  1597  0DD2               	rlf	___fttol@lval,f
  5289  1598  0DD3               	rlf	___fttol@lval+1,f
  5290  1599  0DD4               	rlf	___fttol@lval+2,f
  5291  159A  0DD5               	rlf	___fttol@lval+3,f
  5292  159B  0BCD               	decfsz	??___fttol,f
  5293  159C  2D96               	goto	u3415
  5294  159D  3001               	movlw	1
  5295  159E  02D6               	subwf	___fttol@exp1,f
  5296  159F                     l562:	
  5297  159F  0856               	movf	___fttol@exp1,w
  5298  15A0  1D03               	btfss	3,2
  5299  15A1  2D94               	goto	l2319
  5300  15A2                     l2321:	
  5301  15A2  0851               	movf	___fttol@sign1,w
  5302  15A3  1903               	btfsc	3,2
  5303  15A4  2DB0               	goto	l2325
  5304  15A5  09D2               	comf	___fttol@lval,f
  5305  15A6  09D3               	comf	___fttol@lval+1,f
  5306  15A7  09D4               	comf	___fttol@lval+2,f
  5307  15A8  09D5               	comf	___fttol@lval+3,f
  5308  15A9  0AD2               	incf	___fttol@lval,f
  5309  15AA  1903               	skipnz
  5310  15AB  0AD3               	incf	___fttol@lval+1,f
  5311  15AC  1903               	skipnz
  5312  15AD  0AD4               	incf	___fttol@lval+2,f
  5313  15AE  1903               	skipnz
  5314  15AF  0AD5               	incf	___fttol@lval+3,f
  5315  15B0                     l2325:	
  5316  15B0  0855               	movf	___fttol@lval+3,w
  5317  15B1  00CC               	movwf	?___fttol+3
  5318  15B2  0854               	movf	___fttol@lval+2,w
  5319  15B3  00CB               	movwf	?___fttol+2
  5320  15B4  0853               	movf	___fttol@lval+1,w
  5321  15B5  00CA               	movwf	?___fttol+1
  5322  15B6  0852               	movf	___fttol@lval,w
  5323  15B7  00C9               	movwf	?___fttol
  5324  15B8  0008               	return
  5325  15B9                     __end_of___fttol:	
  5326                           
  5327                           	psect	text17
  5328  11B7                     __ptext17:	
  5329 ;; *************** function ___ftsub *****************
  5330 ;; Defined at:
  5331 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftsub.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;  f2              3   68[BANK0 ] float 
  5334 ;;  f1              3   71[BANK0 ] float 
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;		None
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  3   68[BANK0 ] float 
  5339 ;; Registers used:
  5340 ;;		wreg, status,2, status,0, pclath, cstack
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5346 ;;      Params:         0       6       0       0       0
  5347 ;;      Locals:         0       0       0       0       0
  5348 ;;      Temps:          0       0       0       0       0
  5349 ;;      Totals:         0       6       0       0       0
  5350 ;;Total ram usage:        6 bytes
  5351 ;; Hardware stack levels used:    1
  5352 ;; Hardware stack levels required when called:    2
  5353 ;; This function calls:
  5354 ;;		___ftadd
  5355 ;; This function is called by:
  5356 ;;		_printf
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           
  5361                           ;psect for function ___ftsub
  5362  11B7                     ___ftsub:	
  5363                           
  5364                           ;incstack = 0
  5365                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5366  11B7  1283               	bcf	3,5	;RP0=0, select bank0
  5367  11B8  1303               	bcf	3,6	;RP1=0, select bank0
  5368  11B9  0866               	movf	___ftsub@f2+2,w
  5369  11BA  0465               	iorwf	___ftsub@f2+1,w
  5370  11BB  0464               	iorwf	___ftsub@f2,w
  5371  11BC  1903               	skipnz
  5372  11BD  29C0               	goto	l2283
  5373  11BE  3080               	movlw	128
  5374  11BF  06E6               	xorwf	___ftsub@f2+2,f
  5375  11C0                     l2283:	
  5376  11C0  0867               	movf	___ftsub@f1,w
  5377  11C1  00D7               	movwf	___ftadd@f1
  5378  11C2  0868               	movf	___ftsub@f1+1,w
  5379  11C3  00D8               	movwf	___ftadd@f1+1
  5380  11C4  0869               	movf	___ftsub@f1+2,w
  5381  11C5  00D9               	movwf	___ftadd@f1+2
  5382  11C6  0864               	movf	___ftsub@f2,w
  5383  11C7  00DA               	movwf	___ftadd@f2
  5384  11C8  0865               	movf	___ftsub@f2+1,w
  5385  11C9  00DB               	movwf	___ftadd@f2+1
  5386  11CA  0866               	movf	___ftsub@f2+2,w
  5387  11CB  00DC               	movwf	___ftadd@f2+2
  5388  11CC  120A  158A  2053   	fcall	___ftadd
  5389  11CF  1283               	bcf	3,5	;RP0=0, select bank0
  5390  11D0  1303               	bcf	3,6	;RP1=0, select bank0
  5391  11D1  0857               	movf	?___ftadd,w
  5392  11D2  00E4               	movwf	?___ftsub
  5393  11D3  0858               	movf	?___ftadd+1,w
  5394  11D4  00E5               	movwf	?___ftsub+1
  5395  11D5  0859               	movf	?___ftadd+2,w
  5396  11D6  00E6               	movwf	?___ftsub+2
  5397  11D7  0008               	return
  5398  11D8                     __end_of___ftsub:	
  5399                           
  5400                           	psect	text18
  5401  12FA                     __ptext18:	
  5402 ;; *************** function ___ftge *****************
  5403 ;; Defined at:
  5404 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  ff1             3    0[COMMON] float 
  5407 ;;  ff2             3    3[COMMON] float 
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;		None
  5410 ;; Return value:  Size  Location     Type
  5411 ;;		None               void
  5412 ;; Registers used:
  5413 ;;		wreg, status,2, status,0
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5419 ;;      Params:         6       0       0       0       0
  5420 ;;      Locals:         0       0       0       0       0
  5421 ;;      Temps:          6       0       0       0       0
  5422 ;;      Totals:        12       0       0       0       0
  5423 ;;Total ram usage:       12 bytes
  5424 ;; Hardware stack levels used:    1
  5425 ;; This function calls:
  5426 ;;		Nothing
  5427 ;; This function is called by:
  5428 ;;		_printf
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           
  5433                           ;psect for function ___ftge
  5434  12FA                     ___ftge:	
  5435                           
  5436                           ;incstack = 0
  5437                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5438  12FA  1FF2               	btfss	___ftge@ff1+2,7
  5439  12FB  2B21               	goto	l2263
  5440  12FC  3000               	movlw	0
  5441  12FD  00F6               	movwf	??___ftge
  5442  12FE  3000               	movlw	0
  5443  12FF  00F7               	movwf	??___ftge+1
  5444  1300  3080               	movlw	128
  5445  1301  00F8               	movwf	??___ftge+2
  5446  1302  0970               	comf	___ftge@ff1,w
  5447  1303  00F9               	movwf	??___ftge+3
  5448  1304  0971               	comf	___ftge@ff1+1,w
  5449  1305  00FA               	movwf	??___ftge+4
  5450  1306  0972               	comf	___ftge@ff1+2,w
  5451  1307  00FB               	movwf	??___ftge+5
  5452  1308  0AF9               	incf	??___ftge+3,f
  5453  1309  1903               	skipnz
  5454  130A  0AFA               	incf	??___ftge+4,f
  5455  130B  1903               	skipnz
  5456  130C  0AFB               	incf	??___ftge+5,f
  5457  130D  0879               	movf	??___ftge+3,w
  5458  130E  07F6               	addwf	??___ftge,f
  5459  130F  087A               	movf	??___ftge+4,w
  5460  1310  1803               	skipnc
  5461  1311  0F7A               	incfsz	??___ftge+4,w
  5462  1312  2B14               	goto	u3291
  5463  1313  2B15               	goto	u3292
  5464  1314                     u3291:	
  5465  1314  07F7               	addwf	??___ftge+1,f
  5466  1315                     u3292:	
  5467  1315  087B               	movf	??___ftge+5,w
  5468  1316  1803               	skipnc
  5469  1317  0F7B               	incfsz	??___ftge+5,w
  5470  1318  2B1A               	goto	u3293
  5471  1319  2B1B               	goto	u3294
  5472  131A                     u3293:	
  5473  131A  07F8               	addwf	??___ftge+2,f
  5474  131B                     u3294:	
  5475  131B  0876               	movf	??___ftge,w
  5476  131C  00F0               	movwf	___ftge@ff1
  5477  131D  0877               	movf	??___ftge+1,w
  5478  131E  00F1               	movwf	___ftge@ff1+1
  5479  131F  0878               	movf	??___ftge+2,w
  5480  1320  00F2               	movwf	___ftge@ff1+2
  5481  1321                     l2263:	
  5482  1321  1FF5               	btfss	___ftge@ff2+2,7
  5483  1322  2B48               	goto	l2267
  5484  1323  3000               	movlw	0
  5485  1324  00F6               	movwf	??___ftge
  5486  1325  3000               	movlw	0
  5487  1326  00F7               	movwf	??___ftge+1
  5488  1327  3080               	movlw	128
  5489  1328  00F8               	movwf	??___ftge+2
  5490  1329  0973               	comf	___ftge@ff2,w
  5491  132A  00F9               	movwf	??___ftge+3
  5492  132B  0974               	comf	___ftge@ff2+1,w
  5493  132C  00FA               	movwf	??___ftge+4
  5494  132D  0975               	comf	___ftge@ff2+2,w
  5495  132E  00FB               	movwf	??___ftge+5
  5496  132F  0AF9               	incf	??___ftge+3,f
  5497  1330  1903               	skipnz
  5498  1331  0AFA               	incf	??___ftge+4,f
  5499  1332  1903               	skipnz
  5500  1333  0AFB               	incf	??___ftge+5,f
  5501  1334  0879               	movf	??___ftge+3,w
  5502  1335  07F6               	addwf	??___ftge,f
  5503  1336  087A               	movf	??___ftge+4,w
  5504  1337  1803               	skipnc
  5505  1338  0F7A               	incfsz	??___ftge+4,w
  5506  1339  2B3B               	goto	u3311
  5507  133A  2B3C               	goto	u3312
  5508  133B                     u3311:	
  5509  133B  07F7               	addwf	??___ftge+1,f
  5510  133C                     u3312:	
  5511  133C  087B               	movf	??___ftge+5,w
  5512  133D  1803               	skipnc
  5513  133E  0F7B               	incfsz	??___ftge+5,w
  5514  133F  2B41               	goto	u3313
  5515  1340  2B42               	goto	u3314
  5516  1341                     u3313:	
  5517  1341  07F8               	addwf	??___ftge+2,f
  5518  1342                     u3314:	
  5519  1342  0876               	movf	??___ftge,w
  5520  1343  00F3               	movwf	___ftge@ff2
  5521  1344  0877               	movf	??___ftge+1,w
  5522  1345  00F4               	movwf	___ftge@ff2+1
  5523  1346  0878               	movf	??___ftge+2,w
  5524  1347  00F5               	movwf	___ftge@ff2+2
  5525  1348                     l2267:	
  5526  1348  3080               	movlw	128
  5527  1349  06F2               	xorwf	___ftge@ff1+2,f
  5528  134A  3080               	movlw	128
  5529  134B  06F5               	xorwf	___ftge@ff2+2,f
  5530  134C  0875               	movf	___ftge@ff2+2,w
  5531  134D  0272               	subwf	___ftge@ff1+2,w
  5532  134E  1D03               	skipz
  5533  134F  0008               	return
  5534  1350  0874               	movf	___ftge@ff2+1,w
  5535  1351  0271               	subwf	___ftge@ff1+1,w
  5536  1352  1D03               	skipz
  5537  1353  0008               	return
  5538  1354  0873               	movf	___ftge@ff2,w
  5539  1355  0270               	subwf	___ftge@ff1,w
  5540  1356  0008               	return
  5541  1357                     __end_of___ftge:	
  5542                           
  5543                           	psect	text19
  5544  1671                     __ptext19:	
  5545 ;; *************** function _get_temp *****************
  5546 ;; Defined at:
  5547 ;;		line 58 in file "plati_temp.c"
  5548 ;; Parameters:    Size  Location     Type
  5549 ;;		None
  5550 ;; Auto vars:     Size  Location     Type
  5551 ;;  t               3   39[BANK1 ] float 
  5552 ;;  T               3   36[BANK1 ] float 
  5553 ;;  i               2   42[BANK1 ] int 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  3   71[BANK0 ] int 
  5556 ;; Registers used:
  5557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5563 ;;      Params:         0       3       0       0       0
  5564 ;;      Locals:         0       0      11       0       0
  5565 ;;      Temps:          0       0       0       0       0
  5566 ;;      Totals:         0       3      11       0       0
  5567 ;;Total ram usage:       14 bytes
  5568 ;; Hardware stack levels used:    1
  5569 ;; Hardware stack levels required when called:    4
  5570 ;; This function calls:
  5571 ;;		___ftadd
  5572 ;;		___ftdiv
  5573 ;;		_get_pt
  5574 ;; This function is called by:
  5575 ;;		_main
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           
  5580                           ;psect for function _get_temp
  5581  1671                     _get_temp:	
  5582                           
  5583                           ;plati_temp.c: 60: double T=0.0;
  5584                           
  5585                           ;incstack = 0
  5586                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5587  1671  3000               	movlw	0
  5588  1672  1683               	bsf	3,5	;RP0=1, select bank1
  5589  1673  1303               	bcf	3,6	;RP1=0, select bank1
  5590  1674  00C4               	movwf	get_temp@T^(0+128)
  5591  1675  3000               	movlw	0
  5592  1676  00C5               	movwf	(get_temp@T+1)^(0+128)
  5593  1677  3000               	movlw	0
  5594  1678  00C6               	movwf	(get_temp@T+2)^(0+128)
  5595                           
  5596                           ;plati_temp.c: 61: double t=0.0;
  5597  1679  3000               	movlw	0
  5598  167A  00C7               	movwf	get_temp@t^(0+128)
  5599  167B  3000               	movlw	0
  5600  167C  00C8               	movwf	(get_temp@t+1)^(0+128)
  5601  167D  3000               	movlw	0
  5602  167E  00C9               	movwf	(get_temp@t+2)^(0+128)
  5603                           
  5604                           ;plati_temp.c: 62: int i;
  5605                           ;plati_temp.c: 65: for(i=0; i<=300; i++){
  5606  167F  01CA               	clrf	get_temp@i^(0+128)
  5607  1680  01CB               	clrf	(get_temp@i+1)^(0+128)
  5608  1681  084B               	movf	(get_temp@i+1)^(0+128),w
  5609  1682  3A80               	xorlw	128
  5610  1683  00FF               	movwf	127
  5611  1684  3081               	movlw	129
  5612  1685  027F               	subwf	127,w
  5613  1686  1D03               	skipz
  5614  1687  2E8A               	goto	u3965
  5615  1688  302D               	movlw	45
  5616  1689  024A               	subwf	get_temp@i^(0+128),w
  5617  168A                     u3965:	
  5618  168A  1803               	btfsc	3,0
  5619  168B  2EED               	goto	l2577
  5620  168C                     l2569:	
  5621                           
  5622                           ;plati_temp.c: 66: t += get_pt();
  5623  168C  120A  158A  2529  160A  118A  	fcall	_get_pt
  5624  1691  1283               	bcf	3,5	;RP0=0, select bank0
  5625  1692  1303               	bcf	3,6	;RP1=0, select bank0
  5626  1693  0864               	movf	?_get_pt,w
  5627  1694  1683               	bsf	3,5	;RP0=1, select bank1
  5628  1695  1303               	bcf	3,6	;RP1=0, select bank1
  5629  1696  00C1               	movwf	_get_temp$716^(0+128)
  5630  1697  1283               	bcf	3,5	;RP0=0, select bank0
  5631  1698  1303               	bcf	3,6	;RP1=0, select bank0
  5632  1699  0865               	movf	?_get_pt+1,w
  5633  169A  1683               	bsf	3,5	;RP0=1, select bank1
  5634  169B  1303               	bcf	3,6	;RP1=0, select bank1
  5635  169C  00C2               	movwf	(_get_temp$716+1)^(0+128)
  5636  169D  1283               	bcf	3,5	;RP0=0, select bank0
  5637  169E  1303               	bcf	3,6	;RP1=0, select bank0
  5638  169F  0866               	movf	?_get_pt+2,w
  5639  16A0  1683               	bsf	3,5	;RP0=1, select bank1
  5640  16A1  1303               	bcf	3,6	;RP1=0, select bank1
  5641  16A2  00C3               	movwf	(_get_temp$716+2)^(0+128)
  5642                           
  5643                           ;plati_temp.c: 66: t += get_pt();
  5644  16A3  0841               	movf	_get_temp$716^(0+128),w
  5645  16A4  1283               	bcf	3,5	;RP0=0, select bank0
  5646  16A5  1303               	bcf	3,6	;RP1=0, select bank0
  5647  16A6  00D7               	movwf	___ftadd@f1
  5648  16A7  1683               	bsf	3,5	;RP0=1, select bank1
  5649  16A8  1303               	bcf	3,6	;RP1=0, select bank1
  5650  16A9  0842               	movf	(_get_temp$716+1)^(0+128),w
  5651  16AA  1283               	bcf	3,5	;RP0=0, select bank0
  5652  16AB  1303               	bcf	3,6	;RP1=0, select bank0
  5653  16AC  00D8               	movwf	___ftadd@f1+1
  5654  16AD  1683               	bsf	3,5	;RP0=1, select bank1
  5655  16AE  1303               	bcf	3,6	;RP1=0, select bank1
  5656  16AF  0843               	movf	(_get_temp$716+2)^(0+128),w
  5657  16B0  1283               	bcf	3,5	;RP0=0, select bank0
  5658  16B1  1303               	bcf	3,6	;RP1=0, select bank0
  5659  16B2  00D9               	movwf	___ftadd@f1+2
  5660  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  5661  16B4  1303               	bcf	3,6	;RP1=0, select bank1
  5662  16B5  0847               	movf	get_temp@t^(0+128),w
  5663  16B6  1283               	bcf	3,5	;RP0=0, select bank0
  5664  16B7  1303               	bcf	3,6	;RP1=0, select bank0
  5665  16B8  00DA               	movwf	___ftadd@f2
  5666  16B9  1683               	bsf	3,5	;RP0=1, select bank1
  5667  16BA  1303               	bcf	3,6	;RP1=0, select bank1
  5668  16BB  0848               	movf	(get_temp@t+1)^(0+128),w
  5669  16BC  1283               	bcf	3,5	;RP0=0, select bank0
  5670  16BD  1303               	bcf	3,6	;RP1=0, select bank0
  5671  16BE  00DB               	movwf	___ftadd@f2+1
  5672  16BF  1683               	bsf	3,5	;RP0=1, select bank1
  5673  16C0  1303               	bcf	3,6	;RP1=0, select bank1
  5674  16C1  0849               	movf	(get_temp@t+2)^(0+128),w
  5675  16C2  1283               	bcf	3,5	;RP0=0, select bank0
  5676  16C3  1303               	bcf	3,6	;RP1=0, select bank0
  5677  16C4  00DC               	movwf	___ftadd@f2+2
  5678  16C5  120A  158A  2053  160A  118A  	fcall	___ftadd
  5679  16CA  1283               	bcf	3,5	;RP0=0, select bank0
  5680  16CB  1303               	bcf	3,6	;RP1=0, select bank0
  5681  16CC  0857               	movf	?___ftadd,w
  5682  16CD  1683               	bsf	3,5	;RP0=1, select bank1
  5683  16CE  1303               	bcf	3,6	;RP1=0, select bank1
  5684  16CF  00C7               	movwf	get_temp@t^(0+128)
  5685  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  5686  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  5687  16D2  0858               	movf	?___ftadd+1,w
  5688  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  5689  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  5690  16D5  00C8               	movwf	(get_temp@t+1)^(0+128)
  5691  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  5692  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  5693  16D8  0859               	movf	?___ftadd+2,w
  5694  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  5695  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  5696  16DB  00C9               	movwf	(get_temp@t+2)^(0+128)
  5697  16DC  3001               	movlw	1
  5698  16DD  07CA               	addwf	get_temp@i^(0+128),f
  5699  16DE  1803               	skipnc
  5700  16DF  0ACB               	incf	(get_temp@i+1)^(0+128),f
  5701  16E0  3000               	movlw	0
  5702  16E1  07CB               	addwf	(get_temp@i+1)^(0+128),f
  5703  16E2  084B               	movf	(get_temp@i+1)^(0+128),w
  5704  16E3  3A80               	xorlw	128
  5705  16E4  00FF               	movwf	127
  5706  16E5  3081               	movlw	129
  5707  16E6  027F               	subwf	127,w
  5708  16E7  1D03               	skipz
  5709  16E8  2EEB               	goto	u3975
  5710  16E9  302D               	movlw	45
  5711  16EA  024A               	subwf	get_temp@i^(0+128),w
  5712  16EB                     u3975:	
  5713  16EB  1C03               	skipc
  5714  16EC  2E8C               	goto	l2569
  5715  16ED                     l2577:	
  5716                           
  5717                           ;plati_temp.c: 67: }
  5718                           ;plati_temp.c: 68: T = t/300.0;
  5719  16ED  3000               	movlw	0
  5720  16EE  1283               	bcf	3,5	;RP0=0, select bank0
  5721  16EF  1303               	bcf	3,6	;RP1=0, select bank0
  5722  16F0  00A0               	movwf	___ftdiv@f2
  5723  16F1  3096               	movlw	150
  5724  16F2  00A1               	movwf	___ftdiv@f2+1
  5725  16F3  3043               	movlw	67
  5726  16F4  00A2               	movwf	___ftdiv@f2+2
  5727  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  5728  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  5729  16F7  0847               	movf	get_temp@t^(0+128),w
  5730  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  5731  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  5732  16FA  00A3               	movwf	___ftdiv@f1
  5733  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  5734  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  5735  16FD  0848               	movf	(get_temp@t+1)^(0+128),w
  5736  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  5737  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  5738  1700  00A4               	movwf	___ftdiv@f1+1
  5739  1701  1683               	bsf	3,5	;RP0=1, select bank1
  5740  1702  1303               	bcf	3,6	;RP1=0, select bank1
  5741  1703  0849               	movf	(get_temp@t+2)^(0+128),w
  5742  1704  1283               	bcf	3,5	;RP0=0, select bank0
  5743  1705  1303               	bcf	3,6	;RP1=0, select bank0
  5744  1706  00A5               	movwf	___ftdiv@f1+2
  5745  1707  160A  118A  25B9   	fcall	___ftdiv
  5746  170A  1283               	bcf	3,5	;RP0=0, select bank0
  5747  170B  1303               	bcf	3,6	;RP1=0, select bank0
  5748  170C  0820               	movf	?___ftdiv,w
  5749  170D  1683               	bsf	3,5	;RP0=1, select bank1
  5750  170E  1303               	bcf	3,6	;RP1=0, select bank1
  5751  170F  00C4               	movwf	get_temp@T^(0+128)
  5752  1710  1283               	bcf	3,5	;RP0=0, select bank0
  5753  1711  1303               	bcf	3,6	;RP1=0, select bank0
  5754  1712  0821               	movf	?___ftdiv+1,w
  5755  1713  1683               	bsf	3,5	;RP0=1, select bank1
  5756  1714  1303               	bcf	3,6	;RP1=0, select bank1
  5757  1715  00C5               	movwf	(get_temp@T+1)^(0+128)
  5758  1716  1283               	bcf	3,5	;RP0=0, select bank0
  5759  1717  1303               	bcf	3,6	;RP1=0, select bank0
  5760  1718  0822               	movf	?___ftdiv+2,w
  5761  1719  1683               	bsf	3,5	;RP0=1, select bank1
  5762  171A  1303               	bcf	3,6	;RP1=0, select bank1
  5763  171B  00C6               	movwf	(get_temp@T+2)^(0+128)
  5764                           
  5765                           ;plati_temp.c: 70: return T;
  5766  171C  0844               	movf	get_temp@T^(0+128),w
  5767  171D  1283               	bcf	3,5	;RP0=0, select bank0
  5768  171E  1303               	bcf	3,6	;RP1=0, select bank0
  5769  171F  00E7               	movwf	?_get_temp
  5770  1720  1683               	bsf	3,5	;RP0=1, select bank1
  5771  1721  1303               	bcf	3,6	;RP1=0, select bank1
  5772  1722  0845               	movf	(get_temp@T+1)^(0+128),w
  5773  1723  1283               	bcf	3,5	;RP0=0, select bank0
  5774  1724  1303               	bcf	3,6	;RP1=0, select bank0
  5775  1725  00E8               	movwf	?_get_temp+1
  5776  1726  1683               	bsf	3,5	;RP0=1, select bank1
  5777  1727  1303               	bcf	3,6	;RP1=0, select bank1
  5778  1728  0846               	movf	(get_temp@T+2)^(0+128),w
  5779  1729  1283               	bcf	3,5	;RP0=0, select bank0
  5780  172A  1303               	bcf	3,6	;RP1=0, select bank0
  5781  172B  00E9               	movwf	?_get_temp+2
  5782  172C  0008               	return
  5783  172D                     __end_of_get_temp:	
  5784                           
  5785                           	psect	text20
  5786  0D29                     __ptext20:	
  5787 ;; *************** function _get_pt *****************
  5788 ;; Defined at:
  5789 ;;		line 32 in file "plati_temp.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;		None
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;  a               3   30[BANK1 ] int 
  5794 ;;  T1              3   27[BANK1 ] int 
  5795 ;;  R1              3   21[BANK1 ] int 
  5796 ;;  b               3    6[BANK1 ] int 
  5797 ;;  T2              3    3[BANK1 ] int 
  5798 ;;  R2              3    0[BANK1 ] int 
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  3   68[BANK0 ] int 
  5801 ;; Registers used:
  5802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5808 ;;      Params:         0       3       0       0       0
  5809 ;;      Locals:         0       0      33       0       0
  5810 ;;      Temps:          0       0       0       0       0
  5811 ;;      Totals:         0       3      33       0       0
  5812 ;;Total ram usage:       36 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; Hardware stack levels required when called:    3
  5815 ;; This function calls:
  5816 ;;		___ftadd
  5817 ;;		___ftdiv
  5818 ;;		___ftmul
  5819 ;;		___ftneg
  5820 ;;		_get_adcon
  5821 ;; This function is called by:
  5822 ;;		_get_temp
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           
  5827                           ;psect for function _get_pt
  5828  0D29                     _get_pt:	
  5829                           
  5830                           ;plati_temp.c: 34: double R1, R2, T1, T2;
  5831                           ;plati_temp.c: 35: double a = 0.0039083;
  5832                           
  5833                           ;incstack = 0
  5834                           ; Regs used in _get_pt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5835  0D29  3011               	movlw	17
  5836  0D2A  1683               	bsf	3,5	;RP0=1, select bank1
  5837  0D2B  1303               	bcf	3,6	;RP1=0, select bank1
  5838  0D2C  00BE               	movwf	get_pt@a^(0+128)
  5839  0D2D  3080               	movlw	128
  5840  0D2E  00BF               	movwf	(get_pt@a+1)^(0+128)
  5841  0D2F  303B               	movlw	59
  5842  0D30  00C0               	movwf	(get_pt@a+2)^(0+128)
  5843                           
  5844                           ;plati_temp.c: 36: double b = -0.0000005775;
  5845  0D31  3005               	movlw	5
  5846  0D32  00A6               	movwf	get_pt@b^(0+128)
  5847  0D33  301B               	movlw	27
  5848  0D34  00A7               	movwf	(get_pt@b+1)^(0+128)
  5849  0D35  30B5               	movlw	181
  5850  0D36  00A8               	movwf	(get_pt@b+2)^(0+128)
  5851                           
  5852                           ;plati_temp.c: 39: R1 = (get_adcon()/(5.0-get_adcon()))*2400.0;
  5853  0D37  3000               	movlw	0
  5854  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  5855  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  5856  0D3A  00D7               	movwf	___ftadd@f1
  5857  0D3B  30A0               	movlw	160
  5858  0D3C  00D8               	movwf	___ftadd@f1+1
  5859  0D3D  3040               	movlw	64
  5860  0D3E  00D9               	movwf	___ftadd@f1+2
  5861  0D3F  160A  118A  24A3  120A  158A  	fcall	_get_adcon
  5862  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  5863  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  5864  0D46  0840               	movf	?_get_adcon,w
  5865  0D47  00D4               	movwf	___ftneg@f1
  5866  0D48  0841               	movf	?_get_adcon+1,w
  5867  0D49  00D5               	movwf	___ftneg@f1+1
  5868  0D4A  0842               	movf	?_get_adcon+2,w
  5869  0D4B  00D6               	movwf	___ftneg@f1+2
  5870  0D4C  160A  118A  2140  120A  158A  	fcall	___ftneg
  5871  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  5872  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  5873  0D53  0854               	movf	?___ftneg,w
  5874  0D54  00DA               	movwf	___ftadd@f2
  5875  0D55  0855               	movf	?___ftneg+1,w
  5876  0D56  00DB               	movwf	___ftadd@f2+1
  5877  0D57  0856               	movf	?___ftneg+2,w
  5878  0D58  00DC               	movwf	___ftadd@f2+2
  5879  0D59  120A  158A  2053  120A  158A  	fcall	___ftadd
  5880  0D5E  1283               	bcf	3,5	;RP0=0, select bank0
  5881  0D5F  1303               	bcf	3,6	;RP1=0, select bank0
  5882  0D60  0857               	movf	?___ftadd,w
  5883  0D61  1683               	bsf	3,5	;RP0=1, select bank1
  5884  0D62  1303               	bcf	3,6	;RP1=0, select bank1
  5885  0D63  00A9               	movwf	_get_pt$711^(0+128)
  5886  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  5887  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  5888  0D66  0858               	movf	?___ftadd+1,w
  5889  0D67  1683               	bsf	3,5	;RP0=1, select bank1
  5890  0D68  1303               	bcf	3,6	;RP1=0, select bank1
  5891  0D69  00AA               	movwf	(_get_pt$711+1)^(0+128)
  5892  0D6A  1283               	bcf	3,5	;RP0=0, select bank0
  5893  0D6B  1303               	bcf	3,6	;RP1=0, select bank0
  5894  0D6C  0859               	movf	?___ftadd+2,w
  5895  0D6D  1683               	bsf	3,5	;RP0=1, select bank1
  5896  0D6E  1303               	bcf	3,6	;RP1=0, select bank1
  5897  0D6F  00AB               	movwf	(_get_pt$711+2)^(0+128)
  5898                           
  5899                           ;plati_temp.c: 39: R1 = (get_adcon()/(5.0-get_adcon()))*2400.0;
  5900  0D70  160A  118A  24A3  120A  158A  	fcall	_get_adcon
  5901  0D75  1283               	bcf	3,5	;RP0=0, select bank0
  5902  0D76  1303               	bcf	3,6	;RP1=0, select bank0
  5903  0D77  0840               	movf	?_get_adcon,w
  5904  0D78  1683               	bsf	3,5	;RP0=1, select bank1
  5905  0D79  1303               	bcf	3,6	;RP1=0, select bank1
  5906  0D7A  00AC               	movwf	_get_pt$712^(0+128)
  5907  0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  5908  0D7C  1303               	bcf	3,6	;RP1=0, select bank0
  5909  0D7D  0841               	movf	?_get_adcon+1,w
  5910  0D7E  1683               	bsf	3,5	;RP0=1, select bank1
  5911  0D7F  1303               	bcf	3,6	;RP1=0, select bank1
  5912  0D80  00AD               	movwf	(_get_pt$712+1)^(0+128)
  5913  0D81  1283               	bcf	3,5	;RP0=0, select bank0
  5914  0D82  1303               	bcf	3,6	;RP1=0, select bank0
  5915  0D83  0842               	movf	?_get_adcon+2,w
  5916  0D84  1683               	bsf	3,5	;RP0=1, select bank1
  5917  0D85  1303               	bcf	3,6	;RP1=0, select bank1
  5918  0D86  00AE               	movwf	(_get_pt$712+2)^(0+128)
  5919                           
  5920                           ;plati_temp.c: 39: R1 = (get_adcon()/(5.0-get_adcon()))*2400.0;
  5921  0D87  3000               	movlw	0
  5922  0D88  1283               	bcf	3,5	;RP0=0, select bank0
  5923  0D89  1303               	bcf	3,6	;RP1=0, select bank0
  5924  0D8A  00B0               	movwf	___ftmul@f1
  5925  0D8B  3016               	movlw	22
  5926  0D8C  00B1               	movwf	___ftmul@f1+1
  5927  0D8D  3045               	movlw	69
  5928  0D8E  00B2               	movwf	___ftmul@f1+2
  5929  0D8F  1683               	bsf	3,5	;RP0=1, select bank1
  5930  0D90  1303               	bcf	3,6	;RP1=0, select bank1
  5931  0D91  0829               	movf	_get_pt$711^(0+128),w
  5932  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  5933  0D93  1303               	bcf	3,6	;RP1=0, select bank0
  5934  0D94  00A0               	movwf	___ftdiv@f2
  5935  0D95  1683               	bsf	3,5	;RP0=1, select bank1
  5936  0D96  1303               	bcf	3,6	;RP1=0, select bank1
  5937  0D97  082A               	movf	(_get_pt$711+1)^(0+128),w
  5938  0D98  1283               	bcf	3,5	;RP0=0, select bank0
  5939  0D99  1303               	bcf	3,6	;RP1=0, select bank0
  5940  0D9A  00A1               	movwf	___ftdiv@f2+1
  5941  0D9B  1683               	bsf	3,5	;RP0=1, select bank1
  5942  0D9C  1303               	bcf	3,6	;RP1=0, select bank1
  5943  0D9D  082B               	movf	(_get_pt$711+2)^(0+128),w
  5944  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  5945  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  5946  0DA0  00A2               	movwf	___ftdiv@f2+2
  5947  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  5948  0DA2  1303               	bcf	3,6	;RP1=0, select bank1
  5949  0DA3  082C               	movf	_get_pt$712^(0+128),w
  5950  0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  5951  0DA5  1303               	bcf	3,6	;RP1=0, select bank0
  5952  0DA6  00A3               	movwf	___ftdiv@f1
  5953  0DA7  1683               	bsf	3,5	;RP0=1, select bank1
  5954  0DA8  1303               	bcf	3,6	;RP1=0, select bank1
  5955  0DA9  082D               	movf	(_get_pt$712+1)^(0+128),w
  5956  0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  5957  0DAB  1303               	bcf	3,6	;RP1=0, select bank0
  5958  0DAC  00A4               	movwf	___ftdiv@f1+1
  5959  0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  5960  0DAE  1303               	bcf	3,6	;RP1=0, select bank1
  5961  0DAF  082E               	movf	(_get_pt$712+2)^(0+128),w
  5962  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  5963  0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  5964  0DB2  00A5               	movwf	___ftdiv@f1+2
  5965  0DB3  160A  118A  25B9  120A  158A  	fcall	___ftdiv
  5966  0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  5967  0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  5968  0DBA  0820               	movf	?___ftdiv,w
  5969  0DBB  00B3               	movwf	___ftmul@f2
  5970  0DBC  0821               	movf	?___ftdiv+1,w
  5971  0DBD  00B4               	movwf	___ftmul@f2+1
  5972  0DBE  0822               	movf	?___ftdiv+2,w
  5973  0DBF  00B5               	movwf	___ftmul@f2+2
  5974  0DC0  160A  118A  272D  120A  158A  	fcall	___ftmul
  5975  0DC5  1283               	bcf	3,5	;RP0=0, select bank0
  5976  0DC6  1303               	bcf	3,6	;RP1=0, select bank0
  5977  0DC7  0830               	movf	?___ftmul,w
  5978  0DC8  1683               	bsf	3,5	;RP0=1, select bank1
  5979  0DC9  1303               	bcf	3,6	;RP1=0, select bank1
  5980  0DCA  00B5               	movwf	get_pt@R1^(0+128)
  5981  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  5982  0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  5983  0DCD  0831               	movf	?___ftmul+1,w
  5984  0DCE  1683               	bsf	3,5	;RP0=1, select bank1
  5985  0DCF  1303               	bcf	3,6	;RP1=0, select bank1
  5986  0DD0  00B6               	movwf	(get_pt@R1+1)^(0+128)
  5987  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  5988  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  5989  0DD3  0832               	movf	?___ftmul+2,w
  5990  0DD4  1683               	bsf	3,5	;RP0=1, select bank1
  5991  0DD5  1303               	bcf	3,6	;RP1=0, select bank1
  5992  0DD6  00B7               	movwf	(get_pt@R1+2)^(0+128)
  5993                           
  5994                           ;plati_temp.c: 40: T1 = (R1/100.0-1.0)/a;
  5995  0DD7  3000               	movlw	0
  5996  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  5997  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  5998  0DDA  00D7               	movwf	___ftadd@f1
  5999  0DDB  3080               	movlw	128
  6000  0DDC  00D8               	movwf	___ftadd@f1+1
  6001  0DDD  30BF               	movlw	191
  6002  0DDE  00D9               	movwf	___ftadd@f1+2
  6003  0DDF  3000               	movlw	0
  6004  0DE0  00A0               	movwf	___ftdiv@f2
  6005  0DE1  30C8               	movlw	200
  6006  0DE2  00A1               	movwf	___ftdiv@f2+1
  6007  0DE3  3042               	movlw	66
  6008  0DE4  00A2               	movwf	___ftdiv@f2+2
  6009  0DE5  1683               	bsf	3,5	;RP0=1, select bank1
  6010  0DE6  1303               	bcf	3,6	;RP1=0, select bank1
  6011  0DE7  0835               	movf	get_pt@R1^(0+128),w
  6012  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  6013  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  6014  0DEA  00A3               	movwf	___ftdiv@f1
  6015  0DEB  1683               	bsf	3,5	;RP0=1, select bank1
  6016  0DEC  1303               	bcf	3,6	;RP1=0, select bank1
  6017  0DED  0836               	movf	(get_pt@R1+1)^(0+128),w
  6018  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  6019  0DEF  1303               	bcf	3,6	;RP1=0, select bank0
  6020  0DF0  00A4               	movwf	___ftdiv@f1+1
  6021  0DF1  1683               	bsf	3,5	;RP0=1, select bank1
  6022  0DF2  1303               	bcf	3,6	;RP1=0, select bank1
  6023  0DF3  0837               	movf	(get_pt@R1+2)^(0+128),w
  6024  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  6025  0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  6026  0DF6  00A5               	movwf	___ftdiv@f1+2
  6027  0DF7  160A  118A  25B9  120A  158A  	fcall	___ftdiv
  6028  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  6029  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  6030  0DFE  0820               	movf	?___ftdiv,w
  6031  0DFF  00DA               	movwf	___ftadd@f2
  6032  0E00  0821               	movf	?___ftdiv+1,w
  6033  0E01  00DB               	movwf	___ftadd@f2+1
  6034  0E02  0822               	movf	?___ftdiv+2,w
  6035  0E03  00DC               	movwf	___ftadd@f2+2
  6036  0E04  120A  158A  2053  120A  158A  	fcall	___ftadd
  6037  0E09  1283               	bcf	3,5	;RP0=0, select bank0
  6038  0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  6039  0E0B  0857               	movf	?___ftadd,w
  6040  0E0C  1683               	bsf	3,5	;RP0=1, select bank1
  6041  0E0D  1303               	bcf	3,6	;RP1=0, select bank1
  6042  0E0E  00B8               	movwf	_get_pt$713^(0+128)
  6043  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  6044  0E10  1303               	bcf	3,6	;RP1=0, select bank0
  6045  0E11  0858               	movf	?___ftadd+1,w
  6046  0E12  1683               	bsf	3,5	;RP0=1, select bank1
  6047  0E13  1303               	bcf	3,6	;RP1=0, select bank1
  6048  0E14  00B9               	movwf	(_get_pt$713+1)^(0+128)
  6049  0E15  1283               	bcf	3,5	;RP0=0, select bank0
  6050  0E16  1303               	bcf	3,6	;RP1=0, select bank0
  6051  0E17  0859               	movf	?___ftadd+2,w
  6052  0E18  1683               	bsf	3,5	;RP0=1, select bank1
  6053  0E19  1303               	bcf	3,6	;RP1=0, select bank1
  6054  0E1A  00BA               	movwf	(_get_pt$713+2)^(0+128)
  6055                           
  6056                           ;plati_temp.c: 40: T1 = (R1/100.0-1.0)/a;
  6057  0E1B  083E               	movf	get_pt@a^(0+128),w
  6058  0E1C  1283               	bcf	3,5	;RP0=0, select bank0
  6059  0E1D  1303               	bcf	3,6	;RP1=0, select bank0
  6060  0E1E  00A0               	movwf	___ftdiv@f2
  6061  0E1F  1683               	bsf	3,5	;RP0=1, select bank1
  6062  0E20  1303               	bcf	3,6	;RP1=0, select bank1
  6063  0E21  083F               	movf	(get_pt@a+1)^(0+128),w
  6064  0E22  1283               	bcf	3,5	;RP0=0, select bank0
  6065  0E23  1303               	bcf	3,6	;RP1=0, select bank0
  6066  0E24  00A1               	movwf	___ftdiv@f2+1
  6067  0E25  1683               	bsf	3,5	;RP0=1, select bank1
  6068  0E26  1303               	bcf	3,6	;RP1=0, select bank1
  6069  0E27  0840               	movf	(get_pt@a+2)^(0+128),w
  6070  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  6071  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  6072  0E2A  00A2               	movwf	___ftdiv@f2+2
  6073  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  6074  0E2C  1303               	bcf	3,6	;RP1=0, select bank1
  6075  0E2D  0838               	movf	_get_pt$713^(0+128),w
  6076  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  6077  0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  6078  0E30  00A3               	movwf	___ftdiv@f1
  6079  0E31  1683               	bsf	3,5	;RP0=1, select bank1
  6080  0E32  1303               	bcf	3,6	;RP1=0, select bank1
  6081  0E33  0839               	movf	(_get_pt$713+1)^(0+128),w
  6082  0E34  1283               	bcf	3,5	;RP0=0, select bank0
  6083  0E35  1303               	bcf	3,6	;RP1=0, select bank0
  6084  0E36  00A4               	movwf	___ftdiv@f1+1
  6085  0E37  1683               	bsf	3,5	;RP0=1, select bank1
  6086  0E38  1303               	bcf	3,6	;RP1=0, select bank1
  6087  0E39  083A               	movf	(_get_pt$713+2)^(0+128),w
  6088  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  6089  0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  6090  0E3C  00A5               	movwf	___ftdiv@f1+2
  6091  0E3D  160A  118A  25B9  120A  158A  	fcall	___ftdiv
  6092  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  6093  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  6094  0E44  0820               	movf	?___ftdiv,w
  6095  0E45  1683               	bsf	3,5	;RP0=1, select bank1
  6096  0E46  1303               	bcf	3,6	;RP1=0, select bank1
  6097  0E47  00BB               	movwf	get_pt@T1^(0+128)
  6098  0E48  1283               	bcf	3,5	;RP0=0, select bank0
  6099  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  6100  0E4A  0821               	movf	?___ftdiv+1,w
  6101  0E4B  1683               	bsf	3,5	;RP0=1, select bank1
  6102  0E4C  1303               	bcf	3,6	;RP1=0, select bank1
  6103  0E4D  00BC               	movwf	(get_pt@T1+1)^(0+128)
  6104  0E4E  1283               	bcf	3,5	;RP0=0, select bank0
  6105  0E4F  1303               	bcf	3,6	;RP1=0, select bank0
  6106  0E50  0822               	movf	?___ftdiv+2,w
  6107  0E51  1683               	bsf	3,5	;RP0=1, select bank1
  6108  0E52  1303               	bcf	3,6	;RP1=0, select bank1
  6109  0E53  00BD               	movwf	(get_pt@T1+2)^(0+128)
  6110                           
  6111                           ;plati_temp.c: 41: R2 = ((T1*b+a)*T1+1.0)*100.0;
  6112  0E54  083E               	movf	get_pt@a^(0+128),w
  6113  0E55  1283               	bcf	3,5	;RP0=0, select bank0
  6114  0E56  1303               	bcf	3,6	;RP1=0, select bank0
  6115  0E57  00D7               	movwf	___ftadd@f1
  6116  0E58  1683               	bsf	3,5	;RP0=1, select bank1
  6117  0E59  1303               	bcf	3,6	;RP1=0, select bank1
  6118  0E5A  083F               	movf	(get_pt@a+1)^(0+128),w
  6119  0E5B  1283               	bcf	3,5	;RP0=0, select bank0
  6120  0E5C  1303               	bcf	3,6	;RP1=0, select bank0
  6121  0E5D  00D8               	movwf	___ftadd@f1+1
  6122  0E5E  1683               	bsf	3,5	;RP0=1, select bank1
  6123  0E5F  1303               	bcf	3,6	;RP1=0, select bank1
  6124  0E60  0840               	movf	(get_pt@a+2)^(0+128),w
  6125  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  6126  0E62  1303               	bcf	3,6	;RP1=0, select bank0
  6127  0E63  00D9               	movwf	___ftadd@f1+2
  6128  0E64  1683               	bsf	3,5	;RP0=1, select bank1
  6129  0E65  1303               	bcf	3,6	;RP1=0, select bank1
  6130  0E66  0826               	movf	get_pt@b^(0+128),w
  6131  0E67  1283               	bcf	3,5	;RP0=0, select bank0
  6132  0E68  1303               	bcf	3,6	;RP1=0, select bank0
  6133  0E69  00B0               	movwf	___ftmul@f1
  6134  0E6A  1683               	bsf	3,5	;RP0=1, select bank1
  6135  0E6B  1303               	bcf	3,6	;RP1=0, select bank1
  6136  0E6C  0827               	movf	(get_pt@b+1)^(0+128),w
  6137  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  6138  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  6139  0E6F  00B1               	movwf	___ftmul@f1+1
  6140  0E70  1683               	bsf	3,5	;RP0=1, select bank1
  6141  0E71  1303               	bcf	3,6	;RP1=0, select bank1
  6142  0E72  0828               	movf	(get_pt@b+2)^(0+128),w
  6143  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  6144  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  6145  0E75  00B2               	movwf	___ftmul@f1+2
  6146  0E76  1683               	bsf	3,5	;RP0=1, select bank1
  6147  0E77  1303               	bcf	3,6	;RP1=0, select bank1
  6148  0E78  083B               	movf	get_pt@T1^(0+128),w
  6149  0E79  1283               	bcf	3,5	;RP0=0, select bank0
  6150  0E7A  1303               	bcf	3,6	;RP1=0, select bank0
  6151  0E7B  00B3               	movwf	___ftmul@f2
  6152  0E7C  1683               	bsf	3,5	;RP0=1, select bank1
  6153  0E7D  1303               	bcf	3,6	;RP1=0, select bank1
  6154  0E7E  083C               	movf	(get_pt@T1+1)^(0+128),w
  6155  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  6156  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  6157  0E81  00B4               	movwf	___ftmul@f2+1
  6158  0E82  1683               	bsf	3,5	;RP0=1, select bank1
  6159  0E83  1303               	bcf	3,6	;RP1=0, select bank1
  6160  0E84  083D               	movf	(get_pt@T1+2)^(0+128),w
  6161  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  6162  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  6163  0E87  00B5               	movwf	___ftmul@f2+2
  6164  0E88  160A  118A  272D  120A  158A  	fcall	___ftmul
  6165  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  6166  0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  6167  0E8F  0830               	movf	?___ftmul,w
  6168  0E90  00DA               	movwf	___ftadd@f2
  6169  0E91  0831               	movf	?___ftmul+1,w
  6170  0E92  00DB               	movwf	___ftadd@f2+1
  6171  0E93  0832               	movf	?___ftmul+2,w
  6172  0E94  00DC               	movwf	___ftadd@f2+2
  6173  0E95  120A  158A  2053  120A  158A  	fcall	___ftadd
  6174  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  6175  0E9B  1303               	bcf	3,6	;RP1=0, select bank0
  6176  0E9C  0857               	movf	?___ftadd,w
  6177  0E9D  1683               	bsf	3,5	;RP0=1, select bank1
  6178  0E9E  1303               	bcf	3,6	;RP1=0, select bank1
  6179  0E9F  00AF               	movwf	_get_pt$714^(0+128)
  6180  0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  6181  0EA1  1303               	bcf	3,6	;RP1=0, select bank0
  6182  0EA2  0858               	movf	?___ftadd+1,w
  6183  0EA3  1683               	bsf	3,5	;RP0=1, select bank1
  6184  0EA4  1303               	bcf	3,6	;RP1=0, select bank1
  6185  0EA5  00B0               	movwf	(_get_pt$714+1)^(0+128)
  6186  0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  6187  0EA7  1303               	bcf	3,6	;RP1=0, select bank0
  6188  0EA8  0859               	movf	?___ftadd+2,w
  6189  0EA9  1683               	bsf	3,5	;RP0=1, select bank1
  6190  0EAA  1303               	bcf	3,6	;RP1=0, select bank1
  6191  0EAB  00B1               	movwf	(_get_pt$714+2)^(0+128)
  6192                           
  6193                           ;plati_temp.c: 41: R2 = ((T1*b+a)*T1+1.0)*100.0;
  6194  0EAC  3000               	movlw	0
  6195  0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  6196  0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  6197  0EAF  00D7               	movwf	___ftadd@f1
  6198  0EB0  3080               	movlw	128
  6199  0EB1  00D8               	movwf	___ftadd@f1+1
  6200  0EB2  303F               	movlw	63
  6201  0EB3  00D9               	movwf	___ftadd@f1+2
  6202  0EB4  1683               	bsf	3,5	;RP0=1, select bank1
  6203  0EB5  1303               	bcf	3,6	;RP1=0, select bank1
  6204  0EB6  083B               	movf	get_pt@T1^(0+128),w
  6205  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  6206  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  6207  0EB9  00B0               	movwf	___ftmul@f1
  6208  0EBA  1683               	bsf	3,5	;RP0=1, select bank1
  6209  0EBB  1303               	bcf	3,6	;RP1=0, select bank1
  6210  0EBC  083C               	movf	(get_pt@T1+1)^(0+128),w
  6211  0EBD  1283               	bcf	3,5	;RP0=0, select bank0
  6212  0EBE  1303               	bcf	3,6	;RP1=0, select bank0
  6213  0EBF  00B1               	movwf	___ftmul@f1+1
  6214  0EC0  1683               	bsf	3,5	;RP0=1, select bank1
  6215  0EC1  1303               	bcf	3,6	;RP1=0, select bank1
  6216  0EC2  083D               	movf	(get_pt@T1+2)^(0+128),w
  6217  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  6218  0EC4  1303               	bcf	3,6	;RP1=0, select bank0
  6219  0EC5  00B2               	movwf	___ftmul@f1+2
  6220  0EC6  1683               	bsf	3,5	;RP0=1, select bank1
  6221  0EC7  1303               	bcf	3,6	;RP1=0, select bank1
  6222  0EC8  082F               	movf	_get_pt$714^(0+128),w
  6223  0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  6224  0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  6225  0ECB  00B3               	movwf	___ftmul@f2
  6226  0ECC  1683               	bsf	3,5	;RP0=1, select bank1
  6227  0ECD  1303               	bcf	3,6	;RP1=0, select bank1
  6228  0ECE  0830               	movf	(_get_pt$714+1)^(0+128),w
  6229  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  6230  0ED0  1303               	bcf	3,6	;RP1=0, select bank0
  6231  0ED1  00B4               	movwf	___ftmul@f2+1
  6232  0ED2  1683               	bsf	3,5	;RP0=1, select bank1
  6233  0ED3  1303               	bcf	3,6	;RP1=0, select bank1
  6234  0ED4  0831               	movf	(_get_pt$714+2)^(0+128),w
  6235  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  6236  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  6237  0ED7  00B5               	movwf	___ftmul@f2+2
  6238  0ED8  160A  118A  272D  120A  158A  	fcall	___ftmul
  6239  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  6240  0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  6241  0EDF  0830               	movf	?___ftmul,w
  6242  0EE0  00DA               	movwf	___ftadd@f2
  6243  0EE1  0831               	movf	?___ftmul+1,w
  6244  0EE2  00DB               	movwf	___ftadd@f2+1
  6245  0EE3  0832               	movf	?___ftmul+2,w
  6246  0EE4  00DC               	movwf	___ftadd@f2+2
  6247  0EE5  120A  158A  2053  120A  158A  	fcall	___ftadd
  6248  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  6249  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  6250  0EEC  0857               	movf	?___ftadd,w
  6251  0EED  1683               	bsf	3,5	;RP0=1, select bank1
  6252  0EEE  1303               	bcf	3,6	;RP1=0, select bank1
  6253  0EEF  00B2               	movwf	_get_pt$715^(0+128)
  6254  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  6255  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  6256  0EF2  0858               	movf	?___ftadd+1,w
  6257  0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  6258  0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  6259  0EF5  00B3               	movwf	(_get_pt$715+1)^(0+128)
  6260  0EF6  1283               	bcf	3,5	;RP0=0, select bank0
  6261  0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  6262  0EF8  0859               	movf	?___ftadd+2,w
  6263  0EF9  1683               	bsf	3,5	;RP0=1, select bank1
  6264  0EFA  1303               	bcf	3,6	;RP1=0, select bank1
  6265  0EFB  00B4               	movwf	(_get_pt$715+2)^(0+128)
  6266                           
  6267                           ;plati_temp.c: 41: R2 = ((T1*b+a)*T1+1.0)*100.0;
  6268  0EFC  3000               	movlw	0
  6269  0EFD  1283               	bcf	3,5	;RP0=0, select bank0
  6270  0EFE  1303               	bcf	3,6	;RP1=0, select bank0
  6271  0EFF  00B0               	movwf	___ftmul@f1
  6272  0F00  30C8               	movlw	200
  6273  0F01  00B1               	movwf	___ftmul@f1+1
  6274  0F02  3042               	movlw	66
  6275  0F03  00B2               	movwf	___ftmul@f1+2
  6276  0F04  1683               	bsf	3,5	;RP0=1, select bank1
  6277  0F05  1303               	bcf	3,6	;RP1=0, select bank1
  6278  0F06  0832               	movf	_get_pt$715^(0+128),w
  6279  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  6280  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  6281  0F09  00B3               	movwf	___ftmul@f2
  6282  0F0A  1683               	bsf	3,5	;RP0=1, select bank1
  6283  0F0B  1303               	bcf	3,6	;RP1=0, select bank1
  6284  0F0C  0833               	movf	(_get_pt$715+1)^(0+128),w
  6285  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  6286  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  6287  0F0F  00B4               	movwf	___ftmul@f2+1
  6288  0F10  1683               	bsf	3,5	;RP0=1, select bank1
  6289  0F11  1303               	bcf	3,6	;RP1=0, select bank1
  6290  0F12  0834               	movf	(_get_pt$715+2)^(0+128),w
  6291  0F13  1283               	bcf	3,5	;RP0=0, select bank0
  6292  0F14  1303               	bcf	3,6	;RP1=0, select bank0
  6293  0F15  00B5               	movwf	___ftmul@f2+2
  6294  0F16  160A  118A  272D  120A  158A  	fcall	___ftmul
  6295  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  6296  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  6297  0F1D  0830               	movf	?___ftmul,w
  6298  0F1E  1683               	bsf	3,5	;RP0=1, select bank1
  6299  0F1F  1303               	bcf	3,6	;RP1=0, select bank1
  6300  0F20  00A0               	movwf	get_pt@R2^(0+128)
  6301  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  6302  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  6303  0F23  0831               	movf	?___ftmul+1,w
  6304  0F24  1683               	bsf	3,5	;RP0=1, select bank1
  6305  0F25  1303               	bcf	3,6	;RP1=0, select bank1
  6306  0F26  00A1               	movwf	(get_pt@R2+1)^(0+128)
  6307  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  6308  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  6309  0F29  0832               	movf	?___ftmul+2,w
  6310  0F2A  1683               	bsf	3,5	;RP0=1, select bank1
  6311  0F2B  1303               	bcf	3,6	;RP1=0, select bank1
  6312  0F2C  00A2               	movwf	(get_pt@R2+2)^(0+128)
  6313                           
  6314                           ;plati_temp.c: 42: T2 = (R1/100.0-R2/100.0)/a+T1;
  6315  0F2D  0820               	movf	get_pt@R2^(0+128),w
  6316  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  6317  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  6318  0F30  00A3               	movwf	___ftdiv@f1
  6319  0F31  1683               	bsf	3,5	;RP0=1, select bank1
  6320  0F32  1303               	bcf	3,6	;RP1=0, select bank1
  6321  0F33  0821               	movf	(get_pt@R2+1)^(0+128),w
  6322  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  6323  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  6324  0F36  00A4               	movwf	___ftdiv@f1+1
  6325  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  6326  0F38  1303               	bcf	3,6	;RP1=0, select bank1
  6327  0F39  0822               	movf	(get_pt@R2+2)^(0+128),w
  6328  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  6329  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  6330  0F3C  00A5               	movwf	___ftdiv@f1+2
  6331  0F3D  3000               	movlw	0
  6332  0F3E  00A0               	movwf	___ftdiv@f2
  6333  0F3F  30C8               	movlw	200
  6334  0F40  00A1               	movwf	___ftdiv@f2+1
  6335  0F41  3042               	movlw	66
  6336  0F42  00A2               	movwf	___ftdiv@f2+2
  6337  0F43  160A  118A  25B9  120A  158A  	fcall	___ftdiv
  6338  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  6339  0F49  1303               	bcf	3,6	;RP1=0, select bank0
  6340  0F4A  0820               	movf	?___ftdiv,w
  6341  0F4B  00D4               	movwf	___ftneg@f1
  6342  0F4C  0821               	movf	?___ftdiv+1,w
  6343  0F4D  00D5               	movwf	___ftneg@f1+1
  6344  0F4E  0822               	movf	?___ftdiv+2,w
  6345  0F4F  00D6               	movwf	___ftneg@f1+2
  6346  0F50  160A  118A  2140  120A  158A  	fcall	___ftneg
  6347  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  6348  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  6349  0F57  0854               	movf	?___ftneg,w
  6350  0F58  00D7               	movwf	___ftadd@f1
  6351  0F59  0855               	movf	?___ftneg+1,w
  6352  0F5A  00D8               	movwf	___ftadd@f1+1
  6353  0F5B  0856               	movf	?___ftneg+2,w
  6354  0F5C  00D9               	movwf	___ftadd@f1+2
  6355  0F5D  3000               	movlw	0
  6356  0F5E  00A0               	movwf	___ftdiv@f2
  6357  0F5F  30C8               	movlw	200
  6358  0F60  00A1               	movwf	___ftdiv@f2+1
  6359  0F61  3042               	movlw	66
  6360  0F62  00A2               	movwf	___ftdiv@f2+2
  6361  0F63  1683               	bsf	3,5	;RP0=1, select bank1
  6362  0F64  1303               	bcf	3,6	;RP1=0, select bank1
  6363  0F65  0835               	movf	get_pt@R1^(0+128),w
  6364  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  6365  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  6366  0F68  00A3               	movwf	___ftdiv@f1
  6367  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  6368  0F6A  1303               	bcf	3,6	;RP1=0, select bank1
  6369  0F6B  0836               	movf	(get_pt@R1+1)^(0+128),w
  6370  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  6371  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  6372  0F6E  00A4               	movwf	___ftdiv@f1+1
  6373  0F6F  1683               	bsf	3,5	;RP0=1, select bank1
  6374  0F70  1303               	bcf	3,6	;RP1=0, select bank1
  6375  0F71  0837               	movf	(get_pt@R1+2)^(0+128),w
  6376  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  6377  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  6378  0F74  00A5               	movwf	___ftdiv@f1+2
  6379  0F75  160A  118A  25B9  120A  158A  	fcall	___ftdiv
  6380  0F7A  1283               	bcf	3,5	;RP0=0, select bank0
  6381  0F7B  1303               	bcf	3,6	;RP1=0, select bank0
  6382  0F7C  0820               	movf	?___ftdiv,w
  6383  0F7D  00DA               	movwf	___ftadd@f2
  6384  0F7E  0821               	movf	?___ftdiv+1,w
  6385  0F7F  00DB               	movwf	___ftadd@f2+1
  6386  0F80  0822               	movf	?___ftdiv+2,w
  6387  0F81  00DC               	movwf	___ftadd@f2+2
  6388  0F82  120A  158A  2053  120A  158A  	fcall	___ftadd
  6389  0F87  1283               	bcf	3,5	;RP0=0, select bank0
  6390  0F88  1303               	bcf	3,6	;RP1=0, select bank0
  6391  0F89  0857               	movf	?___ftadd,w
  6392  0F8A  1683               	bsf	3,5	;RP0=1, select bank1
  6393  0F8B  1303               	bcf	3,6	;RP1=0, select bank1
  6394  0F8C  00B8               	movwf	_get_pt$713^(0+128)
  6395  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  6396  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  6397  0F8F  0858               	movf	?___ftadd+1,w
  6398  0F90  1683               	bsf	3,5	;RP0=1, select bank1
  6399  0F91  1303               	bcf	3,6	;RP1=0, select bank1
  6400  0F92  00B9               	movwf	(_get_pt$713+1)^(0+128)
  6401  0F93  1283               	bcf	3,5	;RP0=0, select bank0
  6402  0F94  1303               	bcf	3,6	;RP1=0, select bank0
  6403  0F95  0859               	movf	?___ftadd+2,w
  6404  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  6405  0F97  1303               	bcf	3,6	;RP1=0, select bank1
  6406  0F98  00BA               	movwf	(_get_pt$713+2)^(0+128)
  6407                           
  6408                           ;plati_temp.c: 42: T2 = (R1/100.0-R2/100.0)/a+T1;
  6409  0F99  083B               	movf	get_pt@T1^(0+128),w
  6410  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  6411  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  6412  0F9C  00D7               	movwf	___ftadd@f1
  6413  0F9D  1683               	bsf	3,5	;RP0=1, select bank1
  6414  0F9E  1303               	bcf	3,6	;RP1=0, select bank1
  6415  0F9F  083C               	movf	(get_pt@T1+1)^(0+128),w
  6416  0FA0  1283               	bcf	3,5	;RP0=0, select bank0
  6417  0FA1  1303               	bcf	3,6	;RP1=0, select bank0
  6418  0FA2  00D8               	movwf	___ftadd@f1+1
  6419  0FA3  1683               	bsf	3,5	;RP0=1, select bank1
  6420  0FA4  1303               	bcf	3,6	;RP1=0, select bank1
  6421  0FA5  083D               	movf	(get_pt@T1+2)^(0+128),w
  6422  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  6423  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  6424  0FA8  00D9               	movwf	___ftadd@f1+2
  6425  0FA9  1683               	bsf	3,5	;RP0=1, select bank1
  6426  0FAA  1303               	bcf	3,6	;RP1=0, select bank1
  6427  0FAB  083E               	movf	get_pt@a^(0+128),w
  6428  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  6429  0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  6430  0FAE  00A0               	movwf	___ftdiv@f2
  6431  0FAF  1683               	bsf	3,5	;RP0=1, select bank1
  6432  0FB0  1303               	bcf	3,6	;RP1=0, select bank1
  6433  0FB1  083F               	movf	(get_pt@a+1)^(0+128),w
  6434  0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  6435  0FB3  1303               	bcf	3,6	;RP1=0, select bank0
  6436  0FB4  00A1               	movwf	___ftdiv@f2+1
  6437  0FB5  1683               	bsf	3,5	;RP0=1, select bank1
  6438  0FB6  1303               	bcf	3,6	;RP1=0, select bank1
  6439  0FB7  0840               	movf	(get_pt@a+2)^(0+128),w
  6440  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  6441  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  6442  0FBA  00A2               	movwf	___ftdiv@f2+2
  6443  0FBB  1683               	bsf	3,5	;RP0=1, select bank1
  6444  0FBC  1303               	bcf	3,6	;RP1=0, select bank1
  6445  0FBD  0838               	movf	_get_pt$713^(0+128),w
  6446  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  6447  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  6448  0FC0  00A3               	movwf	___ftdiv@f1
  6449  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  6450  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  6451  0FC3  0839               	movf	(_get_pt$713+1)^(0+128),w
  6452  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  6453  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  6454  0FC6  00A4               	movwf	___ftdiv@f1+1
  6455  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  6456  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  6457  0FC9  083A               	movf	(_get_pt$713+2)^(0+128),w
  6458  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  6459  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  6460  0FCC  00A5               	movwf	___ftdiv@f1+2
  6461  0FCD  160A  118A  25B9  120A  158A  	fcall	___ftdiv
  6462  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  6463  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  6464  0FD4  0820               	movf	?___ftdiv,w
  6465  0FD5  00DA               	movwf	___ftadd@f2
  6466  0FD6  0821               	movf	?___ftdiv+1,w
  6467  0FD7  00DB               	movwf	___ftadd@f2+1
  6468  0FD8  0822               	movf	?___ftdiv+2,w
  6469  0FD9  00DC               	movwf	___ftadd@f2+2
  6470  0FDA  120A  158A  2053   	fcall	___ftadd
  6471  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  6472  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  6473  0FDF  0857               	movf	?___ftadd,w
  6474  0FE0  1683               	bsf	3,5	;RP0=1, select bank1
  6475  0FE1  1303               	bcf	3,6	;RP1=0, select bank1
  6476  0FE2  00A3               	movwf	get_pt@T2^(0+128)
  6477  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  6478  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  6479  0FE5  0858               	movf	?___ftadd+1,w
  6480  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  6481  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  6482  0FE8  00A4               	movwf	(get_pt@T2+1)^(0+128)
  6483  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  6484  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  6485  0FEB  0859               	movf	?___ftadd+2,w
  6486  0FEC  1683               	bsf	3,5	;RP0=1, select bank1
  6487  0FED  1303               	bcf	3,6	;RP1=0, select bank1
  6488  0FEE  00A5               	movwf	(get_pt@T2+2)^(0+128)
  6489                           
  6490                           ;plati_temp.c: 44: return T2;
  6491  0FEF  0823               	movf	get_pt@T2^(0+128),w
  6492  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  6493  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  6494  0FF2  00E4               	movwf	?_get_pt
  6495  0FF3  1683               	bsf	3,5	;RP0=1, select bank1
  6496  0FF4  1303               	bcf	3,6	;RP1=0, select bank1
  6497  0FF5  0824               	movf	(get_pt@T2+1)^(0+128),w
  6498  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  6499  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  6500  0FF8  00E5               	movwf	?_get_pt+1
  6501  0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  6502  0FFA  1303               	bcf	3,6	;RP1=0, select bank1
  6503  0FFB  0825               	movf	(get_pt@T2+2)^(0+128),w
  6504  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  6505  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  6506  0FFE  00E6               	movwf	?_get_pt+2
  6507  0FFF  0008               	return
  6508  1000                     __end_of_get_pt:	
  6509                           
  6510                           	psect	text21
  6511  14A3                     __ptext21:	
  6512 ;; *************** function _get_adcon *****************
  6513 ;; Defined at:
  6514 ;;		line 98 in file "AD_value.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;		None
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;  my_adres_l      4   43[BANK0 ] long 
  6519 ;;  my_adres_h      4   39[BANK0 ] long 
  6520 ;;  voltage_valu    3   47[BANK0 ] long 
  6521 ;;  ad_value        2   50[BANK0 ] int 
  6522 ;; Return value:  Size  Location     Type
  6523 ;;                  3   32[BANK0 ] int 
  6524 ;; Registers used:
  6525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6526 ;; Tracked objects:
  6527 ;;		On entry : 0/0
  6528 ;;		On exit  : 0/0
  6529 ;;		Unchanged: 0/0
  6530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6531 ;;      Params:         0       3       0       0       0
  6532 ;;      Locals:         0      13       0       0       0
  6533 ;;      Temps:          0       4       0       0       0
  6534 ;;      Totals:         0      20       0       0       0
  6535 ;;Total ram usage:       20 bytes
  6536 ;; Hardware stack levels used:    1
  6537 ;; Hardware stack levels required when called:    2
  6538 ;; This function calls:
  6539 ;;		___awtoft
  6540 ;;		___ftdiv
  6541 ;;		___ftmul
  6542 ;;		___lwtoft
  6543 ;;		_bit_shift
  6544 ;; This function is called by:
  6545 ;;		_get_pt
  6546 ;; This function uses a non-reentrant model
  6547 ;;
  6548                           
  6549                           
  6550                           ;psect for function _get_adcon
  6551  14A3                     _get_adcon:	
  6552                           
  6553                           ;AD_value.c: 101: const unsigned int range = 0x3ff;
  6554                           ;AD_value.c: 104: int ad_value = 0b0000000000;
  6555                           
  6556                           ;incstack = 0
  6557                           ; Regs used in _get_adcon: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6558  14A3  1283               	bcf	3,5	;RP0=0, select bank0
  6559  14A4  1303               	bcf	3,6	;RP1=0, select bank0
  6560  14A5  01D2               	clrf	get_adcon@ad_value
  6561  14A6  01D3               	clrf	get_adcon@ad_value+1
  6562                           
  6563                           ;AD_value.c: 105: double voltage_value;
  6564                           ;AD_value.c: 108: long my_adres_h;
  6565                           ;AD_value.c: 109: long my_adres_l;
  6566                           ;AD_value.c: 112: ADCON0 = 0b10000001;
  6567  14A7  3081               	movlw	129
  6568  14A8  009F               	movwf	31	;volatile
  6569                           
  6570                           ;AD_value.c: 113: ADCON0bits.GO_DONE = 1;
  6571  14A9  151F               	bsf	31,2	;volatile
  6572  14AA                     l84:	
  6573                           ;AD_value.c: 116: while(ADCON0bits.GO_DONE){;}
  6574                           
  6575  14AA  191F               	btfsc	31,2	;volatile
  6576  14AB  2CAA               	goto	l84
  6577                           
  6578                           ;AD_value.c: 119: my_adres_h = ADRESH;
  6579  14AC  081E               	movf	30,w	;volatile
  6580  14AD  00C3               	movwf	??_get_adcon
  6581  14AE  01C4               	clrf	??_get_adcon+1
  6582  14AF  01C5               	clrf	??_get_adcon+2
  6583  14B0  01C6               	clrf	??_get_adcon+3
  6584  14B1  0846               	movf	??_get_adcon+3,w
  6585  14B2  00CA               	movwf	get_adcon@my_adres_h+3
  6586  14B3  0845               	movf	??_get_adcon+2,w
  6587  14B4  00C9               	movwf	get_adcon@my_adres_h+2
  6588  14B5  0844               	movf	??_get_adcon+1,w
  6589  14B6  00C8               	movwf	get_adcon@my_adres_h+1
  6590  14B7  0843               	movf	??_get_adcon,w
  6591  14B8  00C7               	movwf	get_adcon@my_adres_h
  6592                           
  6593                           ;AD_value.c: 120: my_adres_l = ADRESL;
  6594  14B9  1683               	bsf	3,5	;RP0=1, select bank1
  6595  14BA  1303               	bcf	3,6	;RP1=0, select bank1
  6596  14BB  081E               	movf	30,w	;volatile
  6597  14BC  1283               	bcf	3,5	;RP0=0, select bank0
  6598  14BD  1303               	bcf	3,6	;RP1=0, select bank0
  6599  14BE  00C3               	movwf	??_get_adcon
  6600  14BF  01C4               	clrf	??_get_adcon+1
  6601  14C0  01C5               	clrf	??_get_adcon+2
  6602  14C1  01C6               	clrf	??_get_adcon+3
  6603  14C2  0846               	movf	??_get_adcon+3,w
  6604  14C3  00CE               	movwf	get_adcon@my_adres_l+3
  6605  14C4  0845               	movf	??_get_adcon+2,w
  6606  14C5  00CD               	movwf	get_adcon@my_adres_l+2
  6607  14C6  0844               	movf	??_get_adcon+1,w
  6608  14C7  00CC               	movwf	get_adcon@my_adres_l+1
  6609  14C8  0843               	movf	??_get_adcon,w
  6610  14C9  00CB               	movwf	get_adcon@my_adres_l
  6611                           
  6612                           ;AD_value.c: 121: ad_value = bit_shift(my_adres_h, my_adres_l);
  6613  14CA  084B               	movf	get_adcon@my_adres_l,w
  6614  14CB  00C3               	movwf	??_get_adcon
  6615  14CC  0843               	movf	??_get_adcon,w
  6616  14CD  00F0               	movwf	bit_shift@my_adres_l
  6617  14CE  0847               	movf	get_adcon@my_adres_h,w
  6618  14CF  160A  118A  2421  160A  118A  	fcall	_bit_shift
  6619  14D4  0871               	movf	?_bit_shift+1,w
  6620  14D5  1283               	bcf	3,5	;RP0=0, select bank0
  6621  14D6  1303               	bcf	3,6	;RP1=0, select bank0
  6622  14D7  00D3               	movwf	get_adcon@ad_value+1
  6623  14D8  0870               	movf	?_bit_shift,w
  6624  14D9  00D2               	movwf	get_adcon@ad_value
  6625                           
  6626                           ;AD_value.c: 124: voltage_value = ad_value * 5.0 / range;
  6627  14DA  3077               	movlw	low (get_adcon@range-__stringbase)
  6628  14DB  0084               	movwf	4
  6629  14DC  160A  118A  2000  160A  118A  	fcall	stringdir
  6630  14E1  00F8               	movwf	___lwtoft@c
  6631  14E2  160A  118A  2000  160A  118A  	fcall	stringdir
  6632  14E7  00F9               	movwf	___lwtoft@c+1
  6633  14E8  160A  118A  2182  160A  118A  	fcall	___lwtoft
  6634  14ED  0878               	movf	?___lwtoft,w
  6635  14EE  1283               	bcf	3,5	;RP0=0, select bank0
  6636  14EF  1303               	bcf	3,6	;RP1=0, select bank0
  6637  14F0  00A0               	movwf	___ftdiv@f2
  6638  14F1  0879               	movf	?___lwtoft+1,w
  6639  14F2  00A1               	movwf	___ftdiv@f2+1
  6640  14F3  087A               	movf	?___lwtoft+2,w
  6641  14F4  00A2               	movwf	___ftdiv@f2+2
  6642  14F5  3000               	movlw	0
  6643  14F6  00B0               	movwf	___ftmul@f1
  6644  14F7  30A0               	movlw	160
  6645  14F8  00B1               	movwf	___ftmul@f1+1
  6646  14F9  3040               	movlw	64
  6647  14FA  00B2               	movwf	___ftmul@f1+2
  6648  14FB  0853               	movf	get_adcon@ad_value+1,w
  6649  14FC  00F9               	movwf	___awtoft@c+1
  6650  14FD  0852               	movf	get_adcon@ad_value,w
  6651  14FE  00F8               	movwf	___awtoft@c
  6652  14FF  160A  118A  2196  160A  118A  	fcall	___awtoft
  6653  1504  0878               	movf	?___awtoft,w
  6654  1505  1283               	bcf	3,5	;RP0=0, select bank0
  6655  1506  1303               	bcf	3,6	;RP1=0, select bank0
  6656  1507  00B3               	movwf	___ftmul@f2
  6657  1508  0879               	movf	?___awtoft+1,w
  6658  1509  00B4               	movwf	___ftmul@f2+1
  6659  150A  087A               	movf	?___awtoft+2,w
  6660  150B  00B5               	movwf	___ftmul@f2+2
  6661  150C  160A  118A  272D  160A  118A  	fcall	___ftmul
  6662  1511  1283               	bcf	3,5	;RP0=0, select bank0
  6663  1512  1303               	bcf	3,6	;RP1=0, select bank0
  6664  1513  0830               	movf	?___ftmul,w
  6665  1514  00A3               	movwf	___ftdiv@f1
  6666  1515  0831               	movf	?___ftmul+1,w
  6667  1516  00A4               	movwf	___ftdiv@f1+1
  6668  1517  0832               	movf	?___ftmul+2,w
  6669  1518  00A5               	movwf	___ftdiv@f1+2
  6670  1519  160A  118A  25B9   	fcall	___ftdiv
  6671  151C  1283               	bcf	3,5	;RP0=0, select bank0
  6672  151D  1303               	bcf	3,6	;RP1=0, select bank0
  6673  151E  0820               	movf	?___ftdiv,w
  6674  151F  00CF               	movwf	get_adcon@voltage_value
  6675  1520  0821               	movf	?___ftdiv+1,w
  6676  1521  00D0               	movwf	get_adcon@voltage_value+1
  6677  1522  0822               	movf	?___ftdiv+2,w
  6678  1523  00D1               	movwf	get_adcon@voltage_value+2
  6679                           
  6680                           ;AD_value.c: 126: return voltage_value;
  6681  1524  084F               	movf	get_adcon@voltage_value,w
  6682  1525  00C0               	movwf	?_get_adcon
  6683  1526  0850               	movf	get_adcon@voltage_value+1,w
  6684  1527  00C1               	movwf	?_get_adcon+1
  6685  1528  0851               	movf	get_adcon@voltage_value+2,w
  6686  1529  00C2               	movwf	?_get_adcon+2
  6687  152A  0008               	return
  6688  152B                     __end_of_get_adcon:	
  6689                           
  6690                           	psect	text22
  6691  1421                     __ptext22:	
  6692 ;; *************** function _bit_shift *****************
  6693 ;; Defined at:
  6694 ;;		line 52 in file "AD_value.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;  my_adres_h      1    wreg     unsigned char 
  6697 ;;  my_adres_l      1    0[COMMON] unsigned char 
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  my_adres_h      1    4[COMMON] unsigned char 
  6700 ;;  j               2   10[COMMON] int 
  6701 ;;  i               2    7[COMMON] int 
  6702 ;;  ad_value        2    5[COMMON] int 
  6703 ;;  buf             1   12[COMMON] unsigned char 
  6704 ;;  bit_mask        1    9[COMMON] unsigned char 
  6705 ;; Return value:  Size  Location     Type
  6706 ;;                  2    0[COMMON] int 
  6707 ;; Registers used:
  6708 ;;		wreg, status,2, status,0, btemp+1
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6714 ;;      Params:         2       0       0       0       0
  6715 ;;      Locals:         9       0       0       0       0
  6716 ;;      Temps:          2       0       0       0       0
  6717 ;;      Totals:        13       0       0       0       0
  6718 ;;Total ram usage:       13 bytes
  6719 ;; Hardware stack levels used:    1
  6720 ;; This function calls:
  6721 ;;		Nothing
  6722 ;; This function is called by:
  6723 ;;		_get_adcon
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           
  6728                           ;psect for function _bit_shift
  6729  1421                     _bit_shift:	
  6730                           
  6731                           ;incstack = 0
  6732                           ; Regs used in _bit_shift: [wreg+status,2+status,0+btemp+1]
  6733                           ;bit_shift@my_adres_h stored from wreg
  6734  1421  00F4               	movwf	bit_shift@my_adres_h
  6735                           
  6736                           ;AD_value.c: 54: int i, j;
  6737                           ;AD_value.c: 55: int ad_value;
  6738                           ;AD_value.c: 57: char buf = 0x00;
  6739  1422  01FC               	clrf	bit_shift@buf
  6740                           
  6741                           ;AD_value.c: 58: char bit_mask = 0b10000000;
  6742  1423  3080               	movlw	128
  6743  1424  00F2               	movwf	??_bit_shift
  6744  1425  0872               	movf	??_bit_shift,w
  6745  1426  00F9               	movwf	bit_shift@bit_mask
  6746                           
  6747                           ;AD_value.c: 61: for(i = 0; i < 8; i++)
  6748  1427  01F7               	clrf	bit_shift@i
  6749  1428  01F8               	clrf	bit_shift@i+1
  6750  1429  0878               	movf	bit_shift@i+1,w
  6751  142A  3A80               	xorlw	128
  6752  142B  00FF               	movwf	127
  6753  142C  3080               	movlw	128
  6754  142D  027F               	subwf	127,w
  6755  142E  1D03               	skipz
  6756  142F  2C32               	goto	u2125
  6757  1430  3008               	movlw	8
  6758  1431  0277               	subwf	bit_shift@i,w
  6759  1432                     u2125:	
  6760  1432  1803               	btfsc	3,0
  6761  1433  2C5D               	goto	l1719
  6762  1434                     l1705:	
  6763                           
  6764                           ;AD_value.c: 62: {
  6765                           ;AD_value.c: 63: buf = my_adres_h & bit_mask;
  6766  1434  0874               	movf	bit_shift@my_adres_h,w
  6767  1435  0579               	andwf	bit_shift@bit_mask,w
  6768  1436  00F2               	movwf	??_bit_shift
  6769  1437  0872               	movf	??_bit_shift,w
  6770  1438  00FC               	movwf	bit_shift@buf
  6771                           
  6772                           ;AD_value.c: 64: buf >>= 7;
  6773  1439  0DFC               	rlf	bit_shift@buf,f
  6774  143A  01FC               	clrf	bit_shift@buf
  6775  143B  0DFC               	rlf	bit_shift@buf,f
  6776                           
  6777                           ;AD_value.c: 65: ad_value |= (int)buf;
  6778  143C  087C               	movf	bit_shift@buf,w
  6779  143D  00F2               	movwf	??_bit_shift
  6780  143E  01F3               	clrf	??_bit_shift+1
  6781  143F  0872               	movf	??_bit_shift,w
  6782  1440  04F5               	iorwf	bit_shift@ad_value,f
  6783  1441  0873               	movf	??_bit_shift+1,w
  6784  1442  04F6               	iorwf	bit_shift@ad_value+1,f
  6785                           
  6786                           ;AD_value.c: 66: ad_value <<= 1;
  6787  1443  3001               	movlw	1
  6788  1444                     u2135:	
  6789  1444  1003               	clrc
  6790  1445  0DF5               	rlf	bit_shift@ad_value,f
  6791  1446  0DF6               	rlf	bit_shift@ad_value+1,f
  6792  1447  3EFF               	addlw	-1
  6793  1448  1D03               	skipz
  6794  1449  2C44               	goto	u2135
  6795                           
  6796                           ;AD_value.c: 67: my_adres_h <<= 1;
  6797  144A  1003               	clrc
  6798  144B  0DF4               	rlf	bit_shift@my_adres_h,f
  6799  144C  3001               	movlw	1
  6800  144D  07F7               	addwf	bit_shift@i,f
  6801  144E  1803               	skipnc
  6802  144F  0AF8               	incf	bit_shift@i+1,f
  6803  1450  3000               	movlw	0
  6804  1451  07F8               	addwf	bit_shift@i+1,f
  6805  1452  0878               	movf	bit_shift@i+1,w
  6806  1453  3A80               	xorlw	128
  6807  1454  00FF               	movwf	127
  6808  1455  3080               	movlw	128
  6809  1456  027F               	subwf	127,w
  6810  1457  1D03               	skipz
  6811  1458  2C5B               	goto	u2145
  6812  1459  3008               	movlw	8
  6813  145A  0277               	subwf	bit_shift@i,w
  6814  145B                     u2145:	
  6815  145B  1C03               	skipc
  6816  145C  2C34               	goto	l1705
  6817  145D                     l1719:	
  6818                           
  6819                           ;AD_value.c: 68: }
  6820                           ;AD_value.c: 71: for(j = 0; j < 2; j++)
  6821  145D  01FA               	clrf	bit_shift@j
  6822  145E  01FB               	clrf	bit_shift@j+1
  6823  145F  087B               	movf	bit_shift@j+1,w
  6824  1460  3A80               	xorlw	128
  6825  1461  00FF               	movwf	127
  6826  1462  3080               	movlw	128
  6827  1463  027F               	subwf	127,w
  6828  1464  1D03               	skipz
  6829  1465  2C68               	goto	u2155
  6830  1466  3002               	movlw	2
  6831  1467  027A               	subwf	bit_shift@j,w
  6832  1468                     u2155:	
  6833  1468  1803               	btfsc	3,0
  6834  1469  2C9E               	goto	l1737
  6835  146A                     l1725:	
  6836                           
  6837                           ;AD_value.c: 72: {
  6838                           ;AD_value.c: 73: buf = my_adres_l & bit_mask;
  6839  146A  0870               	movf	bit_shift@my_adres_l,w
  6840  146B  0579               	andwf	bit_shift@bit_mask,w
  6841  146C  00F2               	movwf	??_bit_shift
  6842  146D  0872               	movf	??_bit_shift,w
  6843  146E  00FC               	movwf	bit_shift@buf
  6844                           
  6845                           ;AD_value.c: 74: buf >>= 7;
  6846  146F  0DFC               	rlf	bit_shift@buf,f
  6847  1470  01FC               	clrf	bit_shift@buf
  6848  1471  0DFC               	rlf	bit_shift@buf,f
  6849                           
  6850                           ;AD_value.c: 75: ad_value |= (int)buf;
  6851  1472  087C               	movf	bit_shift@buf,w
  6852  1473  00F2               	movwf	??_bit_shift
  6853  1474  01F3               	clrf	??_bit_shift+1
  6854  1475  0872               	movf	??_bit_shift,w
  6855  1476  04F5               	iorwf	bit_shift@ad_value,f
  6856  1477  0873               	movf	??_bit_shift+1,w
  6857  1478  04F6               	iorwf	bit_shift@ad_value+1,f
  6858                           
  6859                           ;AD_value.c: 77: if (j < 1)
  6860  1479  087B               	movf	bit_shift@j+1,w
  6861  147A  3A80               	xorlw	128
  6862  147B  00FF               	movwf	127
  6863  147C  3080               	movlw	128
  6864  147D  027F               	subwf	127,w
  6865  147E  1D03               	skipz
  6866  147F  2C82               	goto	u2165
  6867  1480  3001               	movlw	1
  6868  1481  027A               	subwf	bit_shift@j,w
  6869  1482                     u2165:	
  6870  1482  1803               	skipnc
  6871  1483  2C8B               	goto	l78
  6872                           
  6873                           ;AD_value.c: 78: {
  6874                           ;AD_value.c: 79: ad_value <<= 1;
  6875  1484  3001               	movlw	1
  6876  1485                     u2175:	
  6877  1485  1003               	clrc
  6878  1486  0DF5               	rlf	bit_shift@ad_value,f
  6879  1487  0DF6               	rlf	bit_shift@ad_value+1,f
  6880  1488  3EFF               	addlw	-1
  6881  1489  1D03               	skipz
  6882  148A  2C85               	goto	u2175
  6883  148B                     l78:	
  6884                           
  6885                           ;AD_value.c: 80: }
  6886                           ;AD_value.c: 81: my_adres_l <<= 1;
  6887  148B  1003               	clrc
  6888  148C  0DF0               	rlf	bit_shift@my_adres_l,f
  6889  148D  3001               	movlw	1
  6890  148E  07FA               	addwf	bit_shift@j,f
  6891  148F  1803               	skipnc
  6892  1490  0AFB               	incf	bit_shift@j+1,f
  6893  1491  3000               	movlw	0
  6894  1492  07FB               	addwf	bit_shift@j+1,f
  6895  1493  087B               	movf	bit_shift@j+1,w
  6896  1494  3A80               	xorlw	128
  6897  1495  00FF               	movwf	127
  6898  1496  3080               	movlw	128
  6899  1497  027F               	subwf	127,w
  6900  1498  1D03               	skipz
  6901  1499  2C9C               	goto	u2185
  6902  149A  3002               	movlw	2
  6903  149B  027A               	subwf	bit_shift@j,w
  6904  149C                     u2185:	
  6905  149C  1C03               	skipc
  6906  149D  2C6A               	goto	l1725
  6907  149E                     l1737:	
  6908                           
  6909                           ;AD_value.c: 82: }
  6910                           ;AD_value.c: 84: return ad_value;
  6911  149E  0876               	movf	bit_shift@ad_value+1,w
  6912  149F  00F1               	movwf	?_bit_shift+1
  6913  14A0  0875               	movf	bit_shift@ad_value,w
  6914  14A1  00F0               	movwf	?_bit_shift
  6915  14A2  0008               	return
  6916  14A3                     __end_of_bit_shift:	
  6917                           
  6918                           	psect	text23
  6919  1182                     __ptext23:	
  6920 ;; *************** function ___lwtoft *****************
  6921 ;; Defined at:
  6922 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwtoft.c"
  6923 ;; Parameters:    Size  Location     Type
  6924 ;;  c               2    8[COMMON] unsigned int 
  6925 ;; Auto vars:     Size  Location     Type
  6926 ;;		None
  6927 ;; Return value:  Size  Location     Type
  6928 ;;                  3    8[COMMON] float 
  6929 ;; Registers used:
  6930 ;;		wreg, status,2, status,0, pclath, cstack
  6931 ;; Tracked objects:
  6932 ;;		On entry : 0/0
  6933 ;;		On exit  : 0/0
  6934 ;;		Unchanged: 0/0
  6935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6936 ;;      Params:         3       0       0       0       0
  6937 ;;      Locals:         0       0       0       0       0
  6938 ;;      Temps:          1       0       0       0       0
  6939 ;;      Totals:         4       0       0       0       0
  6940 ;;Total ram usage:        4 bytes
  6941 ;; Hardware stack levels used:    1
  6942 ;; Hardware stack levels required when called:    1
  6943 ;; This function calls:
  6944 ;;		___ftpack
  6945 ;; This function is called by:
  6946 ;;		_get_adcon
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           
  6950                           
  6951                           ;psect for function ___lwtoft
  6952  1182                     ___lwtoft:	
  6953                           
  6954                           ;incstack = 0
  6955                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  6956  1182  0878               	movf	___lwtoft@c,w
  6957  1183  00F0               	movwf	___ftpack@arg
  6958  1184  0879               	movf	___lwtoft@c+1,w
  6959  1185  00F1               	movwf	___ftpack@arg+1
  6960  1186  01F2               	clrf	___ftpack@arg+2
  6961  1187  308E               	movlw	142
  6962  1188  00FB               	movwf	??___lwtoft
  6963  1189  087B               	movf	??___lwtoft,w
  6964  118A  00F3               	movwf	___ftpack@exp
  6965  118B  01F4               	clrf	___ftpack@sign
  6966  118C  160A  118A  23B5   	fcall	___ftpack
  6967  118F  0870               	movf	?___ftpack,w
  6968  1190  00F8               	movwf	?___lwtoft
  6969  1191  0871               	movf	?___ftpack+1,w
  6970  1192  00F9               	movwf	?___lwtoft+1
  6971  1193  0872               	movf	?___ftpack+2,w
  6972  1194  00FA               	movwf	?___lwtoft+2
  6973  1195  0008               	return
  6974  1196                     __end_of___lwtoft:	
  6975                           
  6976                           	psect	text24
  6977  172D                     __ptext24:	
  6978 ;; *************** function ___ftmul *****************
  6979 ;; Defined at:
  6980 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;  f1              3   16[BANK0 ] float 
  6983 ;;  f2              3   19[BANK0 ] float 
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  6986 ;;  sign            1   31[BANK0 ] unsigned char 
  6987 ;;  cntr            1   30[BANK0 ] unsigned char 
  6988 ;;  exp             1   26[BANK0 ] unsigned char 
  6989 ;; Return value:  Size  Location     Type
  6990 ;;                  3   16[BANK0 ] float 
  6991 ;; Registers used:
  6992 ;;		wreg, status,2, status,0, pclath, cstack
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6998 ;;      Params:         0       6       0       0       0
  6999 ;;      Locals:         0       6       0       0       0
  7000 ;;      Temps:          0       4       0       0       0
  7001 ;;      Totals:         0      16       0       0       0
  7002 ;;Total ram usage:       16 bytes
  7003 ;; Hardware stack levels used:    1
  7004 ;; Hardware stack levels required when called:    1
  7005 ;; This function calls:
  7006 ;;		___ftpack
  7007 ;; This function is called by:
  7008 ;;		_get_adcon
  7009 ;;		_get_pt
  7010 ;;		_fround
  7011 ;;		_scale
  7012 ;;		_printf
  7013 ;; This function uses a non-reentrant model
  7014 ;;
  7015                           
  7016                           
  7017                           ;psect for function ___ftmul
  7018  172D                     ___ftmul:	
  7019                           
  7020                           ;incstack = 0
  7021                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7022  172D  1283               	bcf	3,5	;RP0=0, select bank0
  7023  172E  1303               	bcf	3,6	;RP1=0, select bank0
  7024  172F  0830               	movf	___ftmul@f1,w
  7025  1730  00B6               	movwf	??___ftmul
  7026  1731  0831               	movf	___ftmul@f1+1,w
  7027  1732  00B7               	movwf	??___ftmul+1
  7028  1733  0832               	movf	___ftmul@f1+2,w
  7029  1734  00B8               	movwf	??___ftmul+2
  7030  1735  1003               	clrc
  7031  1736  0D37               	rlf	??___ftmul+1,w
  7032  1737  0D38               	rlf	??___ftmul+2,w
  7033  1738  00B9               	movwf	??___ftmul+3
  7034  1739  0839               	movf	??___ftmul+3,w
  7035  173A  00BA               	movwf	___ftmul@exp
  7036  173B  083A               	movf	___ftmul@exp,w
  7037  173C  1D03               	btfss	3,2
  7038  173D  2F45               	goto	l1801
  7039  173E  3000               	movlw	0
  7040  173F  00B0               	movwf	?___ftmul
  7041  1740  3000               	movlw	0
  7042  1741  00B1               	movwf	?___ftmul+1
  7043  1742  3000               	movlw	0
  7044  1743  00B2               	movwf	?___ftmul+2
  7045  1744  0008               	return
  7046  1745                     l1801:	
  7047  1745  0833               	movf	___ftmul@f2,w
  7048  1746  00B6               	movwf	??___ftmul
  7049  1747  0834               	movf	___ftmul@f2+1,w
  7050  1748  00B7               	movwf	??___ftmul+1
  7051  1749  0835               	movf	___ftmul@f2+2,w
  7052  174A  00B8               	movwf	??___ftmul+2
  7053  174B  1003               	clrc
  7054  174C  0D37               	rlf	??___ftmul+1,w
  7055  174D  0D38               	rlf	??___ftmul+2,w
  7056  174E  00B9               	movwf	??___ftmul+3
  7057  174F  0839               	movf	??___ftmul+3,w
  7058  1750  00BF               	movwf	___ftmul@sign
  7059  1751  083F               	movf	___ftmul@sign,w
  7060  1752  1D03               	btfss	3,2
  7061  1753  2F5B               	goto	l1807
  7062  1754  3000               	movlw	0
  7063  1755  00B0               	movwf	?___ftmul
  7064  1756  3000               	movlw	0
  7065  1757  00B1               	movwf	?___ftmul+1
  7066  1758  3000               	movlw	0
  7067  1759  00B2               	movwf	?___ftmul+2
  7068  175A  0008               	return
  7069  175B                     l1807:	
  7070  175B  083F               	movf	___ftmul@sign,w
  7071  175C  3E7B               	addlw	123
  7072  175D  00B6               	movwf	??___ftmul
  7073  175E  0836               	movf	??___ftmul,w
  7074  175F  07BA               	addwf	___ftmul@exp,f
  7075  1760  0830               	movf	___ftmul@f1,w
  7076  1761  00B6               	movwf	??___ftmul
  7077  1762  0831               	movf	___ftmul@f1+1,w
  7078  1763  00B7               	movwf	??___ftmul+1
  7079  1764  0832               	movf	___ftmul@f1+2,w
  7080  1765  00B8               	movwf	??___ftmul+2
  7081  1766  3010               	movlw	16
  7082  1767                     u2305:	
  7083  1767  1003               	clrc
  7084  1768  0CB8               	rrf	??___ftmul+2,f
  7085  1769  0CB7               	rrf	??___ftmul+1,f
  7086  176A  0CB6               	rrf	??___ftmul,f
  7087  176B  3EFF               	addlw	-1
  7088  176C  1D03               	skipz
  7089  176D  2F67               	goto	u2305
  7090  176E  0836               	movf	??___ftmul,w
  7091  176F  00B9               	movwf	??___ftmul+3
  7092  1770  0839               	movf	??___ftmul+3,w
  7093  1771  00BF               	movwf	___ftmul@sign
  7094  1772  0833               	movf	___ftmul@f2,w
  7095  1773  00B6               	movwf	??___ftmul
  7096  1774  0834               	movf	___ftmul@f2+1,w
  7097  1775  00B7               	movwf	??___ftmul+1
  7098  1776  0835               	movf	___ftmul@f2+2,w
  7099  1777  00B8               	movwf	??___ftmul+2
  7100  1778  3010               	movlw	16
  7101  1779                     u2315:	
  7102  1779  1003               	clrc
  7103  177A  0CB8               	rrf	??___ftmul+2,f
  7104  177B  0CB7               	rrf	??___ftmul+1,f
  7105  177C  0CB6               	rrf	??___ftmul,f
  7106  177D  3EFF               	addlw	-1
  7107  177E  1D03               	skipz
  7108  177F  2F79               	goto	u2315
  7109  1780  0836               	movf	??___ftmul,w
  7110  1781  00B9               	movwf	??___ftmul+3
  7111  1782  0839               	movf	??___ftmul+3,w
  7112  1783  06BF               	xorwf	___ftmul@sign,f
  7113  1784  3080               	movlw	128
  7114  1785  00B6               	movwf	??___ftmul
  7115  1786  0836               	movf	??___ftmul,w
  7116  1787  05BF               	andwf	___ftmul@sign,f
  7117  1788  17B1               	bsf	___ftmul@f1+1,7
  7118  1789  17B4               	bsf	___ftmul@f2+1,7
  7119  178A  30FF               	movlw	255
  7120  178B  05B3               	andwf	___ftmul@f2,f
  7121  178C  30FF               	movlw	255
  7122  178D  05B4               	andwf	___ftmul@f2+1,f
  7123  178E  3000               	movlw	0
  7124  178F  05B5               	andwf	___ftmul@f2+2,f
  7125  1790  3000               	movlw	0
  7126  1791  00BB               	movwf	___ftmul@f3_as_product
  7127  1792  3000               	movlw	0
  7128  1793  00BC               	movwf	___ftmul@f3_as_product+1
  7129  1794  3000               	movlw	0
  7130  1795  00BD               	movwf	___ftmul@f3_as_product+2
  7131  1796  3007               	movlw	7
  7132  1797  00B6               	movwf	??___ftmul
  7133  1798  0836               	movf	??___ftmul,w
  7134  1799  00BE               	movwf	___ftmul@cntr
  7135  179A                     l1819:	
  7136  179A  1C30               	btfss	___ftmul@f1,0
  7137  179B  2FAA               	goto	l1823
  7138  179C  0833               	movf	___ftmul@f2,w
  7139  179D  07BB               	addwf	___ftmul@f3_as_product,f
  7140  179E  0834               	movf	___ftmul@f2+1,w
  7141  179F  1103               	clrz
  7142  17A0  1803               	skipnc
  7143  17A1  0A34               	incf	___ftmul@f2+1,w
  7144  17A2  1D03               	btfss	3,2
  7145  17A3  07BC               	addwf	___ftmul@f3_as_product+1,f
  7146  17A4  0835               	movf	___ftmul@f2+2,w
  7147  17A5  1103               	clrz
  7148  17A6  1803               	skipnc
  7149  17A7  0A35               	incf	___ftmul@f2+2,w
  7150  17A8  1D03               	btfss	3,2
  7151  17A9  07BD               	addwf	___ftmul@f3_as_product+2,f
  7152  17AA                     l1823:	
  7153  17AA  3001               	movlw	1
  7154  17AB                     u2345:	
  7155  17AB  1003               	clrc
  7156  17AC  0CB2               	rrf	___ftmul@f1+2,f
  7157  17AD  0CB1               	rrf	___ftmul@f1+1,f
  7158  17AE  0CB0               	rrf	___ftmul@f1,f
  7159  17AF  3EFF               	addlw	-1
  7160  17B0  1D03               	skipz
  7161  17B1  2FAB               	goto	u2345
  7162  17B2  3001               	movlw	1
  7163  17B3                     u2355:	
  7164  17B3  1003               	clrc
  7165  17B4  0DB3               	rlf	___ftmul@f2,f
  7166  17B5  0DB4               	rlf	___ftmul@f2+1,f
  7167  17B6  0DB5               	rlf	___ftmul@f2+2,f
  7168  17B7  3EFF               	addlw	-1
  7169  17B8  1D03               	skipz
  7170  17B9  2FB3               	goto	u2355
  7171  17BA  3001               	movlw	1
  7172  17BB  02BE               	subwf	___ftmul@cntr,f
  7173  17BC  1D03               	btfss	3,2
  7174  17BD  2F9A               	goto	l1819
  7175  17BE  3009               	movlw	9
  7176  17BF  00B6               	movwf	??___ftmul
  7177  17C0  0836               	movf	??___ftmul,w
  7178  17C1  00BE               	movwf	___ftmul@cntr
  7179  17C2                     l1831:	
  7180  17C2  1C30               	btfss	___ftmul@f1,0
  7181  17C3  2FD2               	goto	l1835
  7182  17C4  0833               	movf	___ftmul@f2,w
  7183  17C5  07BB               	addwf	___ftmul@f3_as_product,f
  7184  17C6  0834               	movf	___ftmul@f2+1,w
  7185  17C7  1103               	clrz
  7186  17C8  1803               	skipnc
  7187  17C9  0A34               	incf	___ftmul@f2+1,w
  7188  17CA  1D03               	btfss	3,2
  7189  17CB  07BC               	addwf	___ftmul@f3_as_product+1,f
  7190  17CC  0835               	movf	___ftmul@f2+2,w
  7191  17CD  1103               	clrz
  7192  17CE  1803               	skipnc
  7193  17CF  0A35               	incf	___ftmul@f2+2,w
  7194  17D0  1D03               	btfss	3,2
  7195  17D1  07BD               	addwf	___ftmul@f3_as_product+2,f
  7196  17D2                     l1835:	
  7197  17D2  3001               	movlw	1
  7198  17D3                     u2395:	
  7199  17D3  1003               	clrc
  7200  17D4  0CB2               	rrf	___ftmul@f1+2,f
  7201  17D5  0CB1               	rrf	___ftmul@f1+1,f
  7202  17D6  0CB0               	rrf	___ftmul@f1,f
  7203  17D7  3EFF               	addlw	-1
  7204  17D8  1D03               	skipz
  7205  17D9  2FD3               	goto	u2395
  7206  17DA  3001               	movlw	1
  7207  17DB                     u2405:	
  7208  17DB  1003               	clrc
  7209  17DC  0CBD               	rrf	___ftmul@f3_as_product+2,f
  7210  17DD  0CBC               	rrf	___ftmul@f3_as_product+1,f
  7211  17DE  0CBB               	rrf	___ftmul@f3_as_product,f
  7212  17DF  3EFF               	addlw	-1
  7213  17E0  1D03               	skipz
  7214  17E1  2FDB               	goto	u2405
  7215  17E2  3001               	movlw	1
  7216  17E3  02BE               	subwf	___ftmul@cntr,f
  7217  17E4  1D03               	btfss	3,2
  7218  17E5  2FC2               	goto	l1831
  7219  17E6  083B               	movf	___ftmul@f3_as_product,w
  7220  17E7  00F0               	movwf	___ftpack@arg
  7221  17E8  083C               	movf	___ftmul@f3_as_product+1,w
  7222  17E9  00F1               	movwf	___ftpack@arg+1
  7223  17EA  083D               	movf	___ftmul@f3_as_product+2,w
  7224  17EB  00F2               	movwf	___ftpack@arg+2
  7225  17EC  083A               	movf	___ftmul@exp,w
  7226  17ED  00B6               	movwf	??___ftmul
  7227  17EE  0836               	movf	??___ftmul,w
  7228  17EF  00F3               	movwf	___ftpack@exp
  7229  17F0  083F               	movf	___ftmul@sign,w
  7230  17F1  00B7               	movwf	??___ftmul+1
  7231  17F2  0837               	movf	??___ftmul+1,w
  7232  17F3  00F4               	movwf	___ftpack@sign
  7233  17F4  160A  118A  23B5   	fcall	___ftpack
  7234  17F7  0870               	movf	?___ftpack,w
  7235  17F8  1283               	bcf	3,5	;RP0=0, select bank0
  7236  17F9  1303               	bcf	3,6	;RP1=0, select bank0
  7237  17FA  00B0               	movwf	?___ftmul
  7238  17FB  0871               	movf	?___ftpack+1,w
  7239  17FC  00B1               	movwf	?___ftmul+1
  7240  17FD  0872               	movf	?___ftpack+2,w
  7241  17FE  00B2               	movwf	?___ftmul+2
  7242  17FF  0008               	return
  7243  1800                     __end_of___ftmul:	
  7244                           
  7245                           	psect	text25
  7246  15B9                     __ptext25:	
  7247 ;; *************** function ___ftdiv *****************
  7248 ;; Defined at:
  7249 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;  f2              3    0[BANK0 ] float 
  7252 ;;  f1              3    3[BANK0 ] float 
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;  f3              3   11[BANK0 ] float 
  7255 ;;  sign            1   15[BANK0 ] unsigned char 
  7256 ;;  exp             1   14[BANK0 ] unsigned char 
  7257 ;;  cntr            1   10[BANK0 ] unsigned char 
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  3    0[BANK0 ] float 
  7260 ;; Registers used:
  7261 ;;		wreg, status,2, status,0, pclath, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7267 ;;      Params:         0       6       0       0       0
  7268 ;;      Locals:         0       6       0       0       0
  7269 ;;      Temps:          0       4       0       0       0
  7270 ;;      Totals:         0      16       0       0       0
  7271 ;;Total ram usage:       16 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:    1
  7274 ;; This function calls:
  7275 ;;		___ftpack
  7276 ;; This function is called by:
  7277 ;;		_get_adcon
  7278 ;;		_get_pt
  7279 ;;		_get_temp
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283                           
  7284                           ;psect for function ___ftdiv
  7285  15B9                     ___ftdiv:	
  7286                           
  7287                           ;incstack = 0
  7288                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7289  15B9  1283               	bcf	3,5	;RP0=0, select bank0
  7290  15BA  1303               	bcf	3,6	;RP1=0, select bank0
  7291  15BB  0823               	movf	___ftdiv@f1,w
  7292  15BC  00A6               	movwf	??___ftdiv
  7293  15BD  0824               	movf	___ftdiv@f1+1,w
  7294  15BE  00A7               	movwf	??___ftdiv+1
  7295  15BF  0825               	movf	___ftdiv@f1+2,w
  7296  15C0  00A8               	movwf	??___ftdiv+2
  7297  15C1  1003               	clrc
  7298  15C2  0D27               	rlf	??___ftdiv+1,w
  7299  15C3  0D28               	rlf	??___ftdiv+2,w
  7300  15C4  00A9               	movwf	??___ftdiv+3
  7301  15C5  0829               	movf	??___ftdiv+3,w
  7302  15C6  00AE               	movwf	___ftdiv@exp
  7303  15C7  082E               	movf	___ftdiv@exp,w
  7304  15C8  1D03               	btfss	3,2
  7305  15C9  2DD1               	goto	l1759
  7306  15CA  3000               	movlw	0
  7307  15CB  00A0               	movwf	?___ftdiv
  7308  15CC  3000               	movlw	0
  7309  15CD  00A1               	movwf	?___ftdiv+1
  7310  15CE  3000               	movlw	0
  7311  15CF  00A2               	movwf	?___ftdiv+2
  7312  15D0  0008               	return
  7313  15D1                     l1759:	
  7314  15D1  0820               	movf	___ftdiv@f2,w
  7315  15D2  00A6               	movwf	??___ftdiv
  7316  15D3  0821               	movf	___ftdiv@f2+1,w
  7317  15D4  00A7               	movwf	??___ftdiv+1
  7318  15D5  0822               	movf	___ftdiv@f2+2,w
  7319  15D6  00A8               	movwf	??___ftdiv+2
  7320  15D7  1003               	clrc
  7321  15D8  0D27               	rlf	??___ftdiv+1,w
  7322  15D9  0D28               	rlf	??___ftdiv+2,w
  7323  15DA  00A9               	movwf	??___ftdiv+3
  7324  15DB  0829               	movf	??___ftdiv+3,w
  7325  15DC  00AF               	movwf	___ftdiv@sign
  7326  15DD  082F               	movf	___ftdiv@sign,w
  7327  15DE  1D03               	btfss	3,2
  7328  15DF  2DE7               	goto	l1765
  7329  15E0  3000               	movlw	0
  7330  15E1  00A0               	movwf	?___ftdiv
  7331  15E2  3000               	movlw	0
  7332  15E3  00A1               	movwf	?___ftdiv+1
  7333  15E4  3000               	movlw	0
  7334  15E5  00A2               	movwf	?___ftdiv+2
  7335  15E6  0008               	return
  7336  15E7                     l1765:	
  7337  15E7  3000               	movlw	0
  7338  15E8  00AB               	movwf	___ftdiv@f3
  7339  15E9  3000               	movlw	0
  7340  15EA  00AC               	movwf	___ftdiv@f3+1
  7341  15EB  3000               	movlw	0
  7342  15EC  00AD               	movwf	___ftdiv@f3+2
  7343  15ED  3089               	movlw	137
  7344  15EE  072F               	addwf	___ftdiv@sign,w
  7345  15EF  00A6               	movwf	??___ftdiv
  7346  15F0  0826               	movf	??___ftdiv,w
  7347  15F1  02AE               	subwf	___ftdiv@exp,f
  7348  15F2  0823               	movf	___ftdiv@f1,w
  7349  15F3  00A6               	movwf	??___ftdiv
  7350  15F4  0824               	movf	___ftdiv@f1+1,w
  7351  15F5  00A7               	movwf	??___ftdiv+1
  7352  15F6  0825               	movf	___ftdiv@f1+2,w
  7353  15F7  00A8               	movwf	??___ftdiv+2
  7354  15F8  3010               	movlw	16
  7355  15F9                     u2225:	
  7356  15F9  1003               	clrc
  7357  15FA  0CA8               	rrf	??___ftdiv+2,f
  7358  15FB  0CA7               	rrf	??___ftdiv+1,f
  7359  15FC  0CA6               	rrf	??___ftdiv,f
  7360  15FD  3EFF               	addlw	-1
  7361  15FE  1D03               	skipz
  7362  15FF  2DF9               	goto	u2225
  7363  1600  0826               	movf	??___ftdiv,w
  7364  1601  00A9               	movwf	??___ftdiv+3
  7365  1602  0829               	movf	??___ftdiv+3,w
  7366  1603  00AF               	movwf	___ftdiv@sign
  7367  1604  0820               	movf	___ftdiv@f2,w
  7368  1605  00A6               	movwf	??___ftdiv
  7369  1606  0821               	movf	___ftdiv@f2+1,w
  7370  1607  00A7               	movwf	??___ftdiv+1
  7371  1608  0822               	movf	___ftdiv@f2+2,w
  7372  1609  00A8               	movwf	??___ftdiv+2
  7373  160A  3010               	movlw	16
  7374  160B                     u2235:	
  7375  160B  1003               	clrc
  7376  160C  0CA8               	rrf	??___ftdiv+2,f
  7377  160D  0CA7               	rrf	??___ftdiv+1,f
  7378  160E  0CA6               	rrf	??___ftdiv,f
  7379  160F  3EFF               	addlw	-1
  7380  1610  1D03               	skipz
  7381  1611  2E0B               	goto	u2235
  7382  1612  0826               	movf	??___ftdiv,w
  7383  1613  00A9               	movwf	??___ftdiv+3
  7384  1614  0829               	movf	??___ftdiv+3,w
  7385  1615  06AF               	xorwf	___ftdiv@sign,f
  7386  1616  3080               	movlw	128
  7387  1617  00A6               	movwf	??___ftdiv
  7388  1618  0826               	movf	??___ftdiv,w
  7389  1619  05AF               	andwf	___ftdiv@sign,f
  7390  161A  17A4               	bsf	___ftdiv@f1+1,7
  7391  161B  30FF               	movlw	255
  7392  161C  05A3               	andwf	___ftdiv@f1,f
  7393  161D  30FF               	movlw	255
  7394  161E  05A4               	andwf	___ftdiv@f1+1,f
  7395  161F  3000               	movlw	0
  7396  1620  05A5               	andwf	___ftdiv@f1+2,f
  7397  1621  17A1               	bsf	___ftdiv@f2+1,7
  7398  1622  30FF               	movlw	255
  7399  1623  05A0               	andwf	___ftdiv@f2,f
  7400  1624  30FF               	movlw	255
  7401  1625  05A1               	andwf	___ftdiv@f2+1,f
  7402  1626  3000               	movlw	0
  7403  1627  05A2               	andwf	___ftdiv@f2+2,f
  7404  1628  3018               	movlw	24
  7405  1629  00A6               	movwf	??___ftdiv
  7406  162A  0826               	movf	??___ftdiv,w
  7407  162B  00AA               	movwf	___ftdiv@cntr
  7408  162C                     l1779:	
  7409  162C  3001               	movlw	1
  7410  162D                     u2245:	
  7411  162D  1003               	clrc
  7412  162E  0DAB               	rlf	___ftdiv@f3,f
  7413  162F  0DAC               	rlf	___ftdiv@f3+1,f
  7414  1630  0DAD               	rlf	___ftdiv@f3+2,f
  7415  1631  3EFF               	addlw	-1
  7416  1632  1D03               	skipz
  7417  1633  2E2D               	goto	u2245
  7418  1634  0822               	movf	___ftdiv@f2+2,w
  7419  1635  0225               	subwf	___ftdiv@f1+2,w
  7420  1636  1D03               	skipz
  7421  1637  2E3E               	goto	u2255
  7422  1638  0821               	movf	___ftdiv@f2+1,w
  7423  1639  0224               	subwf	___ftdiv@f1+1,w
  7424  163A  1D03               	skipz
  7425  163B  2E3E               	goto	u2255
  7426  163C  0820               	movf	___ftdiv@f2,w
  7427  163D  0223               	subwf	___ftdiv@f1,w
  7428  163E                     u2255:	
  7429  163E  1C03               	skipc
  7430  163F  2E4B               	goto	l1787
  7431  1640  0820               	movf	___ftdiv@f2,w
  7432  1641  02A3               	subwf	___ftdiv@f1,f
  7433  1642  0821               	movf	___ftdiv@f2+1,w
  7434  1643  1C03               	skipc
  7435  1644  0F21               	incfsz	___ftdiv@f2+1,w
  7436  1645  02A4               	subwf	___ftdiv@f1+1,f
  7437  1646  0822               	movf	___ftdiv@f2+2,w
  7438  1647  1C03               	skipc
  7439  1648  0A22               	incf	___ftdiv@f2+2,w
  7440  1649  02A5               	subwf	___ftdiv@f1+2,f
  7441  164A  142B               	bsf	___ftdiv@f3,0
  7442  164B                     l1787:	
  7443  164B  3001               	movlw	1
  7444  164C                     u2265:	
  7445  164C  1003               	clrc
  7446  164D  0DA3               	rlf	___ftdiv@f1,f
  7447  164E  0DA4               	rlf	___ftdiv@f1+1,f
  7448  164F  0DA5               	rlf	___ftdiv@f1+2,f
  7449  1650  3EFF               	addlw	-1
  7450  1651  1D03               	skipz
  7451  1652  2E4C               	goto	u2265
  7452  1653  3001               	movlw	1
  7453  1654  02AA               	subwf	___ftdiv@cntr,f
  7454  1655  1D03               	btfss	3,2
  7455  1656  2E2C               	goto	l1779
  7456  1657  082B               	movf	___ftdiv@f3,w
  7457  1658  00F0               	movwf	___ftpack@arg
  7458  1659  082C               	movf	___ftdiv@f3+1,w
  7459  165A  00F1               	movwf	___ftpack@arg+1
  7460  165B  082D               	movf	___ftdiv@f3+2,w
  7461  165C  00F2               	movwf	___ftpack@arg+2
  7462  165D  082E               	movf	___ftdiv@exp,w
  7463  165E  00A6               	movwf	??___ftdiv
  7464  165F  0826               	movf	??___ftdiv,w
  7465  1660  00F3               	movwf	___ftpack@exp
  7466  1661  082F               	movf	___ftdiv@sign,w
  7467  1662  00A7               	movwf	??___ftdiv+1
  7468  1663  0827               	movf	??___ftdiv+1,w
  7469  1664  00F4               	movwf	___ftpack@sign
  7470  1665  160A  118A  23B5   	fcall	___ftpack
  7471  1668  0870               	movf	?___ftpack,w
  7472  1669  1283               	bcf	3,5	;RP0=0, select bank0
  7473  166A  1303               	bcf	3,6	;RP1=0, select bank0
  7474  166B  00A0               	movwf	?___ftdiv
  7475  166C  0871               	movf	?___ftpack+1,w
  7476  166D  00A1               	movwf	?___ftdiv+1
  7477  166E  0872               	movf	?___ftpack+2,w
  7478  166F  00A2               	movwf	?___ftdiv+2
  7479  1670  0008               	return
  7480  1671                     __end_of___ftdiv:	
  7481                           
  7482                           	psect	text26
  7483  1196                     __ptext26:	
  7484 ;; *************** function ___awtoft *****************
  7485 ;; Defined at:
  7486 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awtoft.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;  c               2    8[COMMON] int 
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;  sign            1   13[COMMON] unsigned char 
  7491 ;; Return value:  Size  Location     Type
  7492 ;;                  3    8[COMMON] float 
  7493 ;; Registers used:
  7494 ;;		wreg, status,2, status,0, pclath, cstack
  7495 ;; Tracked objects:
  7496 ;;		On entry : 0/0
  7497 ;;		On exit  : 0/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7500 ;;      Params:         3       0       0       0       0
  7501 ;;      Locals:         1       0       0       0       0
  7502 ;;      Temps:          2       0       0       0       0
  7503 ;;      Totals:         6       0       0       0       0
  7504 ;;Total ram usage:        6 bytes
  7505 ;; Hardware stack levels used:    1
  7506 ;; Hardware stack levels required when called:    1
  7507 ;; This function calls:
  7508 ;;		___ftpack
  7509 ;; This function is called by:
  7510 ;;		_get_adcon
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           
  7515                           ;psect for function ___awtoft
  7516  1196                     ___awtoft:	
  7517                           
  7518                           ;incstack = 0
  7519                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7520  1196  01FD               	clrf	___awtoft@sign
  7521  1197  1FF9               	btfss	___awtoft@c+1,7
  7522  1198  29A0               	goto	l1749
  7523  1199  09F8               	comf	___awtoft@c,f
  7524  119A  09F9               	comf	___awtoft@c+1,f
  7525  119B  0AF8               	incf	___awtoft@c,f
  7526  119C  1903               	skipnz
  7527  119D  0AF9               	incf	___awtoft@c+1,f
  7528  119E  01FD               	clrf	___awtoft@sign
  7529  119F  0AFD               	incf	___awtoft@sign,f
  7530  11A0                     l1749:	
  7531  11A0  0878               	movf	___awtoft@c,w
  7532  11A1  00F0               	movwf	___ftpack@arg
  7533  11A2  0879               	movf	___awtoft@c+1,w
  7534  11A3  00F1               	movwf	___ftpack@arg+1
  7535  11A4  01F2               	clrf	___ftpack@arg+2
  7536  11A5  308E               	movlw	142
  7537  11A6  00FB               	movwf	??___awtoft
  7538  11A7  087B               	movf	??___awtoft,w
  7539  11A8  00F3               	movwf	___ftpack@exp
  7540  11A9  087D               	movf	___awtoft@sign,w
  7541  11AA  00FC               	movwf	??___awtoft+1
  7542  11AB  087C               	movf	??___awtoft+1,w
  7543  11AC  00F4               	movwf	___ftpack@sign
  7544  11AD  160A  118A  23B5   	fcall	___ftpack
  7545  11B0  0870               	movf	?___ftpack,w
  7546  11B1  00F8               	movwf	?___awtoft
  7547  11B2  0871               	movf	?___ftpack+1,w
  7548  11B3  00F9               	movwf	?___awtoft+1
  7549  11B4  0872               	movf	?___ftpack+2,w
  7550  11B5  00FA               	movwf	?___awtoft+2
  7551  11B6  0008               	return
  7552  11B7                     __end_of___awtoft:	
  7553                           
  7554                           	psect	text27
  7555  1140                     __ptext27:	
  7556 ;; *************** function ___ftneg *****************
  7557 ;; Defined at:
  7558 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  f1              3   52[BANK0 ] float 
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;		None
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  3   52[BANK0 ] float 
  7565 ;; Registers used:
  7566 ;;		wreg
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7572 ;;      Params:         0       3       0       0       0
  7573 ;;      Locals:         0       0       0       0       0
  7574 ;;      Temps:          0       0       0       0       0
  7575 ;;      Totals:         0       3       0       0       0
  7576 ;;Total ram usage:        3 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; This function calls:
  7579 ;;		Nothing
  7580 ;; This function is called by:
  7581 ;;		_get_pt
  7582 ;;		_printf
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           
  7587                           ;psect for function ___ftneg
  7588  1140                     ___ftneg:	
  7589                           
  7590                           ;incstack = 0
  7591                           ; Regs used in ___ftneg: [wreg]
  7592  1140  1283               	bcf	3,5	;RP0=0, select bank0
  7593  1141  1303               	bcf	3,6	;RP1=0, select bank0
  7594  1142  0856               	movf	___ftneg@f1+2,w
  7595  1143  0455               	iorwf	___ftneg@f1+1,w
  7596  1144  0454               	iorwf	___ftneg@f1,w
  7597  1145  1903               	skipnz
  7598  1146  0008               	return
  7599  1147  3080               	movlw	128
  7600  1148  06D6               	xorwf	___ftneg@f1+2,f
  7601  1149  0008               	return
  7602  114A                     __end_of___ftneg:	
  7603                           
  7604                           	psect	text28
  7605  0853                     __ptext28:	
  7606 ;; *************** function ___ftadd *****************
  7607 ;; Defined at:
  7608 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;  f1              3   55[BANK0 ] float 
  7611 ;;  f2              3   58[BANK0 ] float 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  exp1            1   67[BANK0 ] unsigned char 
  7614 ;;  exp2            1   66[BANK0 ] unsigned char 
  7615 ;;  sign            1   65[BANK0 ] unsigned char 
  7616 ;; Return value:  Size  Location     Type
  7617 ;;                  3   55[BANK0 ] float 
  7618 ;; Registers used:
  7619 ;;		wreg, status,2, status,0, pclath, cstack
  7620 ;; Tracked objects:
  7621 ;;		On entry : 0/0
  7622 ;;		On exit  : 0/0
  7623 ;;		Unchanged: 0/0
  7624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7625 ;;      Params:         0       6       0       0       0
  7626 ;;      Locals:         0       3       0       0       0
  7627 ;;      Temps:          0       4       0       0       0
  7628 ;;      Totals:         0      13       0       0       0
  7629 ;;Total ram usage:       13 bytes
  7630 ;; Hardware stack levels used:    1
  7631 ;; Hardware stack levels required when called:    1
  7632 ;; This function calls:
  7633 ;;		___ftpack
  7634 ;; This function is called by:
  7635 ;;		_get_pt
  7636 ;;		_get_temp
  7637 ;;		_printf
  7638 ;;		___ftsub
  7639 ;; This function uses a non-reentrant model
  7640 ;;
  7641                           
  7642                           
  7643                           ;psect for function ___ftadd
  7644  0853                     ___ftadd:	
  7645                           
  7646                           ;incstack = 0
  7647                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7648  0853  1283               	bcf	3,5	;RP0=0, select bank0
  7649  0854  1303               	bcf	3,6	;RP1=0, select bank0
  7650  0855  0857               	movf	___ftadd@f1,w
  7651  0856  00DD               	movwf	??___ftadd
  7652  0857  0858               	movf	___ftadd@f1+1,w
  7653  0858  00DE               	movwf	??___ftadd+1
  7654  0859  0859               	movf	___ftadd@f1+2,w
  7655  085A  00DF               	movwf	??___ftadd+2
  7656  085B  1003               	clrc
  7657  085C  0D5E               	rlf	??___ftadd+1,w
  7658  085D  0D5F               	rlf	??___ftadd+2,w
  7659  085E  00E0               	movwf	??___ftadd+3
  7660  085F  0860               	movf	??___ftadd+3,w
  7661  0860  00E3               	movwf	___ftadd@exp1
  7662  0861  085A               	movf	___ftadd@f2,w
  7663  0862  00DD               	movwf	??___ftadd
  7664  0863  085B               	movf	___ftadd@f2+1,w
  7665  0864  00DE               	movwf	??___ftadd+1
  7666  0865  085C               	movf	___ftadd@f2+2,w
  7667  0866  00DF               	movwf	??___ftadd+2
  7668  0867  1003               	clrc
  7669  0868  0D5E               	rlf	??___ftadd+1,w
  7670  0869  0D5F               	rlf	??___ftadd+2,w
  7671  086A  00E0               	movwf	??___ftadd+3
  7672  086B  0860               	movf	??___ftadd+3,w
  7673  086C  00E2               	movwf	___ftadd@exp2
  7674  086D  0863               	movf	___ftadd@exp1,w
  7675  086E  1903               	btfsc	3,2
  7676  086F  287C               	goto	l1967
  7677  0870  0862               	movf	___ftadd@exp2,w
  7678  0871  0263               	subwf	___ftadd@exp1,w
  7679  0872  1803               	skipnc
  7680  0873  2883               	goto	l1971
  7681  0874  0363               	decf	___ftadd@exp1,w
  7682  0875  3AFF               	xorlw	255
  7683  0876  0762               	addwf	___ftadd@exp2,w
  7684  0877  00DD               	movwf	??___ftadd
  7685  0878  3019               	movlw	25
  7686  0879  025D               	subwf	??___ftadd,w
  7687  087A  1C03               	skipc
  7688  087B  2883               	goto	l1971
  7689  087C                     l1967:	
  7690  087C  085A               	movf	___ftadd@f2,w
  7691  087D  00D7               	movwf	?___ftadd
  7692  087E  085B               	movf	___ftadd@f2+1,w
  7693  087F  00D8               	movwf	?___ftadd+1
  7694  0880  085C               	movf	___ftadd@f2+2,w
  7695  0881  00D9               	movwf	?___ftadd+2
  7696  0882  0008               	return
  7697  0883                     l1971:	
  7698  0883  0862               	movf	___ftadd@exp2,w
  7699  0884  1903               	btfsc	3,2
  7700  0885  0008               	return
  7701  0886  0863               	movf	___ftadd@exp1,w
  7702  0887  0262               	subwf	___ftadd@exp2,w
  7703  0888  1803               	skipnc
  7704  0889  2892               	goto	l1977
  7705  088A  0362               	decf	___ftadd@exp2,w
  7706  088B  3AFF               	xorlw	255
  7707  088C  0763               	addwf	___ftadd@exp1,w
  7708  088D  00DD               	movwf	??___ftadd
  7709  088E  3019               	movlw	25
  7710  088F  025D               	subwf	??___ftadd,w
  7711  0890  1803               	btfsc	3,0
  7712  0891  0008               	return
  7713  0892                     l1977:	
  7714  0892  3006               	movlw	6
  7715  0893  00DD               	movwf	??___ftadd
  7716  0894  085D               	movf	??___ftadd,w
  7717  0895  00E1               	movwf	___ftadd@sign
  7718  0896  1BD9               	btfsc	___ftadd@f1+2,7
  7719  0897  17E1               	bsf	___ftadd@sign,7
  7720  0898  1BDC               	btfsc	___ftadd@f2+2,7
  7721  0899  1761               	bsf	___ftadd@sign,6
  7722  089A  17D8               	bsf	___ftadd@f1+1,7
  7723  089B  30FF               	movlw	255
  7724  089C  05D7               	andwf	___ftadd@f1,f
  7725  089D  30FF               	movlw	255
  7726  089E  05D8               	andwf	___ftadd@f1+1,f
  7727  089F  3000               	movlw	0
  7728  08A0  05D9               	andwf	___ftadd@f1+2,f
  7729  08A1  17DB               	bsf	___ftadd@f2+1,7
  7730  08A2  30FF               	movlw	255
  7731  08A3  05DA               	andwf	___ftadd@f2,f
  7732  08A4  30FF               	movlw	255
  7733  08A5  05DB               	andwf	___ftadd@f2+1,f
  7734  08A6  3000               	movlw	0
  7735  08A7  05DC               	andwf	___ftadd@f2+2,f
  7736  08A8  0862               	movf	___ftadd@exp2,w
  7737  08A9  0263               	subwf	___ftadd@exp1,w
  7738  08AA  1803               	skipnc
  7739  08AB  28D2               	goto	l1999
  7740  08AC                     l1989:	
  7741  08AC  3001               	movlw	1
  7742  08AD                     u2735:	
  7743  08AD  1003               	clrc
  7744  08AE  0DDA               	rlf	___ftadd@f2,f
  7745  08AF  0DDB               	rlf	___ftadd@f2+1,f
  7746  08B0  0DDC               	rlf	___ftadd@f2+2,f
  7747  08B1  3EFF               	addlw	-1
  7748  08B2  1D03               	skipz
  7749  08B3  28AD               	goto	u2735
  7750  08B4  3001               	movlw	1
  7751  08B5  02E2               	subwf	___ftadd@exp2,f
  7752  08B6  0862               	movf	___ftadd@exp2,w
  7753  08B7  0663               	xorwf	___ftadd@exp1,w
  7754  08B8  1903               	skipnz
  7755  08B9  28CD               	goto	l1997
  7756  08BA  3001               	movlw	1
  7757  08BB  02E1               	subwf	___ftadd@sign,f
  7758  08BC  0861               	movf	___ftadd@sign,w
  7759  08BD  3907               	andlw	7
  7760  08BE  1903               	btfsc	3,2
  7761  08BF  28CD               	goto	l1997
  7762  08C0  28AC               	goto	l1989
  7763  08C1                     l1995:	
  7764  08C1  3001               	movlw	1
  7765  08C2                     u2765:	
  7766  08C2  1003               	clrc
  7767  08C3  0CD9               	rrf	___ftadd@f1+2,f
  7768  08C4  0CD8               	rrf	___ftadd@f1+1,f
  7769  08C5  0CD7               	rrf	___ftadd@f1,f
  7770  08C6  3EFF               	addlw	-1
  7771  08C7  1D03               	skipz
  7772  08C8  28C2               	goto	u2765
  7773  08C9  3001               	movlw	1
  7774  08CA  00DD               	movwf	??___ftadd
  7775  08CB  085D               	movf	??___ftadd,w
  7776  08CC  07E3               	addwf	___ftadd@exp1,f
  7777  08CD                     l1997:	
  7778  08CD  0863               	movf	___ftadd@exp1,w
  7779  08CE  0662               	xorwf	___ftadd@exp2,w
  7780  08CF  1903               	btfsc	3,2
  7781  08D0  28FB               	goto	l485
  7782  08D1  28C1               	goto	l1995
  7783  08D2                     l1999:	
  7784  08D2  0863               	movf	___ftadd@exp1,w
  7785  08D3  0262               	subwf	___ftadd@exp2,w
  7786  08D4  1803               	skipnc
  7787  08D5  28FB               	goto	l485
  7788  08D6                     l2001:	
  7789  08D6  3001               	movlw	1
  7790  08D7                     u2795:	
  7791  08D7  1003               	clrc
  7792  08D8  0DD7               	rlf	___ftadd@f1,f
  7793  08D9  0DD8               	rlf	___ftadd@f1+1,f
  7794  08DA  0DD9               	rlf	___ftadd@f1+2,f
  7795  08DB  3EFF               	addlw	-1
  7796  08DC  1D03               	skipz
  7797  08DD  28D7               	goto	u2795
  7798  08DE  3001               	movlw	1
  7799  08DF  02E3               	subwf	___ftadd@exp1,f
  7800  08E0  0862               	movf	___ftadd@exp2,w
  7801  08E1  0663               	xorwf	___ftadd@exp1,w
  7802  08E2  1903               	skipnz
  7803  08E3  28F7               	goto	l2009
  7804  08E4  3001               	movlw	1
  7805  08E5  02E1               	subwf	___ftadd@sign,f
  7806  08E6  0861               	movf	___ftadd@sign,w
  7807  08E7  3907               	andlw	7
  7808  08E8  1903               	btfsc	3,2
  7809  08E9  28F7               	goto	l2009
  7810  08EA  28D6               	goto	l2001
  7811  08EB                     l2007:	
  7812  08EB  3001               	movlw	1
  7813  08EC                     u2825:	
  7814  08EC  1003               	clrc
  7815  08ED  0CDC               	rrf	___ftadd@f2+2,f
  7816  08EE  0CDB               	rrf	___ftadd@f2+1,f
  7817  08EF  0CDA               	rrf	___ftadd@f2,f
  7818  08F0  3EFF               	addlw	-1
  7819  08F1  1D03               	skipz
  7820  08F2  28EC               	goto	u2825
  7821  08F3  3001               	movlw	1
  7822  08F4  00DD               	movwf	??___ftadd
  7823  08F5  085D               	movf	??___ftadd,w
  7824  08F6  07E2               	addwf	___ftadd@exp2,f
  7825  08F7                     l2009:	
  7826  08F7  0863               	movf	___ftadd@exp1,w
  7827  08F8  0662               	xorwf	___ftadd@exp2,w
  7828  08F9  1D03               	skipz
  7829  08FA  28EB               	goto	l2007
  7830  08FB                     l485:	
  7831  08FB  1FE1               	btfss	___ftadd@sign,7
  7832  08FC  290D               	goto	l2013
  7833  08FD  30FF               	movlw	255
  7834  08FE  06D7               	xorwf	___ftadd@f1,f
  7835  08FF  30FF               	movlw	255
  7836  0900  06D8               	xorwf	___ftadd@f1+1,f
  7837  0901  30FF               	movlw	255
  7838  0902  06D9               	xorwf	___ftadd@f1+2,f
  7839  0903  3001               	movlw	1
  7840  0904  07D7               	addwf	___ftadd@f1,f
  7841  0905  3000               	movlw	0
  7842  0906  1803               	skipnc
  7843  0907  3001               	movlw	1
  7844  0908  07D8               	addwf	___ftadd@f1+1,f
  7845  0909  3000               	movlw	0
  7846  090A  1803               	skipnc
  7847  090B  3001               	movlw	1
  7848  090C  07D9               	addwf	___ftadd@f1+2,f
  7849  090D                     l2013:	
  7850  090D  1F61               	btfss	___ftadd@sign,6
  7851  090E  291F               	goto	l2017
  7852  090F  30FF               	movlw	255
  7853  0910  06DA               	xorwf	___ftadd@f2,f
  7854  0911  30FF               	movlw	255
  7855  0912  06DB               	xorwf	___ftadd@f2+1,f
  7856  0913  30FF               	movlw	255
  7857  0914  06DC               	xorwf	___ftadd@f2+2,f
  7858  0915  3001               	movlw	1
  7859  0916  07DA               	addwf	___ftadd@f2,f
  7860  0917  3000               	movlw	0
  7861  0918  1803               	skipnc
  7862  0919  3001               	movlw	1
  7863  091A  07DB               	addwf	___ftadd@f2+1,f
  7864  091B  3000               	movlw	0
  7865  091C  1803               	skipnc
  7866  091D  3001               	movlw	1
  7867  091E  07DC               	addwf	___ftadd@f2+2,f
  7868  091F                     l2017:	
  7869  091F  01E1               	clrf	___ftadd@sign
  7870  0920  0857               	movf	___ftadd@f1,w
  7871  0921  07DA               	addwf	___ftadd@f2,f
  7872  0922  0858               	movf	___ftadd@f1+1,w
  7873  0923  1103               	clrz
  7874  0924  1803               	skipnc
  7875  0925  0A58               	incf	___ftadd@f1+1,w
  7876  0926  1D03               	btfss	3,2
  7877  0927  07DB               	addwf	___ftadd@f2+1,f
  7878  0928  0859               	movf	___ftadd@f1+2,w
  7879  0929  1103               	clrz
  7880  092A  1803               	skipnc
  7881  092B  0A59               	incf	___ftadd@f1+2,w
  7882  092C  1D03               	btfss	3,2
  7883  092D  07DC               	addwf	___ftadd@f2+2,f
  7884  092E  1FDC               	btfss	___ftadd@f2+2,7
  7885  092F  2942               	goto	l2027
  7886  0930  30FF               	movlw	255
  7887  0931  06DA               	xorwf	___ftadd@f2,f
  7888  0932  30FF               	movlw	255
  7889  0933  06DB               	xorwf	___ftadd@f2+1,f
  7890  0934  30FF               	movlw	255
  7891  0935  06DC               	xorwf	___ftadd@f2+2,f
  7892  0936  3001               	movlw	1
  7893  0937  07DA               	addwf	___ftadd@f2,f
  7894  0938  3000               	movlw	0
  7895  0939  1803               	skipnc
  7896  093A  3001               	movlw	1
  7897  093B  07DB               	addwf	___ftadd@f2+1,f
  7898  093C  3000               	movlw	0
  7899  093D  1803               	skipnc
  7900  093E  3001               	movlw	1
  7901  093F  07DC               	addwf	___ftadd@f2+2,f
  7902  0940  01E1               	clrf	___ftadd@sign
  7903  0941  0AE1               	incf	___ftadd@sign,f
  7904  0942                     l2027:	
  7905  0942  085A               	movf	___ftadd@f2,w
  7906  0943  00F0               	movwf	___ftpack@arg
  7907  0944  085B               	movf	___ftadd@f2+1,w
  7908  0945  00F1               	movwf	___ftpack@arg+1
  7909  0946  085C               	movf	___ftadd@f2+2,w
  7910  0947  00F2               	movwf	___ftpack@arg+2
  7911  0948  0863               	movf	___ftadd@exp1,w
  7912  0949  00DD               	movwf	??___ftadd
  7913  094A  085D               	movf	??___ftadd,w
  7914  094B  00F3               	movwf	___ftpack@exp
  7915  094C  0861               	movf	___ftadd@sign,w
  7916  094D  00DE               	movwf	??___ftadd+1
  7917  094E  085E               	movf	??___ftadd+1,w
  7918  094F  00F4               	movwf	___ftpack@sign
  7919  0950  160A  118A  23B5   	fcall	___ftpack
  7920  0953  0870               	movf	?___ftpack,w
  7921  0954  1283               	bcf	3,5	;RP0=0, select bank0
  7922  0955  1303               	bcf	3,6	;RP1=0, select bank0
  7923  0956  00D7               	movwf	?___ftadd
  7924  0957  0871               	movf	?___ftpack+1,w
  7925  0958  00D8               	movwf	?___ftadd+1
  7926  0959  0872               	movf	?___ftpack+2,w
  7927  095A  00D9               	movwf	?___ftadd+2
  7928  095B  0008               	return
  7929  095C                     __end_of___ftadd:	
  7930                           
  7931                           	psect	text29
  7932  13B5                     __ptext29:	
  7933 ;; *************** function ___ftpack *****************
  7934 ;; Defined at:
  7935 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  7936 ;; Parameters:    Size  Location     Type
  7937 ;;  arg             3    0[COMMON] unsigned um
  7938 ;;  exp             1    3[COMMON] unsigned char 
  7939 ;;  sign            1    4[COMMON] unsigned char 
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;		None
  7942 ;; Return value:  Size  Location     Type
  7943 ;;                  3    0[COMMON] float 
  7944 ;; Registers used:
  7945 ;;		wreg, status,2, status,0
  7946 ;; Tracked objects:
  7947 ;;		On entry : 0/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7951 ;;      Params:         5       0       0       0       0
  7952 ;;      Locals:         0       0       0       0       0
  7953 ;;      Temps:          3       0       0       0       0
  7954 ;;      Totals:         8       0       0       0       0
  7955 ;;Total ram usage:        8 bytes
  7956 ;; Hardware stack levels used:    1
  7957 ;; This function calls:
  7958 ;;		Nothing
  7959 ;; This function is called by:
  7960 ;;		___awtoft
  7961 ;;		___ftadd
  7962 ;;		___ftdiv
  7963 ;;		___ftmul
  7964 ;;		___lltoft
  7965 ;;		___lwtoft
  7966 ;; This function uses a non-reentrant model
  7967 ;;
  7968                           
  7969                           
  7970                           ;psect for function ___ftpack
  7971  13B5                     ___ftpack:	
  7972                           
  7973                           ;incstack = 0
  7974                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7975  13B5  0873               	movf	___ftpack@exp,w
  7976  13B6  1903               	btfsc	3,2
  7977  13B7  2BBD               	goto	l1667
  7978  13B8  0872               	movf	___ftpack@arg+2,w
  7979  13B9  0471               	iorwf	___ftpack@arg+1,w
  7980  13BA  0470               	iorwf	___ftpack@arg,w
  7981  13BB  1D03               	skipz
  7982  13BC  2BD0               	goto	l1673
  7983  13BD                     l1667:	
  7984  13BD  3000               	movlw	0
  7985  13BE  00F0               	movwf	?___ftpack
  7986  13BF  3000               	movlw	0
  7987  13C0  00F1               	movwf	?___ftpack+1
  7988  13C1  3000               	movlw	0
  7989  13C2  00F2               	movwf	?___ftpack+2
  7990  13C3  0008               	return
  7991  13C4                     l1671:	
  7992  13C4  3001               	movlw	1
  7993  13C5  00F5               	movwf	??___ftpack
  7994  13C6  0875               	movf	??___ftpack,w
  7995  13C7  07F3               	addwf	___ftpack@exp,f
  7996  13C8  3001               	movlw	1
  7997  13C9                     u2025:	
  7998  13C9  1003               	clrc
  7999  13CA  0CF2               	rrf	___ftpack@arg+2,f
  8000  13CB  0CF1               	rrf	___ftpack@arg+1,f
  8001  13CC  0CF0               	rrf	___ftpack@arg,f
  8002  13CD  3EFF               	addlw	-1
  8003  13CE  1D03               	skipz
  8004  13CF  2BC9               	goto	u2025
  8005  13D0                     l1673:	
  8006  13D0  30FE               	movlw	254
  8007  13D1  0572               	andwf	___ftpack@arg+2,w
  8008  13D2  1903               	btfsc	3,2
  8009  13D3  2BEB               	goto	l454
  8010  13D4  2BC4               	goto	l1671
  8011  13D5                     l1675:	
  8012  13D5  3001               	movlw	1
  8013  13D6  00F5               	movwf	??___ftpack
  8014  13D7  0875               	movf	??___ftpack,w
  8015  13D8  07F3               	addwf	___ftpack@exp,f
  8016  13D9  3001               	movlw	1
  8017  13DA  07F0               	addwf	___ftpack@arg,f
  8018  13DB  3000               	movlw	0
  8019  13DC  1803               	skipnc
  8020  13DD  3001               	movlw	1
  8021  13DE  07F1               	addwf	___ftpack@arg+1,f
  8022  13DF  3000               	movlw	0
  8023  13E0  1803               	skipnc
  8024  13E1  3001               	movlw	1
  8025  13E2  07F2               	addwf	___ftpack@arg+2,f
  8026  13E3  3001               	movlw	1
  8027  13E4                     u2045:	
  8028  13E4  1003               	clrc
  8029  13E5  0CF2               	rrf	___ftpack@arg+2,f
  8030  13E6  0CF1               	rrf	___ftpack@arg+1,f
  8031  13E7  0CF0               	rrf	___ftpack@arg,f
  8032  13E8  3EFF               	addlw	-1
  8033  13E9  1D03               	skipz
  8034  13EA  2BE4               	goto	u2045
  8035  13EB                     l454:	
  8036  13EB  30FF               	movlw	255
  8037  13EC  0572               	andwf	___ftpack@arg+2,w
  8038  13ED  1903               	btfsc	3,2
  8039  13EE  2BFA               	goto	l1683
  8040  13EF  2BD5               	goto	l1675
  8041  13F0                     l1681:	
  8042  13F0  3001               	movlw	1
  8043  13F1  02F3               	subwf	___ftpack@exp,f
  8044  13F2  3001               	movlw	1
  8045  13F3                     u2065:	
  8046  13F3  1003               	clrc
  8047  13F4  0DF0               	rlf	___ftpack@arg,f
  8048  13F5  0DF1               	rlf	___ftpack@arg+1,f
  8049  13F6  0DF2               	rlf	___ftpack@arg+2,f
  8050  13F7  3EFF               	addlw	-1
  8051  13F8  1D03               	skipz
  8052  13F9  2BF3               	goto	u2065
  8053  13FA                     l1683:	
  8054  13FA  1BF1               	btfsc	___ftpack@arg+1,7
  8055  13FB  2C00               	goto	l461
  8056  13FC  3002               	movlw	2
  8057  13FD  0273               	subwf	___ftpack@exp,w
  8058  13FE  1803               	skipnc
  8059  13FF  2BF0               	goto	l1681
  8060  1400                     l461:	
  8061  1400  1873               	btfsc	___ftpack@exp,0
  8062  1401  2C08               	goto	l462
  8063  1402  30FF               	movlw	255
  8064  1403  05F0               	andwf	___ftpack@arg,f
  8065  1404  307F               	movlw	127
  8066  1405  05F1               	andwf	___ftpack@arg+1,f
  8067  1406  30FF               	movlw	255
  8068  1407  05F2               	andwf	___ftpack@arg+2,f
  8069  1408                     l462:	
  8070  1408  1003               	clrc
  8071  1409  0CF3               	rrf	___ftpack@exp,f
  8072  140A  0873               	movf	___ftpack@exp,w
  8073  140B  00F5               	movwf	??___ftpack
  8074  140C  01F6               	clrf	??___ftpack+1
  8075  140D  01F7               	clrf	??___ftpack+2
  8076  140E  3010               	movlw	16
  8077  140F                     u2105:	
  8078  140F  1003               	clrc
  8079  1410  0DF5               	rlf	??___ftpack,f
  8080  1411  0DF6               	rlf	??___ftpack+1,f
  8081  1412  0DF7               	rlf	??___ftpack+2,f
  8082  1413  3EFF               	addlw	-1
  8083  1414  1D03               	skipz
  8084  1415  2C0F               	goto	u2105
  8085  1416  0875               	movf	??___ftpack,w
  8086  1417  04F0               	iorwf	___ftpack@arg,f
  8087  1418  0876               	movf	??___ftpack+1,w
  8088  1419  04F1               	iorwf	___ftpack@arg+1,f
  8089  141A  0877               	movf	??___ftpack+2,w
  8090  141B  04F2               	iorwf	___ftpack@arg+2,f
  8091  141C  0874               	movf	___ftpack@sign,w
  8092  141D  1903               	btfsc	3,2
  8093  141E  0008               	return
  8094  141F  17F2               	bsf	___ftpack@arg+2,7
  8095  1420  0008               	return
  8096  1421                     __end_of___ftpack:	
  8097                           
  8098                           	psect	text30
  8099  114A                     __ptext30:	
  8100 ;; *************** function _ad_con_init *****************
  8101 ;; Defined at:
  8102 ;;		line 31 in file "AD_value.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;		None
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;		None
  8107 ;; Return value:  Size  Location     Type
  8108 ;;		None               void
  8109 ;; Registers used:
  8110 ;;		wreg
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/0
  8113 ;;		On exit  : 0/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8116 ;;      Params:         0       0       0       0       0
  8117 ;;      Locals:         0       0       0       0       0
  8118 ;;      Temps:          0       0       0       0       0
  8119 ;;      Totals:         0       0       0       0       0
  8120 ;;Total ram usage:        0 bytes
  8121 ;; Hardware stack levels used:    1
  8122 ;; This function calls:
  8123 ;;		Nothing
  8124 ;; This function is called by:
  8125 ;;		_main
  8126 ;; This function uses a non-reentrant model
  8127 ;;
  8128                           
  8129                           
  8130                           ;psect for function _ad_con_init
  8131  114A                     _ad_con_init:	
  8132                           
  8133                           ;AD_value.c: 33: PORTAbits.RA0 = 0;
  8134                           
  8135                           ;incstack = 0
  8136                           ; Regs used in _ad_con_init: [wreg]
  8137  114A  1283               	bcf	3,5	;RP0=0, select bank0
  8138  114B  1303               	bcf	3,6	;RP1=0, select bank0
  8139  114C  1005               	bcf	5,0	;volatile
  8140                           
  8141                           ;AD_value.c: 34: PORTAbits.RA3 = 0;
  8142  114D  1185               	bcf	5,3	;volatile
  8143                           
  8144                           ;AD_value.c: 35: TRISAbits.TRISA0 = 1;
  8145  114E  1683               	bsf	3,5	;RP0=1, select bank1
  8146  114F  1303               	bcf	3,6	;RP1=0, select bank1
  8147  1150  1405               	bsf	5,0	;volatile
  8148                           
  8149                           ;AD_value.c: 36: TRISAbits.TRISA3 = 1;
  8150  1151  1585               	bsf	5,3	;volatile
  8151                           
  8152                           ;AD_value.c: 37: ADCON1 = 0b00000001;
  8153  1152  3001               	movlw	1
  8154  1153  009F               	movwf	31	;volatile
  8155  1154  0008               	return
  8156  1155                     __end_of_ad_con_init:	
  8157  007E                     btemp	set	126	;btemp
  8158  007E                     wtemp	set	126
  8159  007E                     wtemp0	set	126
  8160  0080                     wtemp1	set	128
  8161  0082                     wtemp2	set	130
  8162  0084                     wtemp3	set	132
  8163  0086                     wtemp4	set	134
  8164  0088                     wtemp5	set	136
  8165  007F                     wtemp6	set	127
  8166  007E                     ttemp	set	126
  8167  007E                     ttemp0	set	126
  8168  0081                     ttemp1	set	129
  8169  0084                     ttemp2	set	132
  8170  0087                     ttemp3	set	135
  8171  007F                     ttemp4	set	127
  8172  007E                     ltemp	set	126
  8173  007E                     ltemp0	set	126
  8174  0082                     ltemp1	set	130
  8175  0086                     ltemp2	set	134
  8176  0080                     ltemp3	set	128


Data Sizes:
    Strings     30
    Constant    120
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      77
    BANK1            80     73      73
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _printf->___lldiv
    _printf->___lltoft
    _printf->__div_to_l_
    ___bmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___ftsub->___lltoft
    _get_adcon->___awtoft
    ___lwtoft->___ftpack
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___ftsub
    _printf->_get_temp
    _scale->___ftmul
    _fround->___ftmul
    ___bmul->___awdiv
    ___fttol->_scale
    ___ftsub->___ftadd
    _get_temp->_get_pt
    _get_pt->___ftadd
    _get_adcon->___ftmul
    ___ftmul->___ftdiv
    ___ftneg->_get_adcon
    ___ftadd->___ftneg

Critical Paths under _main in BANK1

    _main->_printf
    _printf->_get_temp
    _get_temp->_get_pt

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   65320
                        _ad_con_init
                           _get_temp
                             _printf
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              39    36      3   36183
                                             74 BANK0      3     0      3
                                             44 BANK1     29    29      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                           _get_temp (ARG)
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               12     9      3    7784
                                             32 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              19    16      3    7586
                                             32 BANK0     16    13      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                             12 COMMON     1     1      0
                                              4 BANK0      3     2      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1250
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1360
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1276
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1907
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     477
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             41 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3752
                                             68 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     560
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            14    11      3   29137
                                             71 BANK0      3     0      3
                                             33 BANK1     11    11      0
                            ___ftadd
                            ___ftdiv
                             _get_pt
 ---------------------------------------------------------------------------------
 (2) _get_pt                                              39    36      3   22506
                                             68 BANK0      3     0      3
                                              0 BANK1     33    33      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                          _get_adcon
 ---------------------------------------------------------------------------------
 (3) _get_adcon                                           20    17      3   11253
                                             32 BANK0     20    17      3
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                          _bit_shift
 ---------------------------------------------------------------------------------
 (4) _bit_shift                                           13    11      2     333
                                              0 COMMON    13    11      2
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    1860
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    4125
                                             16 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6    2913
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             6     3      3    1929
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     204
                                             52 BANK0      3     0      3
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                          _get_adcon (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3579
                                             55 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             _fround (ARG)
                          _get_adcon (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1785
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _ad_con_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ad_con_init
   _get_temp
     ___ftadd
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         _get_adcon (ARG)
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___lwtoft
             ___ftpack
           _bit_shift
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
       _get_adcon (ARG)
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___lwtoft
           ___ftpack
         _bit_shift
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     _get_pt
       ___ftadd
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           _get_adcon (ARG)
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___lwtoft
               ___ftpack
             _bit_shift
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
         _get_adcon (ARG)
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___lwtoft
             ___ftpack
           _bit_shift
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         _get_adcon (ARG)
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___lwtoft
             ___ftpack
           _bit_shift
       _get_adcon
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___lwtoft
           ___ftpack
         _bit_shift
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         _get_adcon (ARG)
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___lwtoft
             ___ftpack
           _bit_shift
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
       _get_adcon (ARG)
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___lwtoft
           ___ftpack
         _bit_shift
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftneg
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       _get_adcon (ARG)
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___lwtoft
           ___ftpack
         _bit_shift
     ___ftsub
       ___ftadd
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           _get_adcon (ARG)
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___lwtoft
               ___ftpack
             _bit_shift
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
         _get_adcon (ARG)
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___lwtoft
             ___ftpack
           _bit_shift
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
     _get_temp (ARG)
       ___ftadd
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           _get_adcon (ARG)
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___lwtoft
               ___ftpack
             _bit_shift
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
         _get_adcon (ARG)
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___lwtoft
             ___ftpack
           _bit_shift
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       _get_pt
         ___ftadd
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             _get_adcon (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___lwtoft
                 ___ftpack
               _bit_shift
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
           _get_adcon (ARG)
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___lwtoft
               ___ftpack
             _bit_shift
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           _get_adcon (ARG)
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___lwtoft
               ___ftpack
             _bit_shift
         _get_adcon
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___lwtoft
             ___ftpack
           _bit_shift
     _isdigit (ARG)
     _putch (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
   _uart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      4D       5       96.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     49      49       7       91.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Jan 14 16:06:52 2016

                      pc 0002           ___bmul@product 0025              __CFG_CP$OFF 0000  
                     l42 1139                       l84 14AA                       l78 148B  
           ___awdiv@sign 0021                       fsr 0004      ___wmul@multiplicand 0072  
           ___ftadd@exp1 0063             ___ftadd@exp2 0062     __size_of_ad_con_init 000B  
           ___ftadd@sign 0061                      l145 02DD                      l511 0039  
                    l192 07FB                      l521 00BE                      l442 0A82  
                    l434 0A39                      l186 07B6                      l276 11E2  
                    l188 07E8                      l461 1400                      l462 1408  
                    l454 13EB                      l562 159F                      l485 08FB  
                    _RD4 0044             __CFG_CPD$OFF 0000                      fsr0 0004  
                    indf 0000             ___awmod@sign 0076             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000             ___ftdiv@cntr 002A             ___ftdiv@sign 002F  
                   l2001 08D6                     l2013 090D                     l2101 0B52  
                   l2007 08EB                     l2111 0BDF                     l2017 091F  
                   l2009 08F7                     l2027 0942                     l2107 0BC0  
                   l2205 099C                     l2125 0D0A                     l2311 1577  
                   l2231 0A5A                     l2215 09E3                     l2119 0C9C  
                   l2321 15A2                     l2313 1587                     l2241 0A85  
                   l2233 0A6A                     l2161 005A                     l2137 116D  
                   l2147 0021                     l2411 02DF                     l2403 029D  
                   l2325 15B0                     l2181 00A6                     l2085 0232  
                   l2077 01A8                     l2413 02F3                     l2405 02D7  
                   l2263 1321                     l2319 1594                     l2335 1367  
                   l2247 11DA                     l2239 0A77                     l2511 0644  
                   l1801 1745                     l1705 1434                     l2345 139F  
                   l2337 1377                     l2361 081F                     l2169 007A  
                   l2521 066E                     l2267 1348                     l2283 11C0  
                   l2187 00B3                     l2179 0096                     l2515 0652  
                   l2419 0303                     l1725 146A                     l2293 1545  
                   l2349 13AC                     l2365 083D                     l2189 00C1  
                   l2509 05DC                     l2461 0484                     l2453 0421  
                   l2445 03B4                     l2429 0352                     l1671 13C4  
                   l1831 17C2                     l1823 17AA                     l1807 175B  
                   l1719 145D                     l2359 080F                     l2199 097D  
                   l1911 12E2                     l1903 12BE                     l2543 07A1  
                   l2527 0688                     l1681 13F0                     l1673 13D0  
                   l1737 149E                     l2369 084A                     l2377 11FD  
                   l1905 12CC                     l2553 07CE                     l2473 04D9  
                   l2457 043E                     l2545 07A6                     l1683 13FA  
                   l1675 13D5                     l1667 13BD                     l1835 17D2  
                   l1819 179A                     l2379 120F                     l1915 12ED  
                   l1931 125E                     l2539 0793                     l2483 051B  
                   l1749 11A0                     l1765 15E7                     l2493 0590  
                   l2469 04C2                     l2389 0288                     l1759 15D1  
                   l1919 12F5                     l1943 126B                     l1935 1265  
                   l1871 1179                     l2487 058A                     l2559 026B  
                   l2577 16ED                     l2569 168C                     l1945 1279  
                   l1953 1292                     l1971 0883                     l1787 164B  
                   l1779 162C                     l1867 1173                     l2499 05CC  
                   l1893 12B6                     l1957 129A                     l1949 1287  
                   l2589 123A                     l1967 087C                     l1887 12AB  
                   l1977 0892                     l1995 08C1                     l1997 08CD  
                   l1989 08AC                     l1999 08D2                     STR_1 108E  
                   STR_2 107E                     u2105 140F                     u2025 13C9  
                   u2045 13E4                     u2125 1432                     u2135 1444  
                   u3015 005C                     u2065 13F3                     u2225 15F9  
                   u2305 1767                     u2145 145B                     u3105 00B5  
                   u3025 006D                     u2235 160B                     u2315 1779  
                   u2155 1468                     u3035 007B                     u2245 162D  
                   u2405 17DB                     u2165 1482                     u2255 163E  
                   u2175 1485                     u3311 133B                     u3312 133C  
                   u2265 164C                     u2345 17AB                     u2185 149C  
                   u3313 1341                     u3225 0A79                     u3145 09E5  
                   u2505 12CD                     u3314 1342                     u2355 17B3  
                   u3155 0A14                     u3075 0097                     u2515 12D9  
                   u2525 12E3                     u2605 127F                     u3415 1596  
                   u3255 11E3                     u2615 1288                     u3265 11EA  
                   u2395 17D3                     u3291 1314                     u3355 154C  
                   u3195 0A5B             printf@tmpval 00DF                     u3292 1315  
                   u3293 131A                     u3525 0813                     u2485 12C1  
                   u3294 131B                     u2735 08AD                     u3455 136B  
                   u2825 08EC                     u3385 1578                     u3545 082D  
                   u2585 126E                     u3705 0449                     u3475 1379  
                   u3555 083E                     u3715 048F                     u2765 08C2  
                   u3485 138E                     u3495 13A0                     u3575 1202  
                   u3815 05EA                     u3745 04C0                     u3665 036A  
                   u2795 08D7                     u3835 065B                     _RCIF 0065  
                   u3925 07C5                     u3845 0668                     u3935 07DF  
                   u3775 0593                     u3865 06F8                     u3785 05C2  
                   u3875 075B                     u3965 168A                     u3975 16EB  
                   _TXIF 0064             __CFG_WRT$OFF 0000   __end_ofget_adcon@range 107E  
                   _main 1224             ___ftpack@arg 0070             ___ftpack@exp 0073  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0000                     ttemp 007E                     wtemp 007E  
      ___bmul@multiplier 0026             ___ftmul@cntr 003E             ___ftmul@sign 003F  
           ___fttol@exp1 0056             ___fttol@lval 0052      bit_shift@my_adres_h 0074  
    bit_shift@my_adres_l 0070                    ?_main 0070          __end_of___awdiv 12FA  
        __end_of___ftadd 095C            __CFG_WDTE$OFF 0000          __end_of___awmod 129F  
        __end_of___ftdiv 1671          __end_of___ftneg 114A          __end_of___lldiv 13B5  
        __end_of___ftmul 1800          ___awdiv@divisor 0077          __end_of___llmod 0853  
        __end_of___ftsub 11D8          __end_of___fttol 15B9          ___awdiv@counter 0020  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _TXREG 0019                    _TXSTA 0098            __CFG_PWRTE$ON 0000  
           ___lltoft@exp 007D            ___awtoft@sign 007D          __end_of_dpowers 102E  
                  _scale 0A8E          __end_of_isdigit 116F            ___ftpack@sign 0074  
                  _putch 1138                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07FC             __end_of_main 1254  
                 ??_main 007E            ___fttol@sign1 0051     __size_of__tdiv_to_l_ 00C3  
                 _ADCON0 001F                   _ADCON1 009F         ___llmod@dividend 0074  
                 ?_scale 0040                   _ADRESH 001E                   _ADRESL 009E  
       ___awdiv@dividend 0079         __end_of___awtoft 11B7                   ?_putch 0070  
       __end_of___ftpack 1421         __end_of___lltoft 1224         __end_of___lwtoft 1196  
                 _TRISC7 043F         __end_of__powers_ 107C         __end_of_get_temp 172D  
                 ___bmul 116F                   ___ftge 12FA                   ___wmul 11D8  
              ??___awdiv 007B                ??___ftadd 005D                ??___awmod 0074  
              ??___ftdiv 0026                ??___ftneg 007E                ??___lldiv 0078  
              ??___ftmul 0036                ??___llmod 0078                ??___ftsub 007E  
              ??___fttol 004D                   _get_pt 0D29                   _fround 00CA  
       ___awdiv@quotient 0022          ___awmod@divisor 0070          ___awmod@counter 0075  
                 _printf 0264    ___ftmul@f3_as_product 003B        bit_shift@ad_value 0075  
              ??_isdigit 0070        bit_shift@bit_mask 0079  __end_of__initialization 07FC  
             ___ftadd@f1 0057               ___ftadd@f2 005A               ___ftge@ff1 0070  
             ___ftge@ff2 0073               ___ftdiv@f1 0023               ___ftdiv@f2 0020  
             ___ftdiv@f3 002B               ___ftneg@f1 0054               ___awtoft@c 0078  
    ___bmul@multiplicand 0024               ___ftmul@f1 0030               ___ftmul@f2 0033  
             ___ftsub@f1 0067               ___ftsub@f2 0064               ___fttol@f1 0049  
         __pcstackCOMMON 0070               ___lltoft@c 0078            __end_of_scale 0D29  
          __end_of_putch 1140               ___lwtoft@c 0078       __size_of_bit_shift 0082  
             __div_to_l_ 095C       __size_of_get_adcon 0088          __div_to_l_@exp1 0025  
        __div_to_l_@cntr 0024                  ??_scale 0043          __div_to_l_@quot 0020  
                ??_putch 0070   get_adcon@voltage_value 004F            __div_to_l_@f1 0070  
          __div_to_l_@f2 0073               __pmaintext 1224                  ?___bmul 0024  
                ?___ftge 0070                  ?___wmul 0070            ??_ad_con_init 0070  
                ?_get_pt 0064                  ?_fround 0040                ?___awtoft 0078  
              ?___ftpack 0070                  ?_printf 006A                ?___lltoft 0078  
              ?___lwtoft 0078               _get_pt$711 00A9               _get_pt$712 00AC  
             _get_pt$713 00B8               _get_pt$714 00AF               _get_pt$715 00B2  
     __size_of_uart_init 000C                ?_get_temp 0067               __stringtab 1000  
      __end_of_bit_shift 14A3        __end_of__npowers_ 1055        __end_of_get_adcon 152B  
        __size_of___bmul 0013          __size_of___ftge 005D                  ___awdiv 129F  
                ___ftadd 0853                  ___awmod 1254                  ___ftdiv 15B9  
                ___ftneg 1140                  ___lldiv 1357          __size_of___wmul 0021  
                ___ftmul 172D                  ___llmod 0807                  ___ftsub 11B7  
                ___fttol 152B               _fround$717 004C               _fround$718 0049  
        __size_of_get_pt 02D7               ??___awtoft 007B               ??___ftpack 0075  
        __size_of_fround 019A               ??___lltoft 007C                  __ptext1 1155  
                __ptext2 0264                  __ptext3 0A8E                  __ptext4 1138  
                __ptext5 1161                  __ptext6 00CA                  __ptext7 116F  
                __ptext8 1254                  __ptext9 129F          __size_of_printf 0598  
             ??___lwtoft 007B              ?__div_to_l_ 0070                  _dpowers 1006  
                _isdigit 1161      __end_of_ad_con_init 1155         ___awmod@dividend 0072  
                get_pt@a 00BE                  get_pt@b 00A6               ??_get_temp 007E  
   end_of_initialization 07FC        __end_of_uart_init 1161          ___lldiv@divisor 0070  
        ___lldiv@counter 007D             _get_temp$716 00C1                  printf@c 00E8  
                printf@f 00D8               bit_shift@i 0077               bit_shift@j 007A  
         __tdiv_to_l_@f1 0070           __tdiv_to_l_@f2 0073               _printf$720 00D2  
          ??__tdiv_to_l_ 0076                _PORTAbits 0005                _PORTDbits 0008  
              _TRISAbits 0085                _TRISDbits 0088              ___ftdiv@exp 002E  
    __size_of__div_to_l_ 0132              ___ftmul@exp 003A           __end_of___bmul 1182  
         __end_of___ftge 1357              _ad_con_init 114A           __end_of___wmul 11F9  
         __end_of_get_pt 1000           __end_of_fround 0264           __end_of_printf 07FC  
    start_initialization 07FC      __end_of__tdiv_to_l_ 00CA          ___llmod@divisor 0070  
        ___llmod@counter 0079                 ??___bmul 007C                 ??___ftge 0076  
               ??___wmul 0074                 ??_get_pt 007E                 ??_fround 0043  
               ??_printf 00CC               fround@prec 004F        __size_of___awtoft 0021  
      __size_of___ftpack 006C        __size_of___lltoft 002B                ___latbits 0002  
      __size_of___lwtoft 0014            __pcstackBANK0 0020            __pcstackBANK1 00A0  
      __size_of_get_temp 00BC                _bit_shift 1421                 ?___awdiv 0077  
               ?___ftadd 0057                 ?___awmod 0070                 ?___ftdiv 0020  
               ?___ftneg 0054                 ?___lldiv 0070                 ?___ftmul 0030  
               ?___llmod 0070                 ?___ftsub 0064                __npowers_ 102E  
               ?___fttol 0049                _get_adcon 14A3                __pstrings 1000  
            __tdiv_to_l_ 0007             ??__div_to_l_ 0076                 ?_isdigit 0070  
              _scale$719 0045           __size_of_scale 029B           __size_of_putch 0008  
         ___wmul@product 0074       __end_of__div_to_l_ 0A8E               ?_bit_shift 0070  
              _uart_init 1155               ?_get_adcon 0040               _ADCON0bits 001F  
            __stringbase 1005        ___wmul@multiplier 0070               printf@flag 00D6  
             printf@fval 00E5                get_temp@T 00C4               printf@prec 00E3  
              get_temp@i 00CA                get_temp@t 00C7               ?_uart_init 0070  
           ?_ad_con_init 0070         __size_of___awdiv 005B         __size_of___ftadd 0109  
       __size_of___awmod 004B         __size_of___ftdiv 00B8         __size_of___ftneg 000A  
       __size_of___lldiv 005E         __size_of___ftmul 00D3         __size_of___llmod 004C  
       __size_of___ftsub 0021         __size_of___fttol 008E                 ___awtoft 1196  
               ___ftpack 13B5       __end_of__stringtab 1006                 ___lltoft 11F9  
            _isdigit$494 0070                 ___lwtoft 1182         __size_of_isdigit 000E  
               __ptext10 0007                 __ptext11 095C                 __ptext20 0D29  
               __ptext12 11D8                 __ptext21 14A3                 __ptext13 11F9  
               __ptext30 114A                 __ptext22 1421                 __ptext14 0807  
               __ptext23 1182                 __ptext15 1357                 __ptext24 172D  
               __ptext16 152B                 __ptext25 15B9                 __ptext17 11B7  
               __ptext26 1196                 __ptext18 12FA                 __ptext27 1140  
               __ptext19 1671                 __ptext28 0853                 __ptext29 13B5  
    get_adcon@my_adres_h 0047      get_adcon@my_adres_l 004B                 __powers_ 1055  
               _get_temp 1671            __size_of_main 0030              ??_bit_shift 0072  
               get_pt@R1 00B5                 get_pt@R2 00A0                 get_pt@T1 00BB  
               get_pt@T2 00A3              ??_get_adcon 0043                printf@exp 00DD  
              printf@val 00D9             bit_shift@buf 007C                putch@byte 0070  
               isdigit@c 0071                 scale@scl 0048         __tdiv_to_l_@exp1 0025  
       __tdiv_to_l_@cntr 0024         __tdiv_to_l_@quot 0020        get_adcon@ad_value 0052  
       ___lldiv@dividend 0074                stringcode 1000              ??_uart_init 0070  
               printf@ap 00D5             ?__tdiv_to_l_ 0070         ___lldiv@quotient 0079  
               stringdir 1000                 stringtab 1000           get_adcon@range 107C  
